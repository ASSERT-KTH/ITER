bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(negative  &&  outPtr  >=  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outPtr  >=  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  >=  INT_0)  {	  if(negative    &&    c!=    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
2	[BUG]  [BUGGY]  if(negative  ||  c!=  INT_0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c!=  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c!=  INT_0)  {	  if(negative    &&    c!=    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
3	[BUG]  [BUGGY]  if(c  >=  INT_0  &&  negative!=  INT_0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  >=  INT_0  &&  negative!=  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  >=  INT_0  &&  negative!=  INT_0)  {	  if(negative    &&    c!=    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
4	[BUG]  [BUGGY]  if(negative  &&  _inputPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  _inputPtr  ==  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _inputPtr  ==  _inputEnd)  {	  if(negative    ||    _inputPtr    ==    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  if(outPtr  >=  outputEnd  &&  negative)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outputEnd  &&  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outputEnd  &&  negative)  {	  if(negative    &&    outPtr    >=    outputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  outputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outPtr  <  outputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  outputEnd)  {	  if(negative    &&    outPtr    >=    outputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  outputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  >=  outputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  outputEnd)  {	  if(negative    &&    outPtr    >=    outputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0    ||    c    >    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
9	[BUG]  [BUGGY]  if(negative  &&  c  <  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  c  <  INT_0  ||  c  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  <  INT_0  ||  c  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0    ||    c    >    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
10	[BUG]  [BUGGY]  if(c  <  =  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  =  INT_0  ||  c  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  =  INT_0  ||  c  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0    ||    c    >    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
11	[BUG]  [BUGGY]  if(negative  ||  c  <  =  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  <  =  INT_0  ||  c  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  <  =  INT_0  ||  c  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0    ||    c    >    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
12	[BUG]  [BUGGY]  if(negative  &&!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&!_tokenIncomplete)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&!_tokenIncomplete)  {	  if(!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
13	[BUG]  [BUGGY]  if(negative  ||  c  <  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  <  INT_0  ||  c  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  <  INT_0  ||  c  >  INT_9)  {	  if(c    <    INT_0    ||    c    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
14	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_0  ||  c  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_0  ||  c  ==  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_0  ||  c  ==  INT_9)  {	  if(c    <    INT_0    ||    c    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
15	[BUG]  [BUGGY]  if(negative  ||  c  <  INT_0  ||  c  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  <  INT_0  ||  c  ==  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  <  INT_0  ||  c  ==  INT_9)  {	  if(c    <    INT_0    ||    c    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
16	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_0)  {	  if(c    <    INT_0    ||    c    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
17	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  negative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_tokenIncomplete  ||  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_tokenIncomplete  ||  negative)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _tokenIncomplete  ||  _inputPtr  >=  outBuf.length)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  if(negative  &&  _inputPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  _inputPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _inputPtr  >=  outBuf.length)  {	  if(negative    &&    _inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
22	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
23	[BUG]  [BUGGY]  if(c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
24	[BUG]  [BUGGY]  if(_tokenIncomplete  &&  negative)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_tokenIncomplete  &&  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_tokenIncomplete  &&  negative)  {	  if(negative    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  if(negative  ||  c  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  <  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  <  INT_0)  {	  if(negative    &&    c    <    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outPtr  <  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  INT_0)  {	  if(negative    &&    c    <    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  if(c  <  INT_0  &&  negative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  &&  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  &&  negative)  {	  if(negative    &&    c    <    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
29	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
30	[BUG]  [BUGGY]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
31	[BUG]  [BUGGY]  if(negative  ||  outPtr  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  <  =  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  <  =  INT_0)  {	  if(negative    &&    outPtr    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
32	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative  ||  outPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative  ||  outPtr  <  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  &&  negative  ||  outPtr  <  _inputEnd)  {	  if(negative    ||    outPtr    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative  ||  outPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative  ||  outPtr  <  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  ||  negative  ||  outPtr  <  _inputEnd)  {	  if(negative    ||    outPtr    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
35	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length  ||  negative  ||  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length  ||  negative  ||  outPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length  ||  negative  ||  outPtr  >=  outBuf.length)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
36	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length  ||  negative)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length  ||  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length  ||  negative)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
37	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outPtr  <  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  outBuf.length)  {	  if(negative    &&    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  if(negative  &&  _inputPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  _inputPtr  <  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _inputPtr  <  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd    &&    negative)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&  _bufferRecyclable)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  >=  _inputEnd  &&  _bufferRecyclable)  {	  if(_inputPtr    >=    _inputEnd    &&    negative)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  if(c!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c!=  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c!=  INT_QUOTE)  {	  if(negative    ||    c!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
41	[BUG]  [BUGGY]  if(c  >=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  >=  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  >=  INT_QUOTE)  {	  if(negative    ||    c!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
42	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&  outPtr  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&  outPtr  >  0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  >=  _inputEnd  &&  outPtr  >  0)  {	  if(_inputPtr    >=    _inputEnd    &&    negative    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
43	[BUG]  [BUGGY]  if(c  <  =  INT_0  &&  c  <  =  negative)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  =  INT_0  &&  c  <  =  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  =  INT_0  &&  c  <  =  negative)  {	  if(c    <    =    negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
44	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  <  =  negative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  ||  c  <  =  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  c  <  =  negative)  {	  if(c    <    =    negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  if(c  <  INT_0  &&  c  <  =  negative)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  &&  c  <  =  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  &&  c  <  =  negative)  {	  if(c    <    =    negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {	  if(!(negative    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
47	[BUG]  [BUGGY]  if(!(negative  &&  c  <  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  INT_QUOTE))  {	  if(!(negative    &&    c    <    =    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  if(!(negative  ||  c  <  =  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c  <  =  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c  <  =  INT_QUOTE))  {	  if(!(negative    &&    c    <    =    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE))  {	  if(!(negative    &&    c    <    =    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outBuf.length))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
51	[BUG]  [BUGGY]  if(!(negative  &&  outPtr  >=  _inputEnd)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  outPtr  >=  _inputEnd)||(outPtr  >=  _inputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  outPtr  >=  _inputEnd)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
52	[BUG]  [BUGGY]  if(!(negative  &&  outPtr  >=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  outPtr  >=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  outPtr  >=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS)  {	  if(c    ==    INT_QUOTE    ||    negative)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outBuf.length))  {	  if(!(negative    &&    c!=    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
55	[BUG]  [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outputEnd))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  outputEnd))  {	  if(!(negative    &&    c!=    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
56	[BUG]  [BUGGY]  if(c  <  =  negative  ||  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  =  negative  ||  c  <  =  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  =  negative  ||  c  <  =  INT_0)  {	  if(negative    ||    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
57	[BUG]  [BUGGY]  if(outPtr  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  ==  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  ==  outBuf.length)  {	  if(!negative    &&    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_MINUS))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
60	[BUG]  [BUGGY]  if(!(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
61	[BUG]  [BUGGY]  if(!(negative  ||  c!=  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c!=  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c!=  INT_QUOTE))  {	  if(!(negative    &&    c!=    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
62	[BUG]  [BUGGY]  if(c  <  INT_0  ||  negative)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  ||  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  negative)  {	  if(negative    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
63	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
64	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
65	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  false);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  false);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  false);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
66	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.endSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.endSegment();  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.endSegment();	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  if(negative  &&  c  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  c  <  =  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  <  =  INT_QUOTE)  {	  if(negative    &&    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
71	[BUG]  [BUGGY]  if(outPtr  >=  _inputEnd  ||  negative)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  _inputEnd  ||  negative)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  _inputEnd  ||  negative)  {	  if(_inputPtr    >=    _inputEnd    ||    negative)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
74	[BUG]  [BUGGY]  if(!negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
75	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  byte[]  outBuf  =  _textBuffer.getCurrentSegment();  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.getCurrentSegment();	  byte[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
76	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.endSegment();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  byte[]  outBuf  =  _textBuffer.endSegment();  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.endSegment();	  byte[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
77	[BUG]  [BUGGY]  if(negative  ||  outPtr  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  ==  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  ==  INT_QUOTE)  {	  if(c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  if(negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
83	[BUG]  [BUGGY]  if(!negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!negative  &&!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
84	[BUG]  [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
85	[BUG]  [BUGGY]  if(negative  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
86	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  negative))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  negative))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  negative))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
87	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative  ||  _inputPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative  ||  _inputPtr  <  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  ||  negative  ||  _inputPtr  <  _inputEnd)  {	  if(negative    ||    _inputPtr    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
88	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  =  INT_0  ||  outPtr  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outPtr  <  =  INT_0  ||  outPtr  >  INT_9)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  =  INT_0  ||  outPtr  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0    ||    c    >    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
89	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outputEnd))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  outputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  false);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  false);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  false);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
91	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
92	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(negative)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(negative)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {  if(negative)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
93	[BUG]  [BUGGY]  if(negative  &&  c  >=  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  c  >=  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  >=  INT_0)  {	  if(c    <    =    negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  >=  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  INT_QUOTE)  {	  if(negative    ||    c!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
95	[BUG]  [BUGGY]  if(negative  &&  c!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  c!=  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c!=  INT_QUOTE)  {	  if(negative    ||    c!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
96	[BUG]  [BUGGY]  if(outPtr  >=  outputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outputEnd)  {	  if(!negative    &&    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
97	[BUG]  [BUGGY]  if(negative  &&  outputPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  outputPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outputPtr  >=  outBuf.length)  {	  if(negative    &&    outPtr    >=    outputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
98	[BUG]  [BUGGY]  if(outPtr  >=  negative  &&  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  negative  &&  outPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  negative  &&  outPtr  >=  outBuf.length)  {	  if(negative    &&    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  <  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
100	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  >  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative)  {  if(outPtr  >  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  >  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
101	[BUG]  [BUGGY]  OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
102	[BUG]  [BUGGY]  if(outPtr  >=  negative  ||  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  negative  ||  outPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  negative  ||  outPtr  >=  outBuf.length)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
103	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
104	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	_textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
106	[BUG]  [BUGGY]  if(negative  ||  c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c!=  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
108	[BUG]  [BUGGY]  if(negative  ||!isIncomplete())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!isIncomplete())  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!isIncomplete())  {	  if(!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
109	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  >=  _tokenIncomplete)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  _tokenIncomplete)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
110	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  _outputEnd)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  >=  _outputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  _outputEnd)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
111	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();  int  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
113	[BUG]  [BUGGY]  if(negative  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
114	[BUG]  [BUGGY]  if(negative  &&  _tokenIncomplete  &&!loadMoreGuaranteed())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  &&  _tokenIncomplete  &&!loadMoreGuaranteed())  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _tokenIncomplete  &&!loadMoreGuaranteed())  {	  if(negative    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
115	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!_tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete  ||  _inputPtr  >=  _inputEnd)  {	  if(negative    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete  ||  outPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!_tokenIncomplete  ||  outPtr  >=  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete  ||  outPtr  >=  _inputEnd)  {	  if(negative    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
117	[BUG]  [BUGGY]  if(negative  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
118	[BUG]  [BUGGY]  if(!(negative  &&  c  <  INT_QUOTE  ||  c  >  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  INT_QUOTE  ||  c  >  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  INT_QUOTE  ||  c  >  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
119	[BUG]  [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  =  INT_QUOTE  ||  c  ==  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
120	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(negative);	  byte[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  negative;	  byte[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
122	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
123	[BUG]  [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!isEnabled(Feature.QUOTE_FIELDS_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
124	[BUG]  [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!isEnabled(Feature.QUOTE_NUMERIC_NUMBERS))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!isEnabled(Feature.QUOTE_NUMERIC_NUMBERS))  {	  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
125	[BUG]  [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
126	[BUG]  [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
127	[BUG]  [BUGGY]  if(!(negative  ||  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  ||  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c!=    INT_QUOTE)||(outPtr    >=    _inputEnd))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
129	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(c,    true);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
130	[BUG]  [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  outBuf.length))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  =  INT_QUOTE)||(outPtr  >=  outBuf.length))  {	  if(!(negative    &&    c    <    =    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  if(outPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  _inputEnd)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  _inputEnd)  {	  if(negative    ||    outPtr    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
132	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
133	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	  if(negative)    {    if(outPtr    >=    outBuf.length)    {    return    _handleInvalidNumberStart(outPtr,    true);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
134	[BUG]  [BUGGY]  if(negative  ||  outPtr  <  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  <  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  <  outBuf.length)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
135	[BUG]  [BUGGY]  if(negative  ||  outPtr  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  outPtr  ==  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  ==  outBuf.length)  {	  if(negative    ||    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
136	[BUG]  [BUGGY]  if(negative  ||  _tokenIncomplete  ||  c  ==  INT_LCURLY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _tokenIncomplete  ||  c  ==  INT_LCURLY)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _tokenIncomplete  ||  c  ==  INT_LCURLY)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
137	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_BACKSLASH)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_BACKSLASH)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_BACKSLASH)  {	  if(negative    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
138	[BUG]  [BUGGY]  if(!negative  ||  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!negative  ||  outPtr  >=  outBuf.length)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!negative  ||  outPtr  >=  outBuf.length)  {	  if(!negative    &&    outPtr    >=    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
139	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE)  {	  if(c    ==    INT_QUOTE    ||    negative)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
140	[BUG]  [BUGGY]  if(negative  =  INT_QUOTE  ||  c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  =  INT_QUOTE  ||  c  ==  INT_QUOTE)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  =  INT_QUOTE  ||  c  ==  INT_QUOTE)  {	  if(c    ==    INT_QUOTE    ||    negative)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
141	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(c  <  INT_0  ||  c  <  =  INT_0)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  c  <  =  INT_0)  {	  if(c    <    =    negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  char[]  outBuf  =  c.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  char[]  outBuf  =  c.emptyAndGetCurrentSegment();  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  c.emptyAndGetCurrentSegment();	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
143	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&!loadMoreGuaranteed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd  &&!loadMoreGuaranteed())  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  >=  _inputEnd  &&!loadMoreGuaranteed())  {	  if(_inputPtr    >=    _inputEnd    &&    negative)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
144	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_LCURLY)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_LCURLY)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete  ||  c  ==  INT_LCURLY)  {	  if(negative    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
145	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_RBRACKET)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete  ||  c  ==  INT_RBRACKET)  {	  if(negative    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_BACKSLASH)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||!_tokenIncomplete  ||  c  ==  INT_BACKSLASH)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete  ||  c  ==  INT_BACKSLASH)  {	  if(negative    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
147	[BUG]  [BUGGY]  if(!(negative  &&  c  <  INT_0  ||  c  >  INT_9))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(!(negative  &&  c  <  INT_0  ||  c  >  INT_9))  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  INT_0  ||  c  >  INT_9))  {	  if(!(negative    &&    c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c!=  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c!=  INT_LBRACKET)  {  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_QUOTE  ||  c!=  INT_LBRACKET)  {	  if(negative    ||    c    ==    INT_QUOTE    ||    c    ==    INT_LBRACKET)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
149	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [BUGGY]      outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }	  if(negative)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
