bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
2	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  ==  _inputEnd)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
3	[BUG]  [BUGGY]  if(!negative)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(!negative)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!negative)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
4	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(_tokenIncomplete)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_tokenIncomplete)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]    [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	  	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
6	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(negative  ||  outPtr  >=  _inputEnd)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  _inputEnd)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
7	[BUG]  [BUGGY]  if(negative  &&  outPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(negative  &&  outPtr  >=  _inputEnd)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  >=  _inputEnd)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
8	[BUG]  [BUGGY]  if(negative  ||  outPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(negative  ||  outPtr  ==  _inputEnd)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  ==  _inputEnd)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
9	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(negative  ||  c  ==  INT_QUOTE)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_QUOTE)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
10	[BUG]  [BUGGY]  if(negative  &&  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(negative  &&  c  <  =  INT_0)  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  <  =  INT_0)  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
11	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);    [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE))  {  [BUGGY]  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE))  {	if  (negative)  {  	non-compiled	[CE]  illegal  start  of  type	54	None	replace
