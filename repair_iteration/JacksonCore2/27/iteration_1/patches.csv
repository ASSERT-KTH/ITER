bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(_inputPtr  >=  _inputEnd  ||  negative)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  ||  negative)  {	  if(negative    ||    outPtr    ==    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  if(negative  &&  outPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  outPtr  ==  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  ==  _inputEnd)  {	  if(negative    ||    outPtr    ==    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  if(negative  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  _tokenIncomplete)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _tokenIncomplete)  {	  if(_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(negative  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||!_tokenIncomplete)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||!_tokenIncomplete)  {	  if(_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  if(negative  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  _tokenIncomplete)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _tokenIncomplete)  {	  if(_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  _inputPtr  >=  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  if(negative  &&  _inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  _inputPtr  >=  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  _inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  _inputPtr  ==  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  ==  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	byte[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!_tokenIncomplete)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!_tokenIncomplete)  {	  if(!negative)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(!negative  &&  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!negative  &&  outPtr  >=  outBuf.length)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!negative  &&  outPtr  >=  outBuf.length)  {	  if(!negative)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  &&  negative)  {	  if(negative    &&    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(_inputPtr  >=  _inputEnd  &&  negative  >  0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(_inputPtr  >=  _inputEnd  &&  negative  >  0)  {	  if(negative    &&    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(c  ==  INT_QUOTE)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE)  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  ||  c  ==  INT_QUOTE))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  ||  c  ==  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  &&  c  <  =  INT_QUOTE))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  <  =  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  if(negative  &&  c  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  c  <  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  <  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  if(c  <  =  negative  &&  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(c  <  =  negative  &&  c  <  =  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  =  negative  &&  c  <  =  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  if(negative  ||  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  c  <  =  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  <  =  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  outPtr  <  =  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  =  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE  ||  negative)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(c  ==  INT_QUOTE  ||  negative)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  ==  INT_QUOTE  ||  negative)  {	  if(negative    ||    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(c  <  INT_0  ||  c  ==  INT_9)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(c  <  INT_0  ||  c  ==  INT_9)  {	  if(negative    ||    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  if(negative  &&  outPtr  >=  outputEnd)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  outPtr  >=  outputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  >=  outputEnd)  {	  if(negative    &&    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  if(negative  &&  c  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  c  ==  INT_QUOTE)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  ==  INT_QUOTE)  {	  if(negative    ||    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  if(negative  ||  c!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  c!=  INT_QUOTE)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c!=  INT_QUOTE)  {	  if(negative    ||    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET)  {	  if(negative    ||    c    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  if(negative  ||  _inputPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  _inputPtr  <  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  _inputPtr  <  _inputEnd)  {	  if(_inputPtr    ==    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  outPtr  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  if(negative  &&  outPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  outPtr  <  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  <  _inputEnd)  {	  if(negative    ||    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c  ==  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c!=  INT_QUOTE)||(outPtr  >=  _inputEnd))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if(negative  &&  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  c  ==  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  ==  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  if(negative  ||  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  outPtr  >=  outBuf.length)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  >=  outBuf.length)  {	  if(negative    ||    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  if(negative  &&  outPtr  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  outPtr  >=  outBuf.length)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  outPtr  >=  outBuf.length)  {	  if(negative    &&    outPtr    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  if(negative  ||  outPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  ||  outPtr  <  _inputEnd)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  ||  outPtr  <  _inputEnd)  {	  if(negative    ||    outPtr    ==    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!negative)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!negative)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(outPtr,  true);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative)  {  if(outPtr  >=  outBuf.length)  {  return  _handleInvalidNumberStart(c,  true);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  if(negative  &&  c  <  =  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  c  <  =  INT_0  ||  c  >  INT_9)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c  <  =  INT_0  ||  c  >  INT_9)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  if(negative  &&  c!=  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(negative  &&  c!=  INT_0)  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(negative  &&  c!=  INT_0)  {	  if(negative    &&    c    <    =    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  boolean  negative  =  (c  ==  INT_MINUS);      [BUGGY]  if(!(negative  &&  c!=  INT_QUOTE))  {  [BUGGY]    outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  return  _handleInvalidNumberStart(c,  true);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1192	1192	2	replace	if(!(negative  &&  c!=  INT_QUOTE))  {	  if(!(negative    &&    c    ==    INT_QUOTE))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
