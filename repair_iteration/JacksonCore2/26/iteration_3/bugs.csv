bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c!=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c!=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER);	  boolean    negative    =(c    <    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
4	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_BUFFER);	  boolean    negative    =(c    <    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
5	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BUFFER);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  char  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(outPtr  >=  INT_QUOTE)&&(c  >=  outBuf.length);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
9	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]!=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]!=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]!=  outBuf.length);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(outPtr    >=    outputEnd)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  if(outPtr  >=  outputCount)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(outPtr  >=  outputCount)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(outPtr  >=  outputCount)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(outPtr    >=    outputEnd)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
12	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  >  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  >  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_FLUSH  ||  c  >  INT_MINUS);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
13	[BUG]  [BUGGY]  char  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
14	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
15	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_MINUS)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_MINUS)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_MINUS)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c!=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
21	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
22	[BUG]  [BUGGY]  char  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
23	[BUG]  [BUGGY]  boolean  negative  =(c  >  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >  INT_MINUS);	  boolean    negative    =(c    >=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);	  char    negative    =(c    ==    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
25	[BUG]  [BUGGY]  Character  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Character  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Character  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);	  char    negative    =(c    ==    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  Char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH);	  char    negative    =(c    ==    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_BUFFER);	  char    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BUFFER)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BUFFER)+  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BUFFER)+  1;	  char    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BUFFER)&  0xFF;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BUFFER)&  0xFF;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BUFFER)&  0xFF;	  char    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_VALUE)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]!=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]!=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]!=  outBuf.length);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
36	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
37	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
38	[BUG]  [BUGGY]  char  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(outPtr  ==  INT_BACKSLASH)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
39	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    <    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
40	[BUG]  [BUGGY]  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	_textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(c    ==    '.')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
41	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
42	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
43	[BUG]  [BUGGY]  Integer  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Integer  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Integer  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(outPtr    >=    outBuf.length)    {    char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
44	[BUG]  [BUGGY]  int  outPtr  =  _textBuffer.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  outPtr  =  _textBuffer.emptyAndGetCurrentSegment();  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  outPtr  =  _textBuffer.emptyAndGetCurrentSegment();	  if(outPtr    >=    outBuf.length)    {    char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
45	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outputPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outputPtr  =  1;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outputPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
50	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c!=  INT_SPACE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c!=  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_BACKSLASH  ||  c!=  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
52	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
53	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
54	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE)&&(c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
55	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE)&&(c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c!=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE)&&(c!=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
57	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
58	[BUG]  [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  <  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  <  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >  INT_QUOTE  ||  c  <  INT_QUOTE);	  boolean    negative    =(c    >    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
59	[BUG]  [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >  INT_QUOTE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    >=    INT_QUOTE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
60	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment(outPtr);	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndSetCurrentSegment();	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  int  negative  =(outBuf.length  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outBuf.length  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outBuf.length  ==  INT_BACKSLASH);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
64	[BUG]  [BUGGY]  int  negative  =(outPtr  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outPtr  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outPtr  ==  INT_BACKSLASH);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
65	[BUG]  [BUGGY]  int  negative  =(c  ==  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  0);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  0);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
66	[BUG]  [BUGGY]  int  negative  =(c  <  =  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  =  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  =  INT_BACKSLASH);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
67	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_QUOTE);	  char    negative    =(c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);	  char    negative    =(c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_LBRACKET);	  char    negative    =(c    ==    INT_LBRACKET);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_CHAR);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_CHAR);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_CHAR);	  char    negative    =(c    ==    INT_LBRACKET);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
71	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_BACKSLASH);	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_FLUSH  ||  c  ==  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_FLUSH  ||  c  ==  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_FLUSH  ||  c  ==  INT_MINUS);	  boolean    negative    =(c    ==    INT_FLUSH    ||    c    ==    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
74	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_VALUE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
75	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
76	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
77	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  1;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
79	[BUG]  [BUGGY]  int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
80	[BUG]  [BUGGY]  String  negative  =(c  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  negative  =(c  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  negative  =(c  ==  INT_VALUE);	  char    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE)&&(outPtr  >=  outBuf.length);	  char    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE)&  0xFF;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE)&  0xFF;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE)&  0xFF;	  char    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE)+  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE)+  1;	  char    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
85	[BUG]  [BUGGY]  int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
86	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  >=  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  >=  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_FLUSH  ||  c  >=  INT_MINUS);	  boolean    negative    =(c    <    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
87	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_RBRACKET);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_RBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_RBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');	  boolean    negative    =(c    ==    INT_VALUE)&&(outBuf[outPtr++]!=    '-');    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
91	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf[outPtr++]!=  '-');	  boolean    negative    =(c    ==    INT_VALUE)&&(outBuf[outPtr++]!=    '-');    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
92	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');	  boolean    negative    =(c    ==    INT_VALUE)&&(outBuf[outPtr++]!=    '-');    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  char  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');	  boolean    negative    =(c    ==    INT_VALUE)&&(outBuf[outPtr++]!=    '-');    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(c  ==  '.'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(c  ==  '.'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '-'    ||    c    ==    '+')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
95	[BUG]  [BUGGY]  boolean  negative  =(c  >>  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >>  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >>  INT_MINUS  ||  c  ==  INT_FLUSH);	  boolean    negative    =(c    >=    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
96	[BUG]  [BUGGY]  int  negative  =(outBuf.length  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outBuf.length  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outBuf.length  ==  INT_VALUE);	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
97	[BUG]  [BUGGY]  int  negative  =(outPtr  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outPtr  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outPtr  ==  INT_VALUE);	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
98	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_QUOTE);	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
99	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_VALUE)&  0xFF;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_VALUE)&  0xFF;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_VALUE)&  0xFF;	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
100	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
101	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_LBRACKET  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
103	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_QUOTE  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
104	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCURLY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCURLY);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCURLY);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
105	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
106	[BUG]  [BUGGY]  int  negative  =(outBuf.length  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outBuf.length  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outBuf.length  ==  INT_BUFFER);	  int    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
107	[BUG]  [BUGGY]  int  negative  =(outPtr  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outPtr  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outPtr  ==  INT_BUFFER);	  int    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
108	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_BUFFER);	  int    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
109	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  0);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  0);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
110	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  _inputEnd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  _inputEnd);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  _inputEnd);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
111	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  outBuf.length);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
112	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_VALUE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE  ||  c  ==  INT_MINUS);	  boolean    negative    =(c    ==    INT_FLUSH    ||    c    ==    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
114	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  _inputEnd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  _inputEnd);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&(outPtr  >=  _inputEnd);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
115	[BUG]  [BUGGY]  boolean  negative  =(c  >  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >  INT_MINUS  ||  c  ==  INT_FLUSH);	  boolean    negative    =(c    >=    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_RBRACKET  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_RBRACKET  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH)+  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_MINUS  ||  c  ==  INT_FLUSH)+  1;	  char    negative    =(c    ==    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
119	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	OutputStream  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;	  if(outPtr    >=    outputEnd)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  boolean  negative  =(c!=  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c!=  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c!=  INT_QUOTE)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
122	[BUG]  [BUGGY]  boolean  negative  =(c!=  INT_QUOTE)&&(c  <  =  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c!=  INT_QUOTE)&&(c  <  =  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c!=  INT_QUOTE)&&(c  <  =  INT_QUOTE);	  boolean    negative    =(c!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
123	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
124	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
125	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  ==  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  ==  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_QUOTE)&&(c  ==  outBuf.length);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  boolean  negative  =(c  >>  INT_QUOTE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >>  INT_QUOTE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >>  INT_QUOTE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c!=    INT_QUOTE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
127	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_VALUE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
128	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  outputEnd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  outputEnd);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  outputEnd);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
129	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >  INT_QUOTE);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
130	[BUG]  [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '-'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '-'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(outPtr  >=  _inputEnd)  {  if(c  ==  '-'  ||  c  ==  '+')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '-'    ||    c    ==    '+')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
131	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >=  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >=  c);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >=  c);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
132	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  <  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  <  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  <  outPtr);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
133	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf[outPtr]  >=  outBuf.length);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
134	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE)&&(c  <  =  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE)&&(c  <  =  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE)&&(c  <  =  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
135	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LCURLY  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LCURLY  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LCURLY  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
136	[BUG]  [BUGGY]  boolean  negative  =(c!=  INT_MINUS)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c!=  INT_MINUS)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c!=  INT_MINUS)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c!=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
137	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  1;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_RBRACKET);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_RBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LBRACKET  ||  c  >  INT_RBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
139	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_BACKSLASH  |  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_BACKSLASH  |  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_BACKSLASH  |  INT_BACKSLASH);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
140	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
141	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
142	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_BUFFER  ||  c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_BUFFER  ||  c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_BUFFER  ||  c  ==  INT_BUFFER);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
143	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
144	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
145	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
146	[BUG]  [BUGGY]  outPtr  =  _textBuffer.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  outPtr  =  _textBuffer.emptyAndGetCurrentSegment();  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	outPtr  =  _textBuffer.emptyAndGetCurrentSegment();	  if(outPtr    >=    outBuf.length)    {    char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
147	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_QUOTE)&  0xFF;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_QUOTE)&  0xFF;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_QUOTE)&  0xFF;	  char    negative    =(c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
148	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_VALUE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  c);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  c);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  c);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
150	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
151	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf[outPtr]  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf[outPtr]  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_BACKSLASH)&&(outBuf[outPtr]  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
153	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf[outPtr]  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf[outPtr]  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf[outPtr]  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
154	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment()  +  1;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
155	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  >  INT_QUOTE)&&(outPtr  >=  outBuf.length);	  boolean    negative    =(c    <    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
156	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
157	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCTOKEN);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCTOKEN);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY  ||  c  ==  INT_LCTOKEN);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
158	[BUG]  [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(outPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
159	[BUG]  [BUGGY]  if(outPtr  ==  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(outPtr  ==  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(outPtr  ==  _inputEnd)  {  if(c  ==  '.')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
160	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH)+  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH)+  1;	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
161	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_BACKSLASH)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_BACKSLASH)&&(outPtr  >=  outBuf.length);	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
162	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_SPACE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
163	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_BACKSLASH  ||  c  ==  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
164	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_LBRACKET)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_LBRACKET)+  1;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_LBRACKET)+  1;	  char    negative    =(c    ==    INT_LBRACKET);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
165	[BUG]  [BUGGY]  String  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  String  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	String  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;	  char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    outPtr    =    0;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
166	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
167	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
168	[BUG]  [BUGGY]  boolean  negative  =(outPtr  <  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  <  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  <  INT_BUFFER);	  boolean    negative    =(c    <    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
169	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_BUFFER  ||  c  ==  INT_QUOTE);	  int    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
170	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
171	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  c);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  c);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  ==  c);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
172	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr]  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
173	[BUG]  [BUGGY]  boolean  negative  =(outPtr  <  INT_MINUS);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  <  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  <  INT_MINUS);	  boolean    negative    =(c    <    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
174	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_QUOTE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_QUOTE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_QUOTE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
175	[BUG]  [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >  INT_QUOTE  ||  c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >  INT_QUOTE  ||  c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
176	[BUG]  [BUGGY]  int  negative  =(c!=  INT_MINUS);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c!=  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c!=  INT_MINUS);	  boolean    negative    =(c!=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
177	[BUG]  [BUGGY]  boolean  negative  =(c!=  INT_MINUS)&&(c  <  =  INT_0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c!=  INT_MINUS)&&(c  <  =  INT_0);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c!=  INT_MINUS)&&(c  <  =  INT_0);	  boolean    negative    =(c!=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
178	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  >=  INT_BUFFER);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
179	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_QUOTE)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_QUOTE)&&(outPtr  >=  outBuf.length);	  char    negative    =(c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
180	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&!Character.isDigit(c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&!Character.isDigit(c);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH)&&!Character.isDigit(c);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
181	[BUG]  [BUGGY]  int  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  INT_MINUS  ||  c  >  INT_FLUSH);	  boolean    negative    =(c    <    INT_MINUS    ||    c    >    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
182	[BUG]  [BUGGY]  Character  negative  =(c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Character  negative  =(c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Character  negative  =(c  ==  INT_BUFFER);	  char    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
183	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_MINUS);	  boolean    negative    =(c    >=    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
184	[BUG]  [BUGGY]  int  negative  =(c  <  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  INT_BUFFER);	  int    negative    =(c    ==    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
185	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_LCURLY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_LCURLY);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_LCURLY);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
186	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  ==  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_FLUSH  ||  c  ==  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_FLUSH  ||  c  ==  INT_MINUS);	  boolean    negative    =(c    ==    INT_FLUSH    ||    c    ==    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
187	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_FLUSH  ||  c  ==  INT_MINUS);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_FLUSH  ||  c  ==  INT_MINUS);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_FLUSH  ||  c  ==  INT_MINUS);	  boolean    negative    =(c    ==    INT_FLUSH    ||    c    ==    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
188	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
189	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_QUOTE)&&(outBuf.length  >  outPtr);	  boolean    negative    =(c    >=    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
190	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >=  INT_RBRACKET);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  >=  INT_RBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LBRACKET  ||  c  >=  INT_RBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
191	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(outPtr    >=    outputEnd)    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
192	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_RBRACKET);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_RBRACKET);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
193	[BUG]  [BUGGY]  boolean  negative  =(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  =  INT_QUOTE  ||  c  >  INT_QUOTE);	  boolean    negative    =(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
194	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_VALUE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
195	[BUG]  [BUGGY]  int  negative  =(c  <  INT_MINUS  ||  c  ==  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  INT_MINUS  ||  c  ==  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  INT_MINUS  ||  c  ==  INT_FLUSH);	  boolean    negative    =(c    <    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
196	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
197	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
198	[BUG]  [BUGGY]  char  negative  =(c  ==  INT_LBRACKET)&&(outPtr  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(c  ==  INT_LBRACKET)&&(outPtr  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(c  ==  INT_LBRACKET)&&(outPtr  >=  outBuf.length);	  char    negative    =(c    ==    INT_LBRACKET);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
199	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.')    {    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
200	[BUG]  [BUGGY]  boolean  negative  =(outPtr  <  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  <  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  <  INT_QUOTE);	  boolean    negative    =(c    <    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
201	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_QUOTE)&&(c  <  =  INT_QUOTE  ||  c  >=  INT_QUOTE);	  boolean    negative    =(c    ==    INT_QUOTE)&&(c    <    =    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
202	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
203	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  >  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  >  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  >  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
204	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_LBRACKET)&&(outBuf.length  >=  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
205	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  <  outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  <  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_LBRACKET)&&(outBuf.length  <  outPtr);	  boolean    negative    =(c    ==    INT_LBRACKET)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
206	[BUG]  [BUGGY]  int  negative  =(outPtr  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outPtr  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outPtr  >=  INT_QUOTE);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
207	[BUG]  [BUGGY]  char  negative  =(outPtr  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  char  negative  =(outPtr  >=  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	char  negative  =(outPtr  >=  INT_QUOTE);	  boolean    negative    =(outPtr    >=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
208	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
209	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_SPACE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_SPACE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_SPACE);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_SPACE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
210	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
211	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_BUFFER);	  boolean    negative    =(c    ==    INT_BUFFER    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
212	[BUG]  [BUGGY]  int  negative  =(c  <  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  INT_BACKSLASH);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
213	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_BACKSLASH  ||  c  ==  INT_QUOTE);	  int    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
214	[BUG]  [BUGGY]  int  negative  =(c  <  INT_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  <  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  <  INT_VALUE);	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
215	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_VALUE  ||  c  ==  INT_QUOTE);	  int    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
216	[BUG]  [BUGGY]  int  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(outPtr  ==  INT_VALUE)&&(outBuf[outPtr++]!=  '-');	  boolean    negative    =(c    ==    INT_VALUE)&&(outBuf[outPtr++]!=    '-');    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
217	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_VALUE  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_VALUE    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
218	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_10);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_10);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_MINUS  ||  c  >  INT_10);	  boolean    negative    =(c    <    INT_MINUS);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
219	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_QUOTE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_LBRACKET  ||  c  ==  INT_QUOTE);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
220	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_LBRACKET);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_QUOTE  ||  c  ==  INT_LBRACKET);	  boolean    negative    =(c    ==    INT_LBRACKET    ||    c    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
221	[BUG]  [BUGGY]  Character  negative  =(c  ==  INT_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Character  negative  =(c  ==  INT_VALUE);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Character  negative  =(c  ==  INT_VALUE);	  char    negative    =(c    ==    INT_VALUE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
222	[BUG]  [BUGGY]  boolean  negative  =(c  >=  INT_MINUS  ||  c  >  INT_FLUSH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  >=  INT_MINUS  ||  c  >  INT_FLUSH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  >=  INT_MINUS  ||  c  >  INT_FLUSH);	  boolean    negative    =(c    >=    INT_MINUS    ||    c    ==    INT_FLUSH);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
223	[BUG]  [BUGGY]  boolean  negative  =(c  <  =  INT_BUFFER);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  =  INT_BUFFER);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  =  INT_BUFFER);	  boolean    negative    =(c    <    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
224	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER));  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BUFFER  ||  c  >  INT_BUFFER));	  boolean    negative    =(c    <    INT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
225	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
226	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  >=  outBuf.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  >=  outBuf.length);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(c  >=  outBuf.length);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
227	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  <  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  <  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  <  outPtr);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
228	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  >=  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  >=  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_BACKSLASH)&&(outBuf.length  >=  outPtr);	  boolean    negative    =(c    ==    INT_BACKSLASH)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
229	[BUG]  [BUGGY]  Character  negative  =(c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Character  negative  =(c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Character  negative  =(c  ==  INT_BACKSLASH);	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
230	[BUG]  [BUGGY]  Char  negative  =(c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  Char  negative  =(c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	Char  negative  =(c  ==  INT_BACKSLASH);	  char    negative    =(c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
231	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  ==  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  ==  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  ==  outPtr);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
232	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  <  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  <  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  <  outPtr);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
233	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  >=  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  >=  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_VALUE)&&(outBuf.length  >=  outPtr);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
234	[BUG]  [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  >  outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  >  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  >=  INT_VALUE)&&(outBuf.length  >  outPtr);	  boolean    negative    =(c    ==    INT_VALUE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
235	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  ==  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
236	[BUG]  [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_BACKSLASH);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  <  INT_BACKSLASH  ||  c  >=  INT_BACKSLASH);	  boolean    negative    =(c    ==    INT_BACKSLASH    ||    c    ==    INT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
237	[BUG]  [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  >=  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  >=  outPtr);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(outPtr  ==  INT_QUOTE)&&(outBuf.length  >=  outPtr);	  boolean    negative    =(c    ==    INT_QUOTE)&&(outPtr    >=    outBuf.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
238	[BUG]  [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY)&&(c  <  =  INT_LCURLY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  boolean  negative  =(c  ==  INT_LCURLY)&&(c  <  =  INT_LCURLY);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	boolean  negative  =(c  ==  INT_LCURLY)&&(c  <  =  INT_LCURLY);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  int  negative  =(c  ==  INT_LCURLY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;      [BUGGY]  int  negative  =(c  ==  INT_LCURLY);  [BUGGY]        if  (negative)  {  outBuf[outPtr++]  =  '-';  if  (_inputPtr  >=  _inputEnd)  {  loadMoreGuaranteed();  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1189	1189	2	replace	int  negative  =(c  ==  INT_LCURLY);	  boolean    negative    =(c    ==    INT_LCURLY);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
