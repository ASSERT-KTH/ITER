bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  outBuf.length  -  _inputEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  -  _inputEnd;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  -  _inputEnd;	  int    end    =    _inputEnd    -    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
2	[BUG]  [BUGGY]  int  end  =  _inputEnd  -  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  -  outBuf.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  -  outBuf.length  -  1;	  int    end    =    _inputEnd    -    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
3	[BUG]  [BUGGY]  int  end  =  outPtr  -  _inputEnd.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  -  _inputEnd.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  -  _inputEnd.length;	  int    end    =    _inputEnd    -    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  int  end  =  _inputEnd  -  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  -  outBuf.length  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  -  outBuf.length  +  1;	  int    end    =    _inputEnd    -    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  int  end  =  outBuf.length  /  intLen;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  /  intLen;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  /  intLen;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
6	[BUG]  [BUGGY]  int  end  =  outBuf.length  -  intLen;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  -  intLen;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  -  intLen;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  c;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  c;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  c;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
8	[BUG]  [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);	  int    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  int  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);	  int    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  char  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen);	  int    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputBuffer.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputBuffer.length;	  int    end    =    _inputBuffer.length    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  int  end  =  outPtr  +  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  _inputBuffer.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  _inputBuffer.length;	  int    end    =    _inputBuffer.length    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  +  outPtr.length  -  1;	  int    end    =    _inputBuffer.length    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr++];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr++];	  int    end    =    _inputPtr    +    outBuf[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  int  end  =  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf[outPtr++];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf[outPtr++];	  int    end    =    _inputPtr    +    outBuf[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outBuf[outPtr++];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outBuf[outPtr++];	  int    end    =    _inputPtr    +    outBuf[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(negative,  outPtr,  outBuf.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(negative,  outPtr,  outBuf.length);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(negative,  outPtr,  outBuf.length);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  c);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(negative,  outPtr);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(negative,  outPtr);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(negative,  outPtr);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr];	  int    end    =    outPtr    +    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  int  end  =  _inputBuffer  +  outPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer  +  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer  +  outPtr;	  int    end    =    outPtr    +    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  int  end  =  _inputPtr  /  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  /  outBuf.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  /  outBuf.length;	  int    end    =    outBuf.length    /    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  /  outPtr;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  /  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  /  outPtr;	  int    end    =    outBuf.length    /    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  int  end  =  outBuf.length  /  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  /  _inputPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  /  _inputPtr  +  1;	  int    end    =    outBuf.length    /    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  int  end  =  _inputPtr.length  /  outBuf.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr.length  /  outBuf.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr.length  /  outBuf.length;	  int    end    =    outBuf.length    /    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  int  end  =  outPtr  +  _inputEnd.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  _inputEnd.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  _inputEnd.length  -  1;	  int    end    =    outPtr    +    _inputEnd.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  char  end  =  outPtr  +  _inputEnd.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  outPtr  +  _inputEnd.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  outPtr  +  _inputEnd.length;	  int    end    =    outPtr    +    _inputEnd.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  int  end  =  outBuf.length  /  _inputEnd;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  /  _inputEnd;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  /  _inputEnd;	  int    end    =    outBuf.length    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  char  end  =  _inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputStream.readLine();  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputStream.readLine();	  int    end    =    _inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
30	[BUG]  [BUGGY]  Integer  end  =  _inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _inputStream.readLine();  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _inputStream.readLine();	  int    end    =    _inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
31	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1];	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
32	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr.length  -  1;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
33	[BUG]  [BUGGY]  char  end  =  _inputBuffer[outPtr  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputBuffer[outPtr  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputBuffer[outPtr  +  outPtr.length;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
34	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr.length];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr.length];	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
35	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outPtr  -  1;	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  +  outPtr  -  1;	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr++]  +  _inputPtr  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr++]  +  _inputPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr++]  +  _inputPtr  -  1;	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
38	[BUG]  [BUGGY]  int  end  =  _inputBuffer  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer  +  outPtr  -  1;	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
39	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputEnd  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputEnd  -  1;	  int    end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outPtr  -  1;	  int    end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  +  outPtr  +  1;	  int    end    =    outBuf.length    +    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  int  end  =  outBuf.length  -  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  -  _inputPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  -  _inputPtr  +  1;	  int    end    =    outBuf.length    +    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outPtr.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outPtr.length  -  1;	  int    end    =    _inputEnd    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  char  end  =  _inputEnd  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputEnd  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputEnd  +  outPtr.length;	  int    end    =    _inputEnd    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outPtr  +  1;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  char  end  =  _inputEnd  +  outPtr;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputEnd  +  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputEnd  +  outPtr;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
47	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputBuffer.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputBuffer.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputBuffer.length  -  1;	  int    end    =    _inputBuffer.length    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  int  end  =  _inputBuf.length  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuf.length  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuf.length  +  outPtr  -  1;	  int    end    =    outPtr    +    _inputBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
49	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputBuf.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputBuf.length  -  1;	  int    end    =    outPtr    +    _inputBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
50	[BUG]  [BUGGY]  char  end  =  outPtr  +  _inputBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  outPtr  +  _inputBuf.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  outPtr  +  _inputBuf.length  -  1;	  int    end    =    outPtr    +    _inputBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
51	[BUG]  [BUGGY]  int  end  =  outPtr  +  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  _inputPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  _inputPtr  +  1;	  int    end    =    _inputPtr    +    outPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
52	[BUG]  [BUGGY]  int  end  =  _inputBuffer  +  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer  +  outPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer  +  outPtr  +  1;	  int    end    =    _inputPtr    +    outPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
53	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  intLen);	  Integer    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(negative,  outBuf,  outPtr,  intLen);	  Integer    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
55	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);	  Integer    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);	  int    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  int  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);	  int    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  char  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen);	  int    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputStream.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputStream.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputStream.length;	  int    end    =    _inputStream.length    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
60	[BUG]  [BUGGY]  int  end  =  _inputStream.length  +  outBuf[outPtr];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputStream.length  +  outBuf[outPtr];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputStream.length  +  outBuf[outPtr];	  int    end    =    _inputStream.length    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
61	[BUG]  [BUGGY]  int  end  =  _inputStream.length  +  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputStream.length  +  outBuf[outPtr++];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputStream.length  +  outBuf[outPtr++];	  int    end    =    _inputStream.length    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
62	[BUG]  [BUGGY]  int  end  =  outBuf.length  -  _inputPtr  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  -  _inputPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  -  _inputPtr  -  1;	  int    end    =    outBuf.length    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  int  end  =  outBuf.length  /  _inputPtr  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  /  _inputPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  /  _inputPtr  -  1;	  int    end    =    outBuf.length    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr  +  1);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr  +  1);	  Integer    end    =    _parserNumber2(outBuf,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr);	  Integer    end    =    _parserNumber2(outBuf,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
66	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  1;	  int    end    =    _inputPtr    +    outputCount;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
67	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outputEnd;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outputEnd;	  int    end    =    _inputPtr    +    outputCount;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
68	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  inputEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  inputEnd;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  inputEnd;	  int    end    =    _inputPtr    +    outputCount;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
69	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outPtr.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outPtr.length  -  1;	  int    end    =    _inputPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  _inputPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  _inputPtr.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  _inputPtr.length  -  1;	  int    end    =    outBuf.length    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]  int  end  =  outBuf.length  -  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  -  _inputPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  -  _inputPtr.length;	  int    end    =    outBuf.length    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  int  end  =  _inputPtr  -  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  -  outBuf.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  -  outBuf.length;	  int    end    =    outBuf.length    -    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  -  outPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  -  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  -  outPtr;	  int    end    =    outBuf.length    -    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  intLen);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(negative,  outBuf,  outPtr,  intLen);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  String  end  =  outPtr  +  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  String  end  =  outPtr  +  _inputPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	String  end  =  outPtr  +  _inputPtr.length;	  char    end    =    outPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
78	[BUG]  [BUGGY]  char  end  =  _inputPtr  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputPtr  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputPtr  +  outPtr.length;	  char    end    =    outPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
79	[BUG]  [BUGGY]  char  end  =  _inputBuffer.length  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputBuffer.length  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputBuffer.length  +  outPtr.length;	  char    end    =    outPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
80	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outputPtr.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outputPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outputPtr.length;	  int    end    =    outputPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
81	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  +  outputPtr.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  +  outputPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  +  outputPtr.length;	  int    end    =    outputPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
82	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outputPtr.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outputPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outputPtr.length;	  int    end    =    outputPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outBuf.length  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outBuf.length  +  1;	  int    end    =    outBuf.length    +    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  intLen  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  intLen  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  intLen  +  1;	  int    end    =    outBuf.length    +    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  int  end  =  outPtr  +  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  _inputEnd  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  _inputEnd  -  1;	  int    end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  positive,  intLen);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);	  int    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  int  end  =  _inputStream.length  +  outPtr;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputStream.length  +  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputStream.length  +  outPtr;	  int    end    =    _inputStream.length    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
90	[BUG]  [BUGGY]  int  end  =  outputPtr  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outputPtr  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outputPtr  +  outPtr.length;	  int    end    =    outputPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
91	[BUG]  [BUGGY]  int  end  =  outputPtr  +  _inputEnd.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outputPtr  +  _inputEnd.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outputPtr  +  _inputEnd.length;	  int    end    =    outputPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
92	[BUG]  [BUGGY]  int  end  =  _inputStream.readLine(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputStream.readLine(outPtr);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputStream.readLine(outPtr);	  int    end    =    _inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
93	[BUG]  [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);	  int    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
94	[BUG]  [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative,  intLen);	  int    end    =    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
95	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  1;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr);	  int    end    =    outPtr    +    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  int  end  =  outPtr  +  intLen  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  intLen  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  intLen  -  1;	  int    end    =    outPtr    +    _inputBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
98	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(outBuf,  outPtr,  negative,  intLen  +  1);	  Integer    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
99	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  negative);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr,  negative);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(outBuf,  outPtr,  negative);	  Integer    end    =    _parserNumber2(outBuf,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  intLen);	  Integer    end    =    _parserNumber2(outBuf,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  int  end  =  outPtr  -  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  -  _inputPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  -  _inputPtr;	  int    end    =    outBuf.length    -    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
102	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outputLen;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outputLen;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outputLen;	  int    end    =    _inputPtr    +    outputCount;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
103	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  intLen  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  intLen  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  intLen  -  1;	  int    end    =    outBuf.length    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
104	[BUG]  [BUGGY]  int  end  =  outBuf[outPtr  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf[outPtr  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf[outPtr  +  outPtr.length;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outputCount.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outputCount.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outputCount.length;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
106	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outputEnd.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outputEnd.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outputEnd.length;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
107	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outPtr  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outPtr  +  2;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outPtr  +  2;	  int    end    =    _inputPtr    +    outPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
108	[BUG]  [BUGGY]  int  end  =  _inputPtr  +  outPtr  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputPtr  +  outPtr  *  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputPtr  +  outPtr  *  1;	  int    end    =    _inputPtr    +    outPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
109	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  intLen;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  intLen;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  intLen;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
110	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  outputPtr;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  outputPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  outputPtr;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
111	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  outPtr  -  1];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  outPtr  -  1];	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
112	[BUG]  [BUGGY]  int  end  =  outPtr.length  +  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr.length  +  _inputBuffer.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr.length  +  _inputBuffer.length;	  int    end    =    _inputBuffer.length    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  int  end  =  outPtr  -  _inputEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  -  _inputEnd;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  -  _inputEnd;	  int    end    =    _inputEnd    -    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
114	[BUG]  [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber(outBuf,  outPtr);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber(outBuf,  outPtr);	  Integer    end    =    _parserNumber2(outBuf,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
115	[BUG]  [BUGGY]  char  end  =  _inputPtr  +  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  _inputPtr  +  outBuf[outPtr++];  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  _inputPtr  +  outBuf[outPtr++];	  int    end    =    _inputPtr    +    outBuf[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  int  end  =  outPtr  +  intLen;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  intLen;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  intLen;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
117	[BUG]  [BUGGY]  int  end  =  outBuf.length  +  outPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outBuf.length  +  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outBuf.length  +  outPtr;	  int    end    =    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
118	[BUG]  [BUGGY]  int  end  =  _inputBuffer.end  +  outPtr;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.end  +  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.end  +  outPtr;	  int    end    =    outPtr    +    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
119	[BUG]  [BUGGY]  int  end  =  _inputEnd  -  outPtr;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  -  outPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  -  outPtr;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
120	[BUG]  [BUGGY]  int  end  =  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  +  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  +  1;	  int    end    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
121	[BUG]  [BUGGY]  int  end  =  _inputStream.length  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputStream.length  +  outBuf.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputStream.length  +  outBuf.length  -  1;	  int    end    =    _inputStream.length    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
122	[BUG]  [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _parserNumber(outBuf,  outPtr,  c,  negative,  intLen);	  int    end    =    _parserNumber(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  char  end  =  outBuf.length  -  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  char  end  =  outBuf.length  -  _inputPtr;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	char  end  =  outBuf.length  -  _inputPtr;	  int    end    =    outBuf.length    -    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
124	[BUG]  [BUGGY]  int  end  =  _inputEnd  /  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  /  outBuf.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  /  outBuf.length;	  int    end    =    outBuf.length    /    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
125	[BUG]  [BUGGY]  int  end  =  _inputBuffer[outPtr  +  inputEnd.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer[outPtr  +  inputEnd.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer[outPtr  +  inputEnd.length;	  int    end    =    _inputBuffer[outPtr    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
126	[BUG]  [BUGGY]  int  end  =  _inputBuffer.end  +  outPtr  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.end  +  outPtr  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.end  +  outPtr  -  1;	  int    end    =    outPtr    +    _inputPtr    -    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
127	[BUG]  [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputBuffer.length  +  outPtr++;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputBuffer.length  +  outPtr++;	  int    end    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
128	[BUG]  [BUGGY]  int  end  =  _inputEnd  -  outPtr.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  _inputEnd  -  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  _inputEnd  -  outPtr.length;	  int    end    =    _inputEnd    +    outPtr.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative);  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Integer  end  =  _parserNumber2(outBuf,  outPtr,  c,  negative);	  Integer    end    =    _parserNumber2(outBuf,    outPtr,    negative);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
130	[BUG]  [BUGGY]  Char  end  =  _inputBuffer.length  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  Char  end  =  _inputBuffer.length  +  outPtr.length;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	Char  end  =  _inputBuffer.length  +  outPtr.length;	  char    end    =    outPtr    +    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
131	[BUG]  [BUGGY]  int  end  =  outPtr  +  _inputBuffer.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;        [BUGGY]  int  end  =  outPtr  +  _inputBuffer.length  -  1;  [BUGGY]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1215	1215	2	replace	int  end  =  outPtr  +  _inputBuffer.length  -  1;	  int    end    =    _inputBuffer.length    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
