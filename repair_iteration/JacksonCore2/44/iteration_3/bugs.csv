bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(out  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(out  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(out	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
4	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
5	[BUG]  [BUGGY]  return  _parseFloat(c,  outPtr,  c,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(c,  outPtr,  c,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(c,  outPtr,  c,  _quad1,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputPtr  -  1);	  return    resetInt(negative,    0,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
7	[BUG]  [BUGGY]  return  resetInt(negative,  intLen,  _inputBuffer.length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen,  _inputBuffer.length  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen,  _inputBuffer.length  -  1);	  return    resetInt(negative,    0,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
8	[BUG]  [BUGGY]  return  resetInt(c,  0,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  intLen  -  1);	  return    resetInt(negative,    0,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
9	[BUG]  [BUGGY]  return  resetInt(c,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outPtr,  c,  negative,  intLen);	  return    resetInt(c,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  return  _parseFloat(c,  outPtr,  c,  -1,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(c,  outPtr,  c,  -1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(c,  outPtr,  c,  -1,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
11	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
12	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  -1,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  -1,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  -1,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
13	[BUG]  [BUGGY]  return  _parseFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
14	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
15	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  return  _resetInt(c,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  negative,  intLen  -  1);	  return    _resetInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
17	[BUG]  [BUGGY]  return  _resetInt(c,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  intLen  -  1);	  return    _resetInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
18	[BUG]  [BUGGY]  return  _resetInt(outBuf,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  intLen  -  1);	  return    _resetInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
19	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  return    _parseFloat(c,    outPtr,    outBuf,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }	  return    _parseFloat(c,    outPtr,    outBuf,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    resetFloat(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
22	[BUG]  [BUGGY]  return  _resetFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    resetFloat(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
23	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  c,  positive,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  c,  positive,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  c,  positive,  intLen);	  return    resetFloat(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
24	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  intLen);	  return    resetInt(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
25	[BUG]  [BUGGY]  return  resetInt(c,  intLen  +  1,  negative);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  intLen  +  1,  negative);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  intLen  +  1,  negative);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  outPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  c,  outPtr);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  _quad1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  _quad1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  c,  _quad1);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  return  resetInt(c,  0,  negative,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  negative,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  negative,  _inputPtr);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  return  _parseInt(negative,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(negative,  0,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(negative,  0,  _inputPtr);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  return  resetInt(outBuf,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  0,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  0,  _inputPtr);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  return  resetInt(c,  negative,  _inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  negative,  _inputBuffer,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  negative,  _inputBuffer,  _inputPtr);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  return  resetInt(negative,  _inputBuffer,  _inputPtr,  c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  _inputBuffer,  _inputPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  _inputBuffer,  _inputPtr,  c);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  return  resetInt(negative,  _inputBuffer,  _inputPtr  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  _inputBuffer,  _inputPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  _inputBuffer,  _inputPtr  +  1);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  return  resetInt(negative,  _inputBuffer,  c,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  _inputBuffer,  c,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  _inputBuffer,  c,  _inputPtr);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
35	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1  +  intLen  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1  +  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _quad1  +  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  return  _parseFloat(c,  outPtr,  outBuf,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(c,  outPtr,  outBuf,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(c,  outPtr,  outBuf,  negative,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
38	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  /  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  /  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  /  intLen  -  1);	  return    resetInt(negative,    intLen    *    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
39	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  c  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  c  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  c  -  1);	  return    resetInt(negative,    intLen    *    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
40	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  _inputBuffer.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  _inputBuffer.length  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  _inputBuffer.length  -  1);	  return    resetInt(negative,    intLen    *    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  _inputPtr  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  _inputPtr  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  _inputPtr  -  1);	  return    resetInt(negative,    intLen    *    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
42	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  c);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  _inputPtr);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  negative,  intLen);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  return  _resetFloat(negative,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetFloat(negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetFloat(negative,  intLen);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
46	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  negative,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
47	[BUG]  [BUGGY]  return  _parseInt(outBuf,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
48	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
49	[BUG]  [BUGGY]  return  _parseInt(c,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(c,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(c,  negative,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
50	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _count,  intLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _count,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _count,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
51	[BUG]  [BUGGY]  return  _parseFloat(c,  outPtr,  outBuf,  _inputBuffer,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(c,  outPtr,  outBuf,  _inputBuffer,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(c,  outPtr,  outBuf,  _inputBuffer,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
52	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
53	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(c,  negative,  intLen);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
54	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(c,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(c,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(c,  intLen);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
55	[BUG]  [BUGGY]  return  _textBuffer.resetInt(negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _textBuffer.resetInt(negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _textBuffer.resetInt(negative,  intLen);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(outBuf,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(outBuf,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(outBuf,  intLen);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
57	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  +  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  +  2);	  return    resetFloat(negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  +  1,  c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  +  1,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  +  1,  c);	  return    resetFloat(negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  negative,  intLen  +  1);	  return    resetFloat(negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  return  _resetInt(c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  negative,  intLen);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
61	[BUG]  [BUGGY]  return  _resetInt(outBuf,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  intLen);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
62	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  negative,  intLen);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
63	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputBuffer.length  -  _inputPtr);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
64	[BUG]  [BUGGY]  return  resetInt(c,  0,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  _inputBuffer.length);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
65	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  0,  _inputBuffer.length);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
66	[BUG]  [BUGGY]  return  _parseInt(negative,  0,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(negative,  0,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(negative,  0,  _inputBuffer.length);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
67	[BUG]  [BUGGY]  return  _resetInt(c,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  _quad1,  intLen);	  return    resetInt(c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
68	[BUG]  [BUGGY]  return  resetInt(c,  _quad1,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  _quad1,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  _quad1,  intLen  +  1);	  return    resetInt(c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
69	[BUG]  [BUGGY]  return  resetInt(c,  _quad1,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  _quad1,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  _quad1,  _inputPtr);	  return    resetInt(c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  -  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  -  2);	  return    resetFloat(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
71	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  -  1,  c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  -  1,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  -  1,  c);	  return    resetFloat(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
72	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  0,  negative);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  0,  negative);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  0,  negative);	  return    resetInt(negative,    0,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
73	[BUG]  [BUGGY]  return  resetInt(c,  0,  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  outPtr);	  return    resetInt(negative,    0,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
74	[BUG]  [BUGGY]  return  resetInt(outBuf,  0,  outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  0,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  0,  outPtr);	  return    resetInt(negative,    0,    outPtr);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
75	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  -  1);	  return    resetInt(negative,    intLen    -    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  return  _parseInt(negative,  intLen  -  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(negative,  intLen  -  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(negative,  intLen  -  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    -    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  return  _resetInt(negative,  intLen  -  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  intLen  -  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  intLen  -  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    -    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  _inputBuffer.length  +  1);	  return    resetInt(negative,    intLen    -    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  2);	  return    resetInt(negative,    intLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  return  resetInt(c,  0,  negative);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  negative);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  negative);	  return    resetInt(negative,    0,    c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  return  resetInt(negative,  0,  c  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  c  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  c  +  1);	  return    resetInt(negative,    0,    c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
83	[BUG]  [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
84	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
85	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  intLen);	  return    resetInt(c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputPtr  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  _inputPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  _inputPtr  +  1);	  return    resetInt(negative,    intLen    -    1    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
87	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  3);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  3);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  3);	  return    resetInt(negative,    intLen    +    3);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
88	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  0,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  0,  intLen);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
90	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  -1,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  -1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  -1,  intLen);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
91	[BUG]  [BUGGY]  return  resetInt(c,  outPtr,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outPtr,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outPtr,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
92	[BUG]  [BUGGY]  return  resetInt(c,  outBuf,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outBuf,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outBuf,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  return  resetInt(c,  _inputBuffer,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  _inputBuffer,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  _inputBuffer,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  return  resetInt(c,  intLen,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  intLen,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  intLen,  negative,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c);	  return    resetInt(outBuf,    outPtr,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
96	[BUG]  [BUGGY]  return  resetInt(negative,  outBuf,  outPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  outBuf,  outPtr,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  outBuf,  outPtr,  _inputPtr);	  return    resetInt(outBuf,    outPtr,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
97	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
98	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
99	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputPtr  -  intLen);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  return  resetInt(_inputBuffer,  0,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(_inputBuffer,  0,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(_inputBuffer,  0,  intLen  -  _inputPtr);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  return  resetInt(c,  0,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  intLen  -  _inputPtr);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
104	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
105	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  1);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
106	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  _inputPtr);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
107	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  +  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  +  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  intLen  +  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  return  _parseInt(negative,  intLen  +  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(negative,  intLen  +  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(negative,  intLen  +  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
109	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  negative);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  negative);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  negative);	  return    _parseInt(outBuf,    outPtr,    c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
110	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  positive);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  positive);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  positive);	  return    _parseInt(outBuf,    outPtr,    c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
111	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  intLen);	  return    resetInt(outBuf,    intLen);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
112	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr);	  return    resetInt(outBuf,    intLen);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
114	[BUG]  [BUGGY]  return  _parseFloat(c,  outPtr,  c,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(c,  outPtr,  c,  0,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(c,  outPtr,  c,  0,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
115	[BUG]  [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  0,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
116	[BUG]  [BUGGY]  return  resetInt(negative,  0,  intLen  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  intLen  +  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  intLen  +  2);	  return    resetInt(negative,    0,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  return  resetInt(c,  0,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  intLen  +  1);	  return    resetInt(negative,    0,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentLength(outBuf,  outPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentLength(outPtr  +  1);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf.length);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentLength(outBuf.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentLength(outBuf.length);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(c);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentLength(c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentLength(c);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
122	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr);	  return    resetInt(outBuf,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
123	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  _inputEnd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  _inputEnd);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  _inputEnd);	  return    resetInt(outBuf,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
124	[BUG]  [BUGGY]  return  _resetInt(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  outPtr);	  return    resetInt(outBuf,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
125	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  -  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  -  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  -  _inputBuffer.length);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
126	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  intLen  -  _inputPtr);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
127	[BUG]  [BUGGY]  return  resetFloat(outBuf,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  intLen  -  _inputPtr);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
128	[BUG]  [BUGGY]  return  _parseFloat(negative,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(negative,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(negative,  intLen  -  _inputPtr);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
129	[BUG]  [BUGGY]  return  resetInt(c,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  0,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  0,  _inputPtr);	  return    resetInt(c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  return  resetInt(outBuf,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  0,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  0,  intLen);	  return    resetInt(c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
131	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  intLen);	  return    _parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
132	[BUG]  [BUGGY]  return  _parseInt(outBuf,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  intLen);	  return    _parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
133	[BUG]  [BUGGY]  return  _parseInt(c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(c,  negative,  intLen);	  return    _parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
134	[BUG]  [BUGGY]  return  _resetInt(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  outPtr,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  outPtr,  intLen);	  return    resetInt(c,    outBuf,    intLen);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
135	[BUG]  [BUGGY]  return  resetInt(c,  outPtr,  outBuf,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outPtr,  outBuf,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outPtr,  outBuf,  negative,  intLen);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
136	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  negative,  intLen  +  1);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
137	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _inputEnd,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _inputEnd,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  _inputEnd,  intLen);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
138	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
139	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
140	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
141	[BUG]  [BUGGY]  return  resetInt(c,  _inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  _inputBuffer,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  _inputBuffer,  _inputPtr);	  return    resetInt(c,    negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
142	[BUG]  [BUGGY]  return  resetInt(c,  outBuf,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outBuf,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outBuf,  _inputPtr);	  return    resetInt(c,    negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
143	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _currToken,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _currToken,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _currToken,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
144	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _icUTF8,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _icUTF8,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _icUTF8,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
145	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputBuffer.length  -  1);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
146	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputBuffer.length  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputBuffer.length  +  1);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
147	[BUG]  [BUGGY]  return  resetInt(negative,  0,  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  outBuf.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  outBuf.length);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
148	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _quad1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _quad1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _quad1);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
149	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  outPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  outPtr);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
150	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  outBuf,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  outBuf,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  outBuf,  c);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
151	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  outPtr  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  outPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  outPtr  +  1);	  return    resetInt(negative,    intLen    -    1    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
152	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  _quad1  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  _quad1  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  _quad1  +  1);	  return    resetInt(negative,    intLen    -    1    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
153	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  1,  outPtr.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  1,  outPtr.length  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  1,  outPtr.length  +  1);	  return    resetInt(negative,    intLen    -    1    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
154	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
155	[BUG]  [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(outPtr  >=  _inputEnd)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(outPtr  >=  _inputEnd)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
156	[BUG]  [BUGGY]  if(c  <  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
157	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  _quad1,  intLen);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
158	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
159	[BUG]  [BUGGY]  return  resetInt(negative,  0,  outPtr  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  outPtr  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  outPtr  -  1);	  return    resetInt(negative,    0,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  positive,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  positive,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  positive,  intLen);	  return    _parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
161	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputPtr  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputPtr  -  _inputPtr);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  _inputPtr);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  return  resetInt(negative,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  _quad1,  intLen);	  return    resetInt(c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
164	[BUG]  [BUGGY]  return  resetInt(outBuf,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  _quad1,  intLen);	  return    resetInt(c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
165	[BUG]  [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  0x7F)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
166	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
167	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  return  _parseFloat(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
168	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
169	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
170	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
171	[BUG]  [BUGGY]  return  _resetInt(negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  intLen  +  1);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
172	[BUG]  [BUGGY]  return  _resetInt(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  outPtr,  negative,  intLen);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
173	[BUG]  [BUGGY]  return  _resetInt(outBuf,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  negative,  intLen);	  return    _resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
174	[BUG]  [BUGGY]  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
175	[BUG]  [BUGGY]  c  =  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  c  =  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	c  =  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
176	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  intLen  +  1);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
177	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(outBuf,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(outBuf,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(outBuf,  negative,  intLen);	  return    _inputBuffer.resetInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
178	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  /  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  /  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  /  2);	  return    resetInt(negative,    intLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
179	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  -  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  -  2);	  return    resetInt(negative,    intLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
180	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentLength(outBuf,  outputPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
181	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr,  negative,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr,  negative,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr,  negative,  intLen  -  _inputPtr);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
182	[BUG]  [BUGGY]  return  resetInt(negative,  intLen,  c);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen,  c);	  return    resetInt(c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
183	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  0);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  0);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
184	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1  -  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1  -  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _quad1  -  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
185	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  *  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  *  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  *  intLen  -  1);	  return    resetFloat(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
186	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  -  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  -  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  -  1,  _inputBuffer.length);	  return    resetFloat(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
187	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  negative,  intLen  +  1);	  return    resetInt(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
188	[BUG]  [BUGGY]  return  resetInt(negative,  0,  _inputPtr  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  _inputPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  _inputPtr  +  1);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
189	[BUG]  [BUGGY]  return  _resetInt(negative,  intLen  *  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  intLen  *  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  intLen  *  intLen  -  1);	  return    _resetInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
190	[BUG]  [BUGGY]  return  resetInt(negative,  intLen,  _inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen,  _inputBuffer,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen,  _inputBuffer,  _inputPtr);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
191	[BUG]  [BUGGY]  return  resetInt(negative,  outBuf,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  outBuf,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  outBuf,  _inputPtr);	  return    resetInt(negative,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
192	[BUG]  [BUGGY]  return  resetInt(negative,  0,  outPtr  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  outPtr  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  outPtr  +  1);	  return    resetInt(negative,    0,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
193	[BUG]  [BUGGY]  return  resetFloat(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  outPtr);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
194	[BUG]  [BUGGY]  return  resetFloat(outBuf,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(outBuf,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(outBuf,  _inputPtr);	  return    resetFloat(negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
195	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  +  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  +  3);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  +  3);	  return    resetFloat(negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
196	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  negative,  _inputPtr);	  return    resetInt(c,    negative,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
197	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  negative,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
198	[BUG]  [BUGGY]  return  resetInt(c,  outPtr,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  outPtr,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  outPtr,  negative,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
199	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _inputBuffer.length  -  outPtr);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
200	[BUG]  [BUGGY]  return  resetInt(outBuf,  _inputBuffer,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  _inputBuffer,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  _inputBuffer,  intLen);	  return    resetInt(c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
201	[BUG]  [BUGGY]  return  resetInt(negative,  _inputBuffer,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  _inputBuffer,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  _inputBuffer,  intLen);	  return    resetInt(c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
202	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  +  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  +  2);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  +  2);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
203	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  value,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  value,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  value,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
204	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  positive,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
205	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  outputEnd,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  outputEnd,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  outputEnd,  intLen);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
206	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr  -  1,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr  -  1,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr  -  1,  negative,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
207	[BUG]  [BUGGY]  return  _parseInt(outBuf,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  negative,  intLen  -  1);	  return    _parseInt(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
208	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  *  _quad1  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  *  _quad1  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  *  _quad1  -  1);	  return    resetInt(negative,    intLen    *    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
209	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _inputPtr);	  return    resetInt(negative,    intLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
210	[BUG]  [BUGGY]  return  _resetToken(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetToken(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetToken(outBuf,  outPtr,  c,  negative,  intLen);	  return    resetFloat(c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
211	[BUG]  [BUGGY]  return  _resetInt(negative,  0,  c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  0,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  0,  c);	  return    resetInt(negative,    0,    c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
212	[BUG]  [BUGGY]  return  _resetInt(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  outPtr,  c,  negative,  intLen);	  return    resetInt(c,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
213	[BUG]  [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _inputBuffer,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseInt(outBuf,  outPtr,  c,  _inputBuffer,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseInt(outBuf,  outPtr,  c,  _inputBuffer,  negative,  intLen);	  return    _parseInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
214	[BUG]  [BUGGY]  return  _resetFloat(negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetFloat(negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetFloat(negative,  intLen  -  1);	  return    resetFloat(negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
215	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  intLen  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  intLen  -  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  0,  intLen  -  _inputPtr);	  return    resetInt(negative,    0,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
216	[BUG]  [BUGGY]  return  _resetInt(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  outPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  outPtr,  c);	  return    _resetInt(c,    intLen);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
217	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(outBuf,  outPtr);	  return    resetInt(outBuf,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
218	[BUG]  [BUGGY]  return  _inputBuffer.setCurrentLength(outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.setCurrentLength(outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.setCurrentLength(outPtr);	  return    resetInt(outBuf,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
219	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  _quad1,  negative,  intLen);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
220	[BUG]  [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _quad1,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(outBuf,  outPtr,  c,  _quad1,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(outBuf,  outPtr,  c,  _quad1,  intLen);	  return    resetInt(outBuf,    outPtr,    c,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
221	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(c,    outPtr,    outBuf,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
222	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  else  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  return    _parseFloat(c,    outPtr,    outBuf,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
223	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  return    _parseFloat(c,    outPtr,    outBuf,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
224	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
225	[BUG]  [BUGGY]  return  resetInt(c,  _quad1,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(c,  _quad1,  intLen  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(c,  _quad1,  intLen  -  1);	  return    resetInt(c,    negative,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
226	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _currentLength,  intLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _currentLength,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _inputBuffer,  _currentLength,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
227	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(outBuf,  outPtr,  _inputPtr);	  return    resetInt(outBuf,    outPtr,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
228	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(outBuf,  outPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(outBuf,  outPtr,  c);	  return    resetInt(outBuf,    outPtr,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
229	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
230	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  else  {  _textBuffer.setCurrentLength(outPtr);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen);    }    else    {    _textBuffer.setCurrentLength(outPtr);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
231	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacterEncoding();  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacterEncoding();  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	char[]  outBuf  =  _textBuffer.getCurrentCharacterEncoding();  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _quad1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
232	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
233	[BUG]  [BUGGY]  return  _resetInt(c,  _inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  _inputBuffer,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  _inputBuffer,  _inputPtr);	  return    resetInt(c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
234	[BUG]  [BUGGY]  return  _resetInt(outBuf,  _inputBuffer,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(outBuf,  _inputBuffer,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(outBuf,  _inputBuffer,  intLen);	  return    resetInt(c,    _inputBuffer,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
235	[BUG]  [BUGGY]  return  _resetInt(negative,  intLen  +  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  intLen  +  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  intLen  +  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    +    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
236	[BUG]  [BUGGY]  return  resetInt(negative,  outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  outBuf,  outPtr,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  outBuf,  outPtr,  intLen);	  return    resetInt(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
237	[BUG]  [BUGGY]  return  resetInt(negative,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  outPtr,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  outPtr,  intLen);	  return    resetInt(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
238	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  '+')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);	  return    _parseFloat(outBuf,    outPtr,    c,    -1,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
239	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  -  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  intLen  -  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  intLen  -  1,  _inputBuffer.length);	  return    resetInt(negative,    intLen    -    1,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
240	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  negative,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  negative,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
241	[BUG]  [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen  +  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _parseFloat(outBuf,  outPtr,  c,  _quad1,  intLen  +  1);	  return    _parseFloat(outBuf,    outPtr,    c,    negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
242	[BUG]  [BUGGY]  return  _resetInt(negative,  0,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  0,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  0,  _inputBuffer.length);	  return    resetInt(negative,    0,    _inputBuffer.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
243	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  _quad1,  c);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  _quad1,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  _quad1,  c);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
244	[BUG]  [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  intLen  +  1,  c,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  intLen  +  1,  c,  _inputPtr);	  return    resetInt(negative,    intLen    +    1,    c);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
245	[BUG]  [BUGGY]  if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);  else  return  _parseInt(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);  else  return  _parseInt(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);  else  return  _parseInt(outBuf,  outPtr,  negative,  intLen);  }	  return    _parseInt(outBuf,    outPtr,    c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
246	[BUG]  [BUGGY]  if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  '0'  ||  c  >  '9')return  _parseInt(outBuf,  outPtr,  c);	  return    _parseInt(outBuf,    outPtr,    c);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
247	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  ',')return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }	  return    _parseFloat(outBuf,    outPtr,    c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
248	[BUG]  [BUGGY]  return  _resetInt(c,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(c,  0,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(c,  0,  intLen);	  return    resetInt(c,    0,    intLen);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
249	[BUG]  [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _inputBuffer.resetInt(negative,  0,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _inputBuffer.resetInt(negative,  0,  _inputPtr);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
250	[BUG]  [BUGGY]  return  _resetInt(negative,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  _resetInt(negative,  0,  _inputPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  _resetInt(negative,  0,  _inputPtr);	  return    resetInt(negative,    0,    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
251	[BUG]  [BUGGY]  return  resetInt(negative,  0,  len  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetInt(negative,  0,  len  -  1);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetInt(negative,  0,  len  -  1);	  return    resetInt(negative,    0,    intLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
252	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);  }  else  {  _textBuffer.setCurrentPtr(outPtr);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);  }  else  {  _textBuffer.setCurrentPtr(outPtr);  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);  }  else  {  _textBuffer.setCurrentPtr(outPtr);  }	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
253	[BUG]  [BUGGY]  _textBuffer.setCurrentPtr(outPtr);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  _textBuffer.setCurrentPtr(outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	_textBuffer.setCurrentPtr(outPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
254	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')_textBuffer.setCurrentLength(outPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
255	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  +  1,  _inputBuffer.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  +  1,  _inputBuffer.length);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  +  1,  _inputBuffer.length);	  return    resetFloat(negative,    intLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
256	[BUG]  [BUGGY]  return  resetFloat(negative,  intLen  -  _inputPtr,  c);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  intLen  -  _inputPtr,  c);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  intLen  -  _inputPtr,  c);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
257	[BUG]  [BUGGY]  return  resetFloat(negative,  _inputPtr  -  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(negative,  _inputPtr  -  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(negative,  _inputPtr  -  intLen);	  return    resetFloat(negative,    intLen    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
258	[BUG]  [BUGGY]  return  resetFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  return  resetFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	return  resetFloat(_inputBuffer,  outPtr,  c,  negative,  intLen);	  return    resetFloat(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
259	[BUG]  [BUGGY]  if(c  <  0x7F  ||  c  >  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parseFloat(outBuf,  outPtr,  c,  negative,  intLen);  }  --_inputPtr;  //  to  push  back  trailing  char  (comma  etc)  _textBuffer.setCurrentLength(outPtr);        [BUGGY]  if(c  <  0x7F  ||  c  >  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1246	1246	2	replace	if(c  <  0x7F  ||  c  >  0x7F)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
