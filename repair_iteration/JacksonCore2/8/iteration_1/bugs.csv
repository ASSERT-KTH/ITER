bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  ==  INT_9  ||  ch  ==  INT_0)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  ==  INT_9  ||  ch  ==  INT_0)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  ==  INT_9  ||  ch  ==  INT_0)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_9)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_9)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_9)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_10)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_10)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_10)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]    [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	  	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_10)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_10)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_10)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_0)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_0)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9  ||  ch  >  INT_0)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (ch  >  INT_9  ||  ch  <  INT_0)  {  _inputPtr  =  ptr;  return  _handleInvalidNumberStart(ch,  true);  }      }    [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  [BUGGY]  break  dummy_loop;  }        int  intLen  =  1;  //  already  got  one  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	876	876	2	replace	if(ch  >  INT_9  ||  ch  <  INT_0)  {	if  (ch  ==  INT_0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
