bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_incomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  ==  ','  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  ==  ','  ||  c  ==  '+')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  ==  ','  ||  c  ==  '+')  {	  if(c    >=    '.'    ||    c    ==    ','    ||    c    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  '+'  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '-'  ||  c  ==  '+'  ||  c  ==  '+')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '-'  ||  c  ==  '+'  ||  c  ==  '+')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c!=  'E')  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c!=  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c!=  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;	  if(c    ==    '.'    ||    c    ==    ',')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(outPtr  >=  outBuf.length)  {  if(c  ==  '.'  ||  c  ==  ',')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    ',')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  >=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_inputPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_inputPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_inputPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  if(outPtr  >=  end)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(outPtr  >=  end)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(outPtr  >=  end)  {  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c!=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c!=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  if(c  >=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  >=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  >=  '.'  ||  c  ==  ','  ||  c  ==  '-')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c!=  '-')  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c!=  '-')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  ','  ||  c!=  '-')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  ')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  ')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  ','  ||  c  ==  ')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    ',')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    ',')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  ','  ||  c  ==  '-')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  ','  ||  c  ==  '-')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  ','  ||  c  ==  '-')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  if(c  ==  ','  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  ','  ||  c  ==  '+')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  ','  ||  c  ==  '+')  {	  if(c!=    '.'    ||    c    ==    ','    ||    c    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_inputPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  ','  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  ','  ||  c  ==  '+')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  ','  ||  c  ==  '+')  {	  if(c    >=    '.'    ||    c    ==    ','    ||    c    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  >=  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(_tokenIncomplete)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_tokenIncomplete)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '-'  ||  c  ==  '+')  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(_inputPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  '9'  ||  c  <  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  '9'  ||  c  <  '9')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  '9'  ||  c  <  '9')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
44	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    ',')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  ','  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  ':'  ||  c  ==  ','  ||  c  ==  '+')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  ':'  ||  c  ==  ','  ||  c  ==  '+')  {	  if(c    ==    '.'    ||    c    ==    ','    ||    c!=    '+')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '-'  ||  c  ==  '+')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  <  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  <  '.'  ||  c  >  'e'  ||  c  ==  'E')  {	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.endSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.endSegment();  outPtr  =  0;  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  outBuf  =  _textBuffer.endSegment();  outPtr  =  0;  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  if(c  ==  ','  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;      [BUGGY]  if(c  ==  ','  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  if  (c  ==  '.'  ||  c  ==  'e'  ||  c  ==  'E')  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1227	1227	2	replace	if(c  ==  ','  ||  c  ==  'e'  ||  c  ==  'E')  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
