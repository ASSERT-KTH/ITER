bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  fractLen-startPtr;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  fractLen-startPtr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  fractLen-startPtr;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  int  len  =  startPtr-expLen;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  startPtr-expLen;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  startPtr-expLen;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  int  len  =  expLen-inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-inputPtr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-inputPtr;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  int  len  =  expLen-offset;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-offset;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-offset;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  int  len  =  ptr.length-1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr.length-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr.length-1;	  int    len    =    ptr-1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  int  len  =  expLen-1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-1;	  int    len    =    ptr-1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length-1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputBuffer.length-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputBuffer.length-1;	  int    len    =    ptr-1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  int  len  =  _inputPtr-1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputPtr-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputPtr-1;	  int    len    =    ptr-1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  int  len  =  expLen-ptr;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-ptr;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  int  len  =  ptr-inputLen;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-inputLen;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-inputLen;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  int  len  =  expLen-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-startPtr  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-startPtr  +  1;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  int  len  =  startPtr-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  startPtr-startPtr  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  startPtr-startPtr  +  1;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  char  len  =  ptr-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  char  len  =  ptr-startPtr  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	char  len  =  ptr-startPtr  +  1;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(intLen,  intLen,  expLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(intLen,  intLen,  expLen);  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(intLen,  intLen,  expLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputBuffer.length();  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputBuffer.length();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  int  len  =  ptr-offset  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-offset  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-offset  +  1;	  int    len    =    ptr-offset;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  int  len  =  ptr-offset-1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-offset-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-offset-1;	  int    len    =    ptr-offset;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  int  len  =  _inputPtr-ptr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputPtr-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputPtr-ptr;	  int    len    =    startPtr-ptr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  char  len  =  startPtr-ptr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  char  len  =  startPtr-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	char  len  =  startPtr-ptr;	  int    len    =    startPtr-ptr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  int  len  =  _inputPtr-startPtr;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputPtr-startPtr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputPtr-startPtr;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  int  len  =  inputLen-startPtr;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  inputLen-startPtr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  inputLen-startPtr;	  int    len    =    expLen-startPtr;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  int  len  =  outputEnd-ptr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  outputEnd-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  outputEnd-ptr;	  int    len    =    startPtr-ptr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  int  len  =  inputLen-ptr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  inputLen-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  inputLen-ptr;	  int    len    =    startPtr-ptr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.readInt();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  Integer  len  =  _inputBuffer.readInt();  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	Integer  len  =  _inputBuffer.readInt();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  intLen,  expLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  intLen,  expLen);  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  intLen,  expLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  int  len  =  ptr-expLen  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-expLen  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-expLen  +  1;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  int  len  =  ptr-inputPtr;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-inputPtr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-inputPtr;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  int  len  =  outputPtr-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  outputPtr-startPtr  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  outputPtr-startPtr  +  1;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  int  len  =  ptr-startPtr  +  1L;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  ptr-startPtr  +  1L;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-startPtr  +  1L;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  int  len  =  _inputPtr-offset;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputPtr-offset;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputPtr-offset;	  int    len    =    ptr-offset;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  int  len  =  _inputEnd-ptr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputEnd-ptr;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputEnd-ptr;	  int    len    =    startPtr-ptr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  int  len  =  expLen-inputLen;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-inputLen;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-inputLen;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  int  len  =  expLen-inpLen;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  expLen-inpLen;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-inpLen;	  int    len    =    ptr-expLen;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  expLen,  expLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  expLen,  expLen);  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  expLen,  expLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  int  len  =  _inputEnd-1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputEnd-1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputEnd-1;	  int    len    =    ptr-1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  int  len  =  _inputPtr-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  int  len  =  _inputPtr-startPtr  +  1;  [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  _inputPtr-startPtr  +  1;	  int    len    =    ptr-startPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
