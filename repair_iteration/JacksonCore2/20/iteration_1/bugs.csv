bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  ptr-startPtr  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  ptr-startPtr  +  1;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-startPtr  +  1;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
2	[BUG]  [BUGGY]  int  len  =  expLen-startPtr;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  expLen-startPtr;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  expLen-startPtr;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
3	[BUG]  [BUGGY]  int  len  =  ptr-1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  ptr-1;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-1;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
4	[BUG]  [BUGGY]  int  len  =  startPtr-ptr;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  startPtr-ptr;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  startPtr-ptr;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	  	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
6	[BUG]  [BUGGY]  int  len  =  ptr-expLen;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  ptr-expLen;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-expLen;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
7	[BUG]  [BUGGY]  int  len  =  ptr-offset;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,   "Exponent  indicator  not  followed  by  a  digit ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;    [BUGGY]  int  len  =  ptr-offset;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	952	952	2	replace	int  len  =  ptr-offset;	int  len  =  ptr-startPtr;  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
