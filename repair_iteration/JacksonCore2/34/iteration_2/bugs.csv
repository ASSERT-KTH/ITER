bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(_inputPtr  >=  end  &&  c  ==  INT_0)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  c  ==  INT_0)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  if(c  >=  end  ||  _inputPtr  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(c  >=  end  ||  _inputPtr  ==  INT_0)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  end  ||  _inputPtr  ==  INT_0)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  if(c  ==  end  ||  _inputPtr  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(c  ==  end  ||  _inputPtr  ==  INT_0)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  ==  end  ||  _inputPtr  ==  INT_0)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment();  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment();  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _textBuffer.finishCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  int  c  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  int  c  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	int  c  =  _inputBuffer[_inputPtr++]  &  0xFF;	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++];  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(_inputPtr  >>  end)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(_inputPtr  >>  end)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >>  end)  {	  if(_inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  ==  intLen)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  ==  intLen)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  ==  intLen)  {	  if(_inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  ==  outBuf.length)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  ==  outBuf.length)  {	  if(_inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(end  >=  _inputPtr  ||  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(end  >=  _inputPtr  ||  c  ==  INT_0)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  _inputPtr  ||  c  ==  INT_0)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(c  >=  end  ||  _inputPtr  ==  end)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(c  >=  end  ||  _inputPtr  ==  end)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  end  ||  _inputPtr  ==  end)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(end  ==  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(end  ==  _inputPtr)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  ==  _inputPtr)  {	  if(_inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(end  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(end  >=  _inputEnd)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  _inputEnd)  {	  if(_inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(end  >  _inputEnd)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >  _inputEnd)  {	  if(_inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  if  (end  <  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if  (end  <  _inputPtr)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if  (end  <  _inputPtr)  {	  if    (_inputPtr    <    end)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char  c  =  _textBuffer.finishCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment();  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if  (_inputPtr  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if  (_inputPtr  <  _inputEnd)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if  (_inputPtr  <  _inputEnd)  {	  if    (_inputPtr    <    end)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen);  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  if(c  >=  INT_0  ||  _inputPtr  >=  end)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {    [BUGGY]  if(c  >=  INT_0  ||  _inputPtr  >=  end)  {  [BUGGY]      return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  INT_0  ||  _inputPtr  >=  end)  {	  if(_inputPtr    >=    end    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
