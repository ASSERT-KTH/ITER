bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  >=  INT_0  ||  end  >=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >=  INT_0  ||  end  >=  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  INT_0  ||  end  >=  _inputPtr)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if(c  ==  INT_0  ||  end  >=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  ==  INT_0  ||  end  >=  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  ==  INT_0  ||  end  >=  _inputPtr)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  if(end  >=  INT_0  ||  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >=  INT_0  ||  c  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  INT_0  ||  c  ==  INT_0)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  _inputEnd)  {	  if(end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  if(_inputPtr  ==  end  ||  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  ==  end  ||  c  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  ==  end  ||  c  ==  INT_0)  {	  if(c    ==    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(c  ==  INT_0  ||  c  ==  end)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  ==  INT_0  ||  c  ==  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  ==  INT_0  ||  c  ==  end)  {	  if(c    ==    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {	  if(c    ==    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(end);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(end);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(end);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.startCurrentSegment();	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  if(c  >  end  ||  _inputPtr  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >  end  ||  _inputPtr  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >  end  ||  _inputPtr  ==  INT_0)  {	  if(c    >=    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(c  >=  end  &&  _inputPtr  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >=  end  &&  _inputPtr  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  end  &&  _inputPtr  ==  INT_0)  {	  if(c    >=    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  char  c  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  char  c  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char  c  =  _inputBuffer[_inputPtr++]  &  0xFF;	  int    c    =    _inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  int  c  =  _inputBuffer[_inputPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  int  c  =  _inputBuffer[_inputPtr++]  &  0xF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	int  c  =  _inputBuffer[_inputPtr++]  &  0xF;	  int    c    =    _inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if(_inputPtr!=  end)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr!=  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr!=  end)  {	  if(_inputPtr    >>    end)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  end)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  >=  end)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  ==  end)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  ==  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  ==  end)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c!=  end)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c!=  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c!=  end)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  if(c  >  end  ||  _inputPtr  ==  end)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >  end  ||  _inputPtr  ==  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >  end  ||  _inputPtr  ==  end)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  end);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  end);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  end);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen,  end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen,  end);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen,  end);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  >=  INT_0)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >=  end)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  <  INT_0  ||  c  >=  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  <  INT_0  ||  c  >=  end)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  if(c  >  INT_0  ||  c  >=  end)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >  INT_0  ||  c  >=  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >  INT_0  ||  c  >=  end)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
25	[BUG]  [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xFF;	  Integer    outPtr    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xF;	  Integer    outPtr    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xff;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xff;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  0xff;	  Integer    outPtr    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment()  +  1;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _textBuffer.finishCurrentSegment()  +  1;	  Integer    outPtr    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment(end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentSegment(end);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _textBuffer.finishCurrentSegment(end);	  Integer    outPtr    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  c  <  =  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  &&  c  <  =  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  c  <  =  INT_0)  {	  if(_inputPtr    >=    end    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  <  =  _inputEnd)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  <  =  _inputEnd)  {	  if(end    >=    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.endCurrentSegment();	  char[]    outBuf    =    _textBuffer.getCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  _inputEnd  ==  intLen)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  &&  _inputEnd  ==  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  _inputEnd  ==  intLen)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  if(_inputPtr  >>  end  &&  _inputEnd  ==  intLen)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >>  end  &&  _inputEnd  ==  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >>  end  &&  _inputEnd  ==  intLen)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  _inputEnd  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  &&  _inputEnd  ==  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  _inputEnd  ==  outBuf.length)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  <  outBuf.length)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  if(_inputPtr  ==  end  &&  _inputEnd  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  ==  end  &&  _inputEnd  ==  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  ==  end  &&  _inputEnd  ==  outBuf.length)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  String  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  String  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	String  c  =  _textBuffer.finishCurrentSegment();	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  Char  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Char  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Char  c  =  _textBuffer.finishCurrentSegment();	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  =  intLen)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  =  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  <  =  intLen)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  >  intLen)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  >  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  >  intLen)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  intLen)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  <  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  <  intLen)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  if(end  >  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >  _inputPtr)  {	  if(end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  <  _inputEnd)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  <  _inputEnd)  {	  if(end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  if(end  <  _inputLen)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  <  _inputLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  <  _inputLen)  {	  if(end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(end,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(end,  intLen);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(end,  intLen);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
47	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  intLen);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(outBuf,  intLen);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  c  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  &&  c  <  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  c  <  INT_0)  {	  if(_inputPtr    >=    end    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  if(end  >=  _inputEnd  &&  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >=  _inputEnd  &&  c  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  _inputEnd  &&  c  ==  INT_0)  {	  if(_inputPtr    >=    end    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  if(_inputPtr  >=  end  &&  c!=  INT_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  &&  c!=  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  &&  c!=  INT_0)  {	  if(_inputPtr    >=    end    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentInput();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _textBuffer.finishCurrentInput();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _textBuffer.finishCurrentInput();	  Integer    outPtr    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  >=  outBuf.length)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  end)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  <  INT_0  ||  c  >  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  <  INT_0  ||  c  >  end)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  if(c  >=  INT_0  ||  c  >  end)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >=  INT_0  ||  c  >  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  INT_0  ||  c  >  end)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
55	[BUG]  [BUGGY]  if(end!=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end!=  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end!=  _inputPtr)  {	  if(_inputPtr    >>    end)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  if(end  >=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >=  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  _inputPtr)  {	  if(_inputPtr    >>    end)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  if(_inputPtr  <  end  &&  _inputEnd  ==  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  <  end  &&  _inputEnd  ==  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  <  end  &&  _inputEnd  ==  outBuf.length)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  >  outBuf.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  _inputEnd  >  outBuf.length)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  _inputEnd  >  outBuf.length)  {	  if(_inputPtr    >=    end    ||    _inputEnd    ==    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  Character  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Character  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Character  c  =  _textBuffer.finishCurrentSegment();	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
61	[BUG]  [BUGGY]  Integer  outPtr  =  _outputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _outputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _outputBuffer[_inputPtr++]  &  0xFF;	  Integer    outPtr    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  if(end  >=  _inputPtr  &&  c  ==  INT_0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >=  _inputPtr  &&  c  ==  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >=  _inputPtr  &&  c  ==  INT_0)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(end  >  _inputPtr  &&  end  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >  _inputPtr  &&  end  <  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >  _inputPtr  &&  end  <  INT_0)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
64	[BUG]  [BUGGY]  if(end  >  _inputEnd  &&  end  <  =  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >  _inputEnd  &&  end  <  =  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >  _inputEnd  &&  end  <  =  _inputPtr)  {	  if(end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  if(c  >  end  ||  _inputPtr  >=  INT_0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >  end  ||  _inputPtr  >=  INT_0)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >  end  ||  _inputPtr  >=  INT_0)  {	  if(c    >=    end    ||    _inputPtr    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  if(end  >  _inputEnd  ||  end  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(end  >  _inputEnd  ||  end  >  INT_9)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(end  >  _inputEnd  ||  end  >  INT_9)  {	  if(end    >=    _inputPtr    ||    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  intLen)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  >=  intLen)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  >=  intLen)  {	  if(c    >=    end    ||    _inputPtr    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
70	[BUG]  [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  INT_0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  INT_0;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	Integer  outPtr  =  _inputBuffer[_inputPtr++]  &  INT_0;	  Integer    outPtr    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  if(_inputPtr  >=  end  ||  c  ==  INT_LCURLY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(_inputPtr  >=  end  ||  c  ==  INT_LCURLY)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(_inputPtr  >=  end  ||  c  ==  INT_LCURLY)  {	  if(_inputPtr    >>    end)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  if(c  >=  INT_0  &&  end  >=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >=  INT_0  &&  end  >=  _inputPtr)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >=  INT_0  &&  end  >=  _inputPtr)  {	  if(_inputPtr    >=    end    &&    c    ==    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  int  c  =(_int)_inputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  int  c  =(_int)_inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	int  c  =(_int)_inputBuffer[_inputPtr++]  &  0xFF;	  int    c    =    _inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  if(c  >  INT_0  ||  c  <  end)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {      [BUGGY]  if(c  >  INT_0  ||  c  <  end)  {  [BUGGY]        return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1222	1222	2	replace	if(c  >  INT_0  ||  c  <  end)  {	  if(c    >=    INT_0    ||    _inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
