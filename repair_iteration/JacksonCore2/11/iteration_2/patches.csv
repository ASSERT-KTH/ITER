bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[0];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_char)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_char)_inputBuffer[0];	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_char)_inputBuffer[ptr++]  +  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_char)_inputBuffer[ptr++]  +  1;	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  r,  ptr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  r,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  r,  ptr);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  ptr);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(r,  fractLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(r,  fractLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(r,  fractLen);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ptr,  r);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(ptr,  r);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(ptr,  r);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[1];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[1];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[0]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[0]  +  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[0]  +  1;	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[2];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[2];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]  char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputPtr);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  ptr,  _inputPtr);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.FIELD_NAME;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.FIELD_NAME;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
17	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ptr,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(ptr,  null);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(ptr,  null);	  Integer    ch    =    _parseInt(null,    ptr);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(d,  ptr);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(d,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(d,  ptr);	  Integer    ch    =    _parseInt(null,    ptr);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  Integer  ch  =  _reader.readUnsignedInt();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.readUnsignedInt();  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readUnsignedInt();	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  Integer  ch  =  _reader.indexOf('.');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.indexOf('.');  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.indexOf('.');	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  Integer  ch  =  _reader.indexOf('.',  ptr);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.indexOf('.',  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.indexOf('.',  ptr);	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  '.';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  '.';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  ',';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  ',';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  ',';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :  '.';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :  '.';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	char  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputLen);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  fractLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  fractLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(ptr,  _inputBuffer,  fractLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputLen);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xff;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xff;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xff;	  Integer    ch    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  +  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[_inputPtr++]  +  1;	  Integer    ch    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;	  Integer    ch    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
30	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT  +  1);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  fractLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  fractLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  fractLen);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  0);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  &  0xff;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  &  0xff;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[ptr++]  &  0xff;	  Integer    ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  &  0xFF;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  &  0xFF;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[ptr++]  &  0xFF;	  Integer    ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  +  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[ptr++]  +  1;	  Integer    ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  +  1);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ptr);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  -  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr  -  1);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ptr);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  fractLen,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(null,  fractLen,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  fractLen,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(r,  ptr,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(r,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(r,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(0,  ptr,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(0,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(0,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  2;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  2;	  ch    =(char)_inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  &  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  &  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  &  1;	  ch    =(char)_inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  *  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  *  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  *  1;	  ch    =(char)_inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  fractLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  fractLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  fractLen;	  ch    =(char)_inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  *  intLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  *  intLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  *  intLen;	  ch    =(char)_inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  INT_0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  INT_0;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  INT_0;	  ch    =(char)_inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch  +  1);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ch);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch,  0);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ch);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  ptr,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(null,  ptr,  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  ptr,  1);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  intLen,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(null,  intLen,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  intLen,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  +  intLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _inputBuffer[ptr++]  +  intLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[ptr++]  +  intLen;	  Integer    ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
56	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer,  ptr);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ptr);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  Integer  ch  =  _reader.readFully(_inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.readFully(_inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readFully(_inputBuffer,  ptr);	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readInt(_inputBuffer,  ptr);	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[ptr++]  +  intLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_char)_inputBuffer[ptr++]  +  intLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_char)_inputBuffer[ptr++]  +  intLen;	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  4;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  4;	  ch    =(char)_inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  3;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  3;	  ch    =(char)_inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  '.';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  '.';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  '.';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  '.';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
64	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(intLen,  _inputBuffer,  _inputPtr);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(intLen,  _inputBuffer,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(intLen,  _inputBuffer,  _inputPtr);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_reader,  ptr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_reader,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_reader,  ptr);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
66	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(r,  _inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(r,  _inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(r,  _inputBuffer,  ptr);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
67	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  _inputEnd;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  _inputEnd;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  _inputEnd;	  ch    =(char)_inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
69	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
70	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr);	  Integer    ch    =    _parseInt(null,    ptr);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(dummy_loop,  ptr);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(dummy_loop,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(dummy_loop,  ptr);	  Integer    ch    =    _parseInt(null,    ptr);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
74	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
75	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  intLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  intLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  intLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputLen);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
77	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(jp,  _inputBuffer,  _inputLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(jp,  _inputBuffer,  _inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(jp,  _inputBuffer,  _inputLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputLen);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  int  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  int  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	int  ch  =  _parseInt(_inputBuffer,  ptr,  intLen);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputLen);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
79	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputBuffer);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ptr);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
80	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputPtr);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  _inputPtr);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ptr);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  _inputLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  _inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readInt(_inputBuffer,  _inputLen);	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  _inputPtr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _reader.readInt(_inputBuffer,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readInt(_inputBuffer,  _inputPtr);	  Integer    ch    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  '.';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  '.';	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    '.';    	non-compiled	[CE]  <identifier>  expected	18	None	replace
84	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[4];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[4];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[4];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
85	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  '.')?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  '.')?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  ==  '.')?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  int  ch  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  int  ch  =  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	int  ch  =  _inputBuffer[ptr++];	  Integer    ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
88	[BUG]  [BUGGY]  ch  =  _parseInt(JsonToken.VALUE_NUMBER_INT);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseInt(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseInt(JsonToken.VALUE_NUMBER_INT);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_FLOAT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_FLOAT);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
90	[BUG]  [BUGGY]  int  ch  =  _inputBuffer[_inputPtr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  int  ch  =  _inputBuffer[_inputPtr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	int  ch  =  _inputBuffer[_inputPtr++];	  Integer    ch    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  _inputBuffer,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(intLen,  ptr,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(intLen,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(intLen,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
93	[BUG]  [BUGGY]  int  ch  =  _parseInt(null,  ptr,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  int  ch  =  _parseInt(null,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	int  ch  =  _parseInt(null,  ptr,  0);	  Integer    ch    =    _parseInt(null,    ptr,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
94	[BUG]  [BUGGY]  ch  =  _parseNumber(ch,  JsonToken.VALUE_NUMBER_INT);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =  _parseNumber(ch,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(ch,  JsonToken.VALUE_NUMBER_INT);	  ch    =    _parseNumber(JsonToken.VALUE_NUMBER_INT,    ch);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
95	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  _inputLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  _inputLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  _inputLen;	  ch    =(char)_inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
96	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  intLen,  _inputPtr);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(_inputBuffer,  intLen,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(_inputBuffer,  intLen,  _inputPtr);	  Integer    ch    =    _parseInt(ptr,    _inputBuffer,    _inputPtr);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(intLen,  ptr);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  Integer  ch  =  _parseInt(intLen,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(intLen,  ptr);	  Integer    ch    =    _parseInt(null,    ptr);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
98	[BUG]  [BUGGY]  int  ch  =  _parseInt(r,  ptr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  int  ch  =  _parseInt(r,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	int  ch  =  _parseInt(r,  ptr);	  Integer    ch    =    _parseInt(r,    ptr);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  ch  =(_int)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_int)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_int)_inputBuffer[ptr++];	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
101	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
