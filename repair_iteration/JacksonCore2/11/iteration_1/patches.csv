bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[ptr++];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ch);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =  _parseNumber(JsonToken.VALUE_NUMBER_INT,  ptr);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(_char)_inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_char)_inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[0];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(char)_inputBuffer[0];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[0];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  1;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  1;	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  ptr);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _parseInt(null,  ptr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  ptr);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(null,  ptr,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _parseInt(null,  ptr,  0);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(null,  ptr,  0);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  Integer  ch  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _reader.readInt();  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _reader.readInt();	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(r,  ptr);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _parseInt(r,  ptr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(r,  ptr);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  intLen;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  intLen;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(char)_inputBuffer[ptr++]  +  intLen;	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _inputBuffer[_inputPtr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputLen);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	Integer  ch  =  _parseInt(ptr,  _inputBuffer,  _inputPtr);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  '.';  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  '.';  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	895	895	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  '.';	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
