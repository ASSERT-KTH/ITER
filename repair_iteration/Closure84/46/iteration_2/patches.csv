bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >=  sourceString.indexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >=  sourceString.indexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >=  sourceString.indexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.indexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.indexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  ==  sourceString.indexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
3	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.indexOf('n',  position  +  1))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.indexOf('n',  position  +  1))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >  sourceString.indexOf('n',  position  +  1))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
4	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.indexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.indexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position!=  sourceString.indexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
5	[BUG]  [BUGGY]  if(position  <  0  ||  position  >  sourceString.indexOf('n',  lineIndex))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(position  <  0  ||  position  >  sourceString.indexOf('n',  lineIndex))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(position  <  0  ||  position  >  sourceString.indexOf('n',  lineIndex))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
6	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  ==  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position!=  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  <  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >>  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >>  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >>  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.indexOf('n',  lineIndex  +  1);	  position    =    sourceString.indexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
11	[BUG]  [BUGGY]  position  =  irNode.indexOf('n',  lineIndex);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  irNode.indexOf('n',  lineIndex);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  irNode.indexOf('n',  lineIndex);	  position    =    sourceString.indexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
12	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.indexOf('n',  lineIndex  -  1);	  position    =    sourceString.indexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
13	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex  ==  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  lineIndex  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  lineIndex  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  lineIndex  >=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  if(lineIndex  >=  0  ||  lineIndex  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  ||  lineIndex  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  ||  lineIndex  >=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  2);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  2);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  2);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position  >  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
22	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  >  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
23	[BUG]  [BUGGY]  if(lineIndex  ==  0  &&  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  &&  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  &&  position  >  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
24	[BUG]  [BUGGY]  if(lineIndex  >=  0  ||  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  ||  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  ||  position!=  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
25	[BUG]  [BUGGY]  if(lineIndex  >=  0  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  ||  position  >=  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  if(lineIndex  <=  0  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  &&  position  >=  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if(lineIndex  <=  0  &&  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  &&  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  &&  position!=  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  Integer  lineIndex  =  position.indexOf('n',  sourceString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  position.indexOf('n',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  position.indexOf('n',  sourceString);	  Integer    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  sourceString.indexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  sourceString.indexOf('n',  position  +  1);	  Integer    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  Integer  lineIndex  =  irNode.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  irNode.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  irNode.indexOf('n',  position);	  Integer    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  Integer  lineIndex  =  this.sourceString.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  this.sourceString.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  this.sourceString.indexOf('n',  position);	  Integer    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  sourceString.indexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  sourceString.indexOf('n',  position  -  1);	  Integer    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  if(lineIndex  <  -1  ||  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  -1  ||  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  -1  ||  position  ==  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  if(lineIndex  <=  -1  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  -1  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  -1  ||  position  >  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  if(lineIndex  >=  -1  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  ||  position  >  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
36	[BUG]  [BUGGY]  if(lineIndex  <  1  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  1  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  1  ||  position  >  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
37	[BUG]  [BUGGY]  if(lineIndex!=  -1  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  -1  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1  &&  position  >=  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    >=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  if(lineIndex!=  -1  &&  position  <  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  -1  &&  position  <  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1  &&  position  <  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    >=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  >=  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  >=  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  >=  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    >=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  if(lineIndex!=  -1  &&  position  ==  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  -1  &&  position  ==  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1  &&  position  ==  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    >=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  >=  sourceString.length())  {	  if(lineIndex!=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position!=  sourceString.length())  {	  if(lineIndex!=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
43	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position  >=  sourceString.length())  {	  if(lineIndex!=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
44	[BUG]  [BUGGY]  if(lineIndex  ==  0  &&  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  &&  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  &&  position!=  sourceString.length())  {	  if(lineIndex!=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString);	  int    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  irNode.indexOf('n',  position);	  int    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  this.sourceString.indexOf('n',  position);	  int    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  position  =  irNode.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  irNode.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  irNode.lastIndexOf('n',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
50	[BUG]  [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  this.sourceString.lastIndexOf('n',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
51	[BUG]  [BUGGY]  position  =  lineIndex.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  lineIndex.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  lineIndex.lastIndexOf('n',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
52	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position  <  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  if(lineIndex  ==  0  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  &&  position  <  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
54	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  <  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  if(lineIndex  >=  0  ||  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  ||  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  ||  position  <=  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
56	[BUG]  [BUGGY]  if(lineIndex  <=  0  &&  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  &&  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  &&  position  ==  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
57	[BUG]  [BUGGY]  if(lineIndex  ==  0  ||  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  ||  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  ||  position  ==  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
58	[BUG]  [BUGGY]  Integer  lineIndex  =  position.lastIndexOf('n',  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  position.lastIndexOf('n',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  position.lastIndexOf('n',  sourceString);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  Integer  lineIndex  =  irNode.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  irNode.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  irNode.lastIndexOf('n',  position);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  Integer  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  this.sourceString.lastIndexOf('n',  position);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  Integer  lineIndex  =  this.sourceName.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  this.sourceName.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  this.sourceName.lastIndexOf('n',  position);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceName.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  sourceName.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  sourceName.lastIndexOf('n',  position);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  position  =  irNode.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  irNode.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  irNode.indexOf('n',  position);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
65	[BUG]  [BUGGY]  position  =  lineIndex.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  lineIndex.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  lineIndex.indexOf('n',  position);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
66	[BUG]  [BUGGY]  if(lineIndex  <=  0  &&  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  &&  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  &&  position  >  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  position!=  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  position  <  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  if(lineIndex!=  -1  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  -1  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1  &&  position  <  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  if(lineIndex!=  -1  &&  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  -1  &&  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1  &&  position  <=  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  if(lineIndex  >=  -1  &&  position  <  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  &&  position  <  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  &&  position  <  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  if(lineIndex  >=  -1  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  &&  position  <  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  if(lineIndex  ==  0  &&  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  &&  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  &&  position  <=  sourceString.length())  {	  if(lineIndex    ==    0    &&    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
74	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >=  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >=  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >=  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
75	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  ==  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  ==  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.lastIndexOf('n',  position  +  1))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.lastIndexOf('n',  position  +  1))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >  sourceString.lastIndexOf('n',  position  +  1))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
78	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position!=  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position!=  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
79	[BUG]  [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  position.lastIndexOf('n',  sourceString);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  lineIndex  =  irNode.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  irNode.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  irNode.lastIndexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  sourceString.indexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  this.sourceString.lastIndexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
84	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('r',  sourceString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  position.lastIndexOf('r',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  position.lastIndexOf('r',  sourceString);	  int    lineIndex    =    sourceString.lastIndexOf('r',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
85	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('r',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('r',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.lastIndexOf('r',  position  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('r',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('r',  position);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('r',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  irNode.lastIndexOf('r',  position);	  int    lineIndex    =    sourceString.lastIndexOf('r',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
87	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('r',  position);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('r',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('r',  position);	  int    lineIndex    =    sourceString.lastIndexOf('r',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
88	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('r',  position  -  1);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('r',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.lastIndexOf('r',  position  -  1);	  int    lineIndex    =    sourceString.lastIndexOf('r',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  position  =  irNode.lastIndexOf('n',  lineIndex);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  irNode.lastIndexOf('n',  lineIndex);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  irNode.lastIndexOf('n',  lineIndex);	  position    =    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  lineIndex  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.lastIndexOf('n',  lineIndex  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.lastIndexOf('n',  lineIndex  +  1);	  position    =    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('N',  position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.lastIndexOf('N',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.lastIndexOf('N',  position);	  position    =    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
92	[BUG]  [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  lineIndex);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  lineIndex);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  this.sourceString.lastIndexOf('n',  lineIndex);	  position    =    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
93	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  ==  sourceString.length())  {	  if(lineIndex!=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
94	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position  ==  sourceString.length())  {	  if(lineIndex!=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
95	[BUG]  [BUGGY]  if(lineIndex  ==  0  &&  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  &&  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  &&  position  ==  sourceString.length())  {	  if(lineIndex!=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  if(lineIndex  <=  -1  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  -1  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  -1  ||  position  >=  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
97	[BUG]  [BUGGY]  if(lineIndex  >=  -1  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  ||  position  >=  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
98	[BUG]  [BUGGY]  if(lineIndex  <  position)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  position)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  position)  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position  >=  sourceString.length())  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position  <  sourceString.length())  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
101	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position  <=  sourceString.length())  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
102	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position  <=  position)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position  <=  position)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position  <=  position)  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
103	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position!=  sourceString.length())  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
104	[BUG]  [BUGGY]  if(lineIndex  >  0  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >  0  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >  0  &&  position  >=  sourceString.length())  {	  if(lineIndex    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
105	[BUG]  [BUGGY]  if(lineIndex  >  0  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >  0  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >  0  &&  position  <  sourceString.length())  {	  if(lineIndex    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  if(lineIndex  ==  0  ||  position!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  ||  position!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  ||  position!=  sourceString.length())  {	  if(lineIndex    ==    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
107	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
108	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
109	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
110	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex  <  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
111	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex  >  position.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex  >  position.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex  >  position.length())  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
112	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex  <=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
113	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex!=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
114	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
115	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position  -  1);	  int    lineIndex    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
116	[BUG]  [BUGGY]  if(lineIndex!=  0  &&  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex!=  0  &&  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0  &&  position  <=  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
117	[BUG]  [BUGGY]  if(lineIndex  <  sourceString.length()  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  sourceString.length()  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  sourceString.length()  ||  position  >  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
118	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.lastIndexOf('n',  position  +  1);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
119	[BUG]  [BUGGY]  if(position  <  -1  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(position  <  -1  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(position  <  -1  ||  position  >=  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
120	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  <  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
121	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  >=  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
122	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  >  sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
123	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  position  >  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
124	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  position  >  sourceString.lastIndexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  position  >  sourceString.lastIndexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  position  >  sourceString.lastIndexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.lastIndexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  lineIndex  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  lineIndex  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  lineIndex  >=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
126	[BUG]  [BUGGY]  if(lineIndex  >=  0  &&  lineIndex  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  0  &&  lineIndex  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0  &&  lineIndex  >=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
127	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
128	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.indexOf('n',  position  +  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.indexOf('n',  position  +  1);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
129	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.indexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.indexOf('n',  position  -  1);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
130	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  ==  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
131	[BUG]  [BUGGY]  if(lineIndex  >=  position)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  position)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  position)  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
132	[BUG]  [BUGGY]  if(lineIndex  ==  position)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  position)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  position)  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
133	[BUG]  [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.indexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  &&  position  >  sourceString.indexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  &&  position  >  sourceString.indexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
134	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  position  >  sourceString.indexOf('n',  position))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  position  >  sourceString.indexOf('n',  position))  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  position  >  sourceString.indexOf('n',  position))  {	  if(lineIndex    <    0    ||    position    >    sourceString.indexOf('n',    position))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
135	[BUG]  [BUGGY]  if(lineIndex  <=  0  ||  lineIndex  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  0  ||  lineIndex  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0  ||  lineIndex  >  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
136	[BUG]  [BUGGY]  if(lineIndex  <=  position  &&  position  <=  position.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  &&  position  <=  position.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  &&  position  <=  position.length())  {	  if(lineIndex    <=    position)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
137	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >  sourceString.length()  -  1)  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
138	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.length()  +  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >  sourceString.length()  +  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >  sourceString.length()  +  1)  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
139	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  position  >  this.sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  position  >  this.sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  position  >  this.sourceString.length())  {	  if(lineIndex    <    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
140	[BUG]  [BUGGY]  if(lineIndex  >  0  ||  position  <  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >  0  ||  position  <  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >  0  ||  position  <  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    <    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
141	[BUG]  [BUGGY]  if(lineIndex  <  1  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  1  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  1  ||  position  >=  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
142	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  fileLevelJsDocBuilder!=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  fileLevelJsDocBuilder!=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  fileLevelJsDocBuilder!=  sourceString.length())  {	  if(lineIndex    <    0    ||    lineIndex    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
143	[BUG]  [BUGGY]  if(lineIndex  <=  position  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  ||  position  >  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
144	[BUG]  [BUGGY]  if(lineIndex  ==  0  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  ==  0  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0  ||  position  >  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
145	[BUG]  [BUGGY]  if(lineIndex  <  0  ||  lineIndex  >  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  0  ||  lineIndex  >  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0  ||  lineIndex  >  sourceString.length()  -  1)  {	  if(lineIndex    <    0    ||    lineIndex    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  if(lineIndex  <  -1  ||  position  >  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <  -1  ||  position  >  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  -1  ||  position  >  sourceString.length()  -  1)  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
147	[BUG]  [BUGGY]  if(position  <  -1  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(position  <  -1  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(position  <  -1  ||  position  >  sourceString.length())  {	  if(lineIndex    <    -1    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
148	[BUG]  [BUGGY]  if(lineIndex  >=  -1  &&  position  >=  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  &&  position  >=  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  &&  position  >=  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    >=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
149	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	position  =  sourceString.lastIndexOf('n',  position  -  1);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
150	[BUG]  [BUGGY]  if(lineIndex  >  0  ||  position  >  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >  0  ||  position  >  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >  0  ||  position  >  sourceString.length())  {	  if(lineIndex    >=    0    ||    position    >    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
151	[BUG]  [BUGGY]  Integer  lineIndex  =  fileLevelJsDocBuilder.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  Integer  lineIndex  =  fileLevelJsDocBuilder.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	Integer  lineIndex  =  fileLevelJsDocBuilder.lastIndexOf('n',  position);	  Integer    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
152	[BUG]  [BUGGY]  if(lineIndex  >=  -1  &&  position  <=  sourceString.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  &&  position  <=  sourceString.length()  -  1)  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  &&  position  <=  sourceString.length()  -  1)  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
153	[BUG]  [BUGGY]  if(lineIndex  >=  -1  &&  position  <=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  >=  -1  &&  position  <=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1  &&  position  <=  sourceString.length())  {	  if(lineIndex!=    -1    &&    position    <=    sourceString.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
154	[BUG]  [BUGGY]  if(lineIndex  <=  position  ||  position  >=  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  ||  position  >=  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  ||  position  >=  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    >=    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
155	[BUG]  [BUGGY]  if(lineIndex  <=  position  ||  position  ==  sourceString.length())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  if(lineIndex  <=  position  ||  position  ==  sourceString.length())  {  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  position  ||  position  ==  sourceString.length())  {	  if(lineIndex    <=    0    ||    position    ==    sourceString.length())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
156	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);      [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('n',  position);  [BUGGY]      return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	int  lineIndex  =  sourceName.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
