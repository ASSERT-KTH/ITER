bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(lineIndex!=  -1)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex!=  -1)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  -1)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
2	[BUG]  [BUGGY]  if(lineIndex  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  ==  0)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  ==  0)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
3	[BUG]  [BUGGY]  if(lineIndex  >=  -1)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  >=  -1)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  -1)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
4	[BUG]  [BUGGY]  if(lineIndex!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex!=  0)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex!=  0)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
5	[BUG]  [BUGGY]  if(lineIndex  >=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  >=  0)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >=  0)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]    [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	  	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
7	[BUG]  [BUGGY]  if(lineIndex  <  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  <  0)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  0)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
8	[BUG]  [BUGGY]  if(lineIndex  <=  -1)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  <=  -1)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  -1)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
9	[BUG]  [BUGGY]  if(lineIndex  <  -1)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  <  -1)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <  -1)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
10	[BUG]  [BUGGY]  if(lineIndex  >  -1)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  >  -1)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  >  -1)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
11	[BUG]  [BUGGY]  if(lineIndex  <=  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  [BUGGY]  if(lineIndex  <=  0)  {  [BUGGY]  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	264	264	1	replace	if(lineIndex  <=  0)  {	if  (lineIndex  ==  -1)  {  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
