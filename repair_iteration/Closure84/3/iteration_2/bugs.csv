bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  parent);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(child1,  parent);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(false);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(false);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(parent,  child1);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(parent,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(parent,  child1);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.parent);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.parent);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  return  new  Node(child1,  type).newNode();  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type).newNode();	  return    new    Node(type,    child1).newNode();    	non-compiled	[CE]  	11	None	replace
6	[BUG]  [BUGGY]  return  new  Node(child1,  child1).newNode();  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).newNode();	  return    new    Node(type,    child1).newNode();    	non-compiled	[CE]  	11	None	replace
7	[BUG]  [BUGGY]  return  new  Node(type,  child1);  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1);	  return    new    Node(type,    child1).newNode();    	non-compiled	[CE]  	11	None	replace
8	[BUG]  [BUGGY]  return  new  Node(type,  child1.newNode());  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.newNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.newNode());	  return    new    Node(type,    child1).newNode();    	non-compiled	[CE]  	11	None	replace
9	[BUG]  [BUGGY]  return  transformDispatcher.newNode(type,  child1);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  transformDispatcher.newNode(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  transformDispatcher.newNode(type,  child1);	      	non-compiled	[CE]  	8	None	replace
10	[BUG]  [BUGGY]  return  NodeUtil.newStringNode(type,  child1);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  NodeUtil.newStringNode(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  NodeUtil.newStringNode(type,  child1);	      	non-compiled	[CE]  	8	None	replace
11	[BUG]  [BUGGY]  return  NodeUtil.newNumber(type,  child1);  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  NodeUtil.newNumber(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  NodeUtil.newNumber(type,  child1);	      	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  return  Node.newString(type,  child1);  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  Node.newString(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  Node.newString(type,  child1);	      	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  return  newNode(type,  child1,  null);  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  newNode(type,  child1,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  newNode(type,  child1,  null);	      	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  return  NodeUtil.newString(type,  child1);  [CE]  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  NodeUtil.newString(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  NodeUtil.newString(type,  child1);	      	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  child1);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  child1);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  this.sourceName);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  this.sourceName);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  this.sourceName);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  false);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  false);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  config);  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.bodyNode,  config);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(this.bodyNode);  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(this.bodyNode);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  return  new  Node(child1,  type,  child1).clonePropsFrom(templateNode);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type,  child1).clonePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type,  child1).clonePropsFrom(templateNode);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  	3	None	replace
21	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(templateNode,  type);  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(templateNode,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(templateNode,  type);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  	3	None	replace
22	[BUG]  [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(parent);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type).clonePropsFrom(parent);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  	3	None	replace
23	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(this);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  	12	None	replace
24	[BUG]  [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(this);  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type).clonePropsFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  	12	None	replace
25	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this,  config);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this,  config);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  	12	None	replace
26	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(this);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
27	[BUG]  [BUGGY]  return  new  Node(child1,  child1).removePropsFrom(type);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).removePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).removePropsFrom(type);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
28	[BUG]  [BUGGY]  return  new  Node(type,  child1).removePropsFrom(child2);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).removePropsFrom(child2);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).removePropsFrom(child2);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
29	[BUG]  [BUGGY]  return  new  Node(type,  child1).getPropsFrom(child1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).getPropsFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).getPropsFrom(child1);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
30	[BUG]  [BUGGY]  return  new  Node(type,  child1).removePropsFrom(child1  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).removePropsFrom(child1  -  1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).removePropsFrom(child1  -  1);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
31	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  child1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(type,  child1);	  return    new    Node(child1,    child1).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	2	None	replace
32	[BUG]  [BUGGY]  return  new  Node(child1,  child1.clonePropsFrom(type,  child1));  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1.clonePropsFrom(type,  child1));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1.clonePropsFrom(type,  child1));	  return    new    Node(child1,    child1).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	2	None	replace
33	[BUG]  [BUGGY]  return  new  Node(child1,  child2).clonePropsFrom(type);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child2).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child2).clonePropsFrom(type);	  return    new    Node(child1,    child1).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	2	None	replace
34	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child2);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child2);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(child2);	  return    new    Node(type,    child1).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	1	None	replace
35	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  false);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(child1,  false);	  return    new    Node(type,    child1).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	1	None	replace
36	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  config);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(child1,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(child1,  config);	  return    new    Node(type,    child1).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	1	None	replace
37	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  parent);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(type,  parent);	  return    new    Node(child1,    child1).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	9	None	replace
38	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  config);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(type,  config);	  return    new    Node(child1,    child1).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	9	None	replace
39	[BUG]  [BUGGY]  return  new  Node(child1,  type).clone();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type).clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type).clone();	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
40	[BUG]  [BUGGY]  return  new  Node(type,  child1,  false).clone();  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1,  false).clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1,  false).clone();	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
41	[BUG]  [BUGGY]  return  new  Node(type,  child1.clone());  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clone());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clone());	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
42	[BUG]  [BUGGY]  return  new  Node(type,  child1).removeChild(child1);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).removeChild(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).removeChild(child1);	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
43	[BUG]  [BUGGY]  return  new  Node(child1,  child1.clonePropsFrom(type));  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1.clonePropsFrom(type));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1.clonePropsFrom(type));	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
44	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child2));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child2));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child2));	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
45	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  false);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child1),  false);	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
46	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  parent);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child1),  parent);	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
47	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  true);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  true);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child1),  true);	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
48	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  null);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child1),  null);	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
49	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clone();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clone();	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
50	[BUG]  [BUGGY]  return  new  Node(type,  child1).reset();  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).reset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).reset();	  return    new    Node(type,    child1).clone();    	non-compiled	[CE]  ')'  expected	5	None	replace
51	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(this.bodyNode);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneParentsFrom(this.bodyNode);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  ')'  expected	7	None	replace
52	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.child1);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.child1);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  ')'  expected	7	None	replace
53	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  templateNode);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(type,  templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(type,  templateNode);	  return    new    Node(child1,    child1).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	2	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1));  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1));	      	non-compiled	[CE]  ')'  expected	8	None	replace
55	[BUG]  [BUGGY]  return  NodeUtil.newNode(type,  child1);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  NodeUtil.newNode(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  NodeUtil.newNode(type,  child1);	      	non-compiled	[CE]  ')'  expected	8	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  this);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1),  this);	      	non-compiled	[CE]  ')'  expected	8	None	replace
57	[BUG]  [BUGGY]  return  NodeUtil.newName(type,  child1);  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  NodeUtil.newName(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  NodeUtil.newName(type,  child1);	      	non-compiled	[CE]  ')'  expected	8	None	replace
58	[BUG]  [BUGGY]  return  new  Node(child1,  parent).clonePropsFrom(templateNode);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  parent).clonePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  parent).clonePropsFrom(templateNode);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	3	None	replace
59	[BUG]  [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(child1);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  type).clonePropsFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  type).clonePropsFrom(child1);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	3	None	replace
60	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(parent);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(parent);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  ')'  expected	6	None	replace
61	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(parent);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneParentsFrom(parent);	  return    new    Node(type,    child1).clonePropsFrom(parent);    	non-compiled	[CE]  ')'  expected	6	None	replace
62	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  this);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child1),  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child1),  this);	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
63	[BUG]  [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child3));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.clonePropsFrom(child3));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.clonePropsFrom(child3));	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
64	[BUG]  [BUGGY]  return  new  Node(type,  child1).addPropsFrom(child1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).addPropsFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).addPropsFrom(child1);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
65	[BUG]  [BUGGY]  return  new  Node(type,  child1).removeChildrenFrom(child1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).removeChildrenFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).removeChildrenFrom(child1);	  return    new    Node(type,    child1).removePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	10	None	replace
66	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(child1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneParentsFrom(child1);	  return    new    Node(type,    child1).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	1	None	replace
67	[BUG]  [BUGGY]  return  new  Node(child,  type).newNode();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child,  type).newNode();	  return    new    Node(type,    child1).newNode();    	non-compiled	[CE]  ')'  expected	11	None	replace
68	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(this);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneParentsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneParentsFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
69	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePathFrom(this);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePathFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePathFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
70	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneNodesFrom(this);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneNodesFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneNodesFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
71	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneFunctionsFrom(this);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneFunctionsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneFunctionsFrom(this);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
72	[BUG]  [BUGGY]  return  new  Node(child1,  child1).cloneParentsFrom(type);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).cloneParentsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).cloneParentsFrom(type);	  return    new    Node(child1,    child1).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	9	None	replace
73	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this,  child1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this,  child1);	  return    new    Node(type,    child1).clonePropsFrom(this);    	non-compiled	[CE]  ')'  expected	12	None	replace
74	[BUG]  [BUGGY]  return  new  Node(type,  child1.cloneTree());  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.cloneTree());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.cloneTree());	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
75	[BUG]  [BUGGY]  return  new  Node(type,  child1.cloneChildrenFrom(child1));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1.cloneChildrenFrom(child1));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1.cloneChildrenFrom(child1));	  return    new    Node(type,    child1.clonePropsFrom(child1));    	non-compiled	[CE]  ')'  expected	4	None	replace
76	[BUG]  [BUGGY]  return  new  Node(type,  child1).removePropsFrom(this.bodyNode);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).removePropsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).removePropsFrom(this.bodyNode);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  ')'  expected	7	None	replace
77	[BUG]  [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.child1,  this.bodyNode);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).clonePropsFrom(this.child1,  this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).clonePropsFrom(this.child1,  this.bodyNode);	  return    new    Node(type,    child1).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  ')'  expected	7	None	replace
78	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(templateNode,  child1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(templateNode,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(templateNode,  child1);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	3	None	replace
79	[BUG]  [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(parentNode);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).clonePropsFrom(parentNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).clonePropsFrom(parentNode);	  return    new    Node(child1,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	3	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  child1,  newNode());  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  child1,  newNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  child1,  newNode());	      	non-compiled	[CE]  	8	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  child1,  newNode);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  child1,  newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  child1,  newNode);	      	non-compiled	[CE]  ')'  expected	8	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  this);	      	non-compiled	[CE]  ')'  expected	8	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  false));  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  false));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1,  false));	      	non-compiled	[CE]  ')'  expected	8	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this).traverse(this);  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  NodeTraversal.traverse(compiler,  this).traverse(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	NodeTraversal.traverse(compiler,  this).traverse(this);	      	non-compiled	[CE]  ')'  expected	8	None	replace
85	[BUG]  [BUGGY]  return  new  Node(child1,  child1).replaceChild(bodyNode,  newNode);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(child1,  child1).replaceChild(bodyNode,  newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(child1,  child1).replaceChild(bodyNode,  newNode);	  return    new    Node(child1,    child1).clonePropsFrom(templateNode);    	non-compiled	[CE]  ')'  expected	2	None	replace
86	[BUG]  [BUGGY]  return  new  Node(type,  child1).cloneTree();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1)  {    [BUGGY]  return  new  Node(type,  child1).cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2672612419124244	1194	1194	1	replace	return  new  Node(type,  child1).cloneTree();	  return    new    Node(type,    child1).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	1	None	replace
