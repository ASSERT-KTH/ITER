bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  reportErrorReporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  new  NodeTraversal());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  type,  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  type,  this);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(type));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  this);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  this);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  config);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.flagsNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.flagsNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.flagsNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  return  new  Node(irNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(irNode).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(irNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  irNode);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(irNode,  config);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  return  new  Node(null,  type).clonePropsFrom(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(null,  type).clonePropsFrom(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(null,  type).clonePropsFrom(irNode);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(irNode,  this);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  return  new  Node(rootNodeJsDocBuilder).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(rootNodeJsDocBuilder).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(rootNodeJsDocBuilder).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(rootNodeJsDocHolder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  type);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocHolder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(templateNode,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(templateNode,  rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(templateNode,  rootNodeJsDocHolder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  errorReporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  errorReporter);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocBuilder,  templateNode);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  templateNode,  config);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  this.templateNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  this.templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  this.templateNode);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  return  new  Node(null,  type).newNode();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(null,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(null,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  return  new  Node(this,  type).newNode();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(this,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(this,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  return  new  Node(this.node,  type).newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(this.node,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(this.node,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  return  new  Node(newBlock).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(newBlock).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(newBlock).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(this.bodyNode,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(this.bodyNode,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  return  new  Node(newBlock,  type).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(newBlock,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(newBlock,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  return  new  Node(ret).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(ret).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(ret).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(ret,  config);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  ret);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  return  new  Node(ret.type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(ret.type).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(ret.type).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  bodyNode);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  bodyNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  bodyNode);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(bodyNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(bodyNode,  config);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(this.assign).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.flagsNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.flagsNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.flagsNode);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.reporter);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(ret.getType()).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type,  config).clonePropsFrom(ret);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(newNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(newNode);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  false));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  false);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	NodeTraversal.traverse(compiler,  type,  newNode());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  rootNodeJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
68	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).newNode();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(Token.NAME,  type).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(Token.NAME,  type).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  return  new  Node(type,  config).newNode();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type,  config).newNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type,  config).newNode();	  return    new    Node(type).newNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
70	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNode,  templateNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNode,  templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNode,  templateNode);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  sourceStringNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  sourceStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(rootNodeJsDocHolder,  sourceStringNode);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.childNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this,  node);	  return    new    Node(type).clonePropsFrom(this,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.report);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.report);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.rootNodeJsDocBuilder);	  return    new    Node(type).clonePropsFrom(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(ret,  type).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(ret);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(newBlock);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(newBlock);	  return    new    Node(type).clonePropsFrom(bodyNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).removePropsFrom(this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
80	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.irNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type)  {    [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1190	1190	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
