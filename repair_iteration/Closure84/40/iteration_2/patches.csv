bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getLineno());	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getCharno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getCharno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getCharno());	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition()  -  1);	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition()  +  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition()  +  1);	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  2  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  2  +  1;	  int    lineno    =    node.getLineno()    /    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getLineno()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getLineno()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(position2charno(irNode.getLineno()));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
8	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getLineno());	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition(),  irNode.getLineno());	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getLineno()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getLineno()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getLineno()));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
11	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  +  2;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  +  2;	  int    lineno    =    irNode.getLineno()    /    2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  byte  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  byte  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	byte  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  *  2  +  1;	  int    lineno    =    node.getLineno()    *    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  /  2  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  /  2  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  /  2  +  1;	  int    lineno    =    node.getLineno()    *    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  2  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  2  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  2  -  1;	  int    lineno    =    node.getLineno()    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
19	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  *  2  -  1;	  int    lineno    =    node.getLineno()    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
20	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  /  2  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  /  2  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  /  2  -  1;	  int    lineno    =    node.getLineno()    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getLastChild().getLineno());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getFirstChild().getCharno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getFirstChild().getCharno());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  irNode.setLineno(0,  irNode.getFirstChild().getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(0,  irNode.getFirstChild().getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(0,  irNode.getFirstChild().getLineno());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  float  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(irNode.getAbsolutePosition());	  float    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  long  lineno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  long  lineno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	long  lineno  =  position2charno(node.getAbsolutePosition());	  float    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  double  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  position2charno(irNode.getAbsolutePosition());	  double    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  Integer  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2charno(irNode.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
35	[BUG]  [BUGGY]  Integer  lineno  =  irNode.position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  irNode.position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  irNode.position2charno(node.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  Integer  lineno  =  position1charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position1charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position1charno(irNode.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  Integer  lineno  =  position2Charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2Charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2Charno(irNode.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
39	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getLineno());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  irNode.setLineno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  -  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  -  1  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  -  1  +  1;	  int    lineno    =    node.getLineno()    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  1  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  1  +  1;	  int    lineno    =    node.getLineno()    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  1  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  1  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  1  +  1;	  int    lineno    =    node.getLineno()    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  *  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  *  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  *  1;	  int    lineno    =    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  Integer  lineno  =  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  irNode.getLineno()  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  irNode.getLineno()  +  1;	  int    lineno    =    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  char  lineno  =  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  irNode.getLineno()  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  irNode.getLineno()  +  1;	  int    lineno    =    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
48	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  /  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  /  1;	  int    lineno    =    node.getLineno()    /    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  4;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  4;	  int    lineno    =    node.getLineno()    /    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  float  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
51	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  String  lineno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  String  lineno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	String  lineno  =  position2charno(node.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Lineno  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Lineno  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Lineno  lineno  =  position2charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  Boolean  lineno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Boolean  lineno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Boolean  lineno  =  position2charno(node.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  Char  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Char  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Char  lineno  =  position2charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  Number  lineno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Number  lineno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Number  lineno  =  position2charno(node.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  +  node.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  *  2  +  node.getAbsolutePosition();  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  *  2  +  node.getAbsolutePosition();	  int    lineno    =    node.getLineno()    *    2    +    irNode.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
60	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  2  +  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  2  +  irNode.getAbsolutePosition();  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  2  +  irNode.getAbsolutePosition();	  int    lineno    =    node.getLineno()    *    2    +    irNode.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
61	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  2  /  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  2  /  irNode.getAbsolutePosition();  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  2  /  irNode.getAbsolutePosition();	  int    lineno    =    node.getLineno()    *    2    +    irNode.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  2  +  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  2  +  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  2  +  position2charno(irNode.getAbsolutePosition());	  int    lineno    =    node.getLineno()    *    2    +    irNode.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
63	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  0);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition(),  0);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  char  lineno  =  irNode.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  irNode.getLineno()  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  irNode.getLineno()  -  1;	  int    lineno    =    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
66	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  *  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  *  4;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  *  4;	  int    lineno    =    node.getLineno()    *    4;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
67	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  /  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  /  4;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  /  4;	  int    lineno    =    node.getLineno()    *    4;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  irNode.setLineno(lineno);  int  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(lineno);  int  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(lineno);  int  lineno  =  position2charno(irNode.getAbsolutePosition());	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
69	[BUG]  [BUGGY]  if(lineno  ==  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  ==  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  ==  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
70	[BUG]  [BUGGY]  if(lineno!=  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno!=  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno!=  null)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
71	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
72	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLineno());  int  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getLineno());  int  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getLineno());  int  lineno  =  position2charno(irNode.getAbsolutePosition());	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
73	[BUG]  [BUGGY]  if(lineno  ==  null)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  ==  null)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  ==  null)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
74	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
75	[BUG]  [BUGGY]  char  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  position2charno(irNode.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
78	[BUG]  [BUGGY]  double  lineno  =  irNode.getLineno()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  irNode.getLineno()  -  2;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  irNode.getLineno()  -  2;	  int    lineno    =    irNode.getLineno()    -    2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
79	[BUG]  [BUGGY]  Integer  lineno  =  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  irNode.getLineno();  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  irNode.getLineno();	  int    lineno    =    irNode.getLineno()    -    2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
80	[BUG]  [BUGGY]  String  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  String  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	String  lineno  =  position2charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  Boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Boolean  lineno  =  position2charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  String  lineno  =  position2Charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  String  lineno  =  position2Charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	String  lineno  =  position2Charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  charno  =  position1charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position1charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position1charno(irNode.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  charno  =  position2charno(node.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  irNode  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode  =  position2charno(node.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  charno  =  position2charno(irNode,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode,  node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode,  node.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
88	[BUG]  [BUGGY]  no  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  no  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	no  =  position2charno(irNode.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
89	[BUG]  [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
90	[BUG]  [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
91	[BUG]  [BUGGY]  int  lineno  =  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(node.getAbsolutePosition()  +  1);	  int    lineno    =    position2charno(node.getAbsolutePosition()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
92	[BUG]  [BUGGY]  Node  lineno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Node  lineno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Node  lineno  =  position2charno(node.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  Lineno  charno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Lineno  charno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Lineno  charno  =  position2charno(node.getAbsolutePosition());	  char    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
94	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  0);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition(),  0);	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
95	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition(),  lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(irNode.getAbsolutePosition(),  lineno);	  charno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
96	[BUG]  [BUGGY]  Integer  lineno  =  position1charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position1charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position1charno(node.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
97	[BUG]  [BUGGY]  Integer  lineno  =  position3charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position3charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position3charno(node.getAbsolutePosition());	  Integer    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
98	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  2  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  2  /  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  2  /  1;	  int    lineno    =    node.getLineno()    *    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  charno  =  position2charno(position2charno(irNode.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(position2charno(irNode.getAbsolutePosition()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(position2charno(irNode.getAbsolutePosition()));	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  charno  =  position2charno(position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(position2charno(irNode.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  charno  =  position1charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position1charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position1charno(node.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  charno  =  position4charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position4charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position4charno(irNode.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  /  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  /  3;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  /  3;	  int    lineno    =    node.getLineno()    /    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
104	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getFirstChild().getString());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getFirstChild().getString());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
105	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  4  +  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  4  +  irNode.getAbsolutePosition();  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  4  +  irNode.getAbsolutePosition();	  int    lineno    =    node.getLineno()    *    4;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
106	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  4  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  4  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  4  +  1;	  int    lineno    =    node.getLineno()    *    4;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
107	[BUG]  [BUGGY]  int  lineno  =  node.getLineno()  *  4  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  node.getLineno()  *  4  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  node.getLineno()  *  4  -  1;	  int    lineno    =    node.getLineno()    *    4;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
108	[BUG]  [BUGGY]  int  lineno  =  position2charno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(position2charno(node.getAbsolutePosition()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(position2charno(node.getAbsolutePosition()));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  float  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
110	[BUG]  [BUGGY]  float  lineno  =  irNode.getLineno()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  float  lineno  =  irNode.getLineno()  -  2;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	float  lineno  =  irNode.getLineno()  -  2;	  int    lineno    =    irNode.getLineno()    -    2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
111	[BUG]  [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
112	[BUG]  [BUGGY]  boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	boolean  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
113	[BUG]  [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
114	[BUG]  [BUGGY]  char  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
115	[BUG]  [BUGGY]  boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	boolean  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(irNode.getLineno());	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
116	[BUG]  [BUGGY]  int  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
117	[BUG]  [BUGGY]  irNode.setLineno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(irNode.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition()  +  1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition()  +  1);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
119	[BUG]  [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	char  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
121	[BUG]  [BUGGY]  if(lineno  ==  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  ==  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  ==  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
122	[BUG]  [BUGGY]  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
123	[BUG]  [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
125	[BUG]  [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  +  1));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  +  1));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
126	[BUG]  [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition(),  0));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition(),  0));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition(),  0));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
127	[BUG]  [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  -  1));  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(position2charno(irNode.getAbsolutePosition()  -  1));	  int    lineno    =    position2charno(position2charno(irNode.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
128	[BUG]  [BUGGY]  double  lineno  =  node.getLineno()  /  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  node.getLineno()  /  2  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  node.getLineno()  /  2  +  1;	  int    lineno    =    node.getLineno()    *    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
129	[BUG]  [BUGGY]  Integer  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Integer  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Integer  lineno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(lineno);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  irNode.setCharno(irNode.getFirstChild().getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setCharno(irNode.getFirstChild().getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setCharno(irNode.getFirstChild().getLineno());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
131	[BUG]  [BUGGY]  irNode.setLineno(getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  irNode.setLineno(getLineno());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	irNode.setLineno(getLineno());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
132	[BUG]  [BUGGY]  Lineno  line  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  Lineno  line  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	Lineno  line  =  position2charno(irNode.getAbsolutePosition());	  char    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
133	[BUG]  [BUGGY]  if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
134	[BUG]  [BUGGY]  if(lineno  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  ==  -1)  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
135	[BUG]  [BUGGY]  if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno  >=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
136	[BUG]  [BUGGY]  if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	if(lineno!=  node.getLineno())  {  irNode.setLineno(lineno);  int  lineno  =  position2charno(node.getAbsolutePosition());  }  else  {	  irNode.setLineno(lineno);    int    lineno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
137	[BUG]  [BUGGY]  charno  =  position2charno(jsDocInfo.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  charno  =  position2charno(jsDocInfo.getAbsolutePosition());  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	charno  =  position2charno(jsDocInfo.getAbsolutePosition());	  charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
138	[BUG]  [BUGGY]  int  lineno  =  irNode.getLineno()  /  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLineno()  /  1  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLineno()  /  1  +  1;	  int    lineno    =    node.getLineno()    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
139	[BUG]  [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    lineno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(lineno);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
140	[BUG]  [BUGGY]  double  lineno  =  irNode.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  irNode.getLineno()  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  irNode.getLineno()  -  1;	  int    lineno    =    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
141	[BUG]  [BUGGY]  int  lineno  =  irNode.getLength()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  irNode.getLength()  -  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  irNode.getLength()  -  1;	  int    lineno    =    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
142	[BUG]  [BUGGY]  double  lineno  =  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  double  lineno  =  irNode.getLineno()  +  1;  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	double  lineno  =  irNode.getLineno()  +  1;	  int    lineno    =    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
143	[BUG]  [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {          [BUGGY]  int  lineno  =  position2charno(irNode.getAbsolutePosition(),  -1);  [BUGGY]      irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	221	221	1	replace	int  lineno  =  position2charno(irNode.getAbsolutePosition(),  -1);	  int    lineno    =    position2charno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
