bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()!=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()!=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()!=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  >=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
6	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
7	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
8	[BUG]  [BUGGY]  Node  irNode  =  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getLastChild();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getLastChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
9	[BUG]  [BUGGY]  Node  irNode  =  comment.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  comment.getFirstChild();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  comment.getFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
10	[BUG]  [BUGGY]  Node  irNode  =  node.getNext();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getNext();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getNext();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
11	[BUG]  [BUGGY]  Node  irNode  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getParent();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getParent();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
12	[BUG]  [BUGGY]  Node  irNode  =  node.getIrrorNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getIrrorNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getIrrorNode();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
13	[BUG]  [BUGGY]  Node  irNode  =  node.getAncestor(1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getAncestor(1);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getAncestor(1);	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
14	[BUG]  [BUGGY]  Comment  comment  =  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  irNode.getJSDocInfo();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  irNode.getJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
15	[BUG]  [BUGGY]  Comment  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getComment();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getComment();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  Comment  comment  =  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getJsDocInfo();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getJsDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
17	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getAstRootNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getAstRootNode();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
18	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getAstNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getAstNode();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
19	[BUG]  [BUGGY]  Comment  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getParent();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getParent();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
20	[BUG]  [BUGGY]  if(comment!=  null  ||  node.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.hasParsed())  {	  if(comment!=    null    &&    node.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
21	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.hasParsed())  {	  if(comment!=    null    &&    node.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
22	[BUG]  [BUGGY]  if(node!=  null  &&  node.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.hasParsed())  {	  if(comment!=    null    &&    node.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
23	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getParsed())  {	  if(comment!=    null    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getParsed())  {	  if(comment!=    null    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
25	[BUG]  [BUGGY]  if(comment!=  null  ||  Comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  Comment.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  Comment.getParsed()  ==  null)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
26	[BUG]  [BUGGY]  if(comment!=  null  &&  Comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  Comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  Comment.getParsed()!=  null)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
27	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()!=  null)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
28	[BUG]  [BUGGY]  if(comment!=  null  &&  Comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  Comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  Comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
29	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
30	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
31	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
32	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
33	[BUG]  [BUGGY]  if(comment!=  node  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
34	[BUG]  [BUGGY]  if(comment  ==  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
35	[BUG]  [BUGGY]  if(node!=  comment  ||  node.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  comment  ||  node.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  comment  ||  node.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
36	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsed()!=  null)  {	  if(comment!=    null    &&    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
37	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  >=  null)  {	  if(comment!=    null    &&    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
38	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment    [Delete]    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
39	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.CALL)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
40	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SCRIPT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SCRIPT)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
41	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.setParsed(false))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
42	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.setParsed(false))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
43	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.setParsed(true))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
44	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.setParsed(false))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
45	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.hasChildren())  {	  if(comment!=    null    &&    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getChildren().size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getChildren().size()  >  0)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getChildren().size()  >  0)  {	  if(comment!=    null    &&    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.CALL  &&  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.CALL  &&  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.CALL  &&  comment.hasChildren())  {	  if(comment!=    null    &&    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasChildren()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.hasChildren()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasChildren()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsedState())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getParsedState())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsedState())  {	  if(comment!=    null    &&    comment.getParsedState())    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
51	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsedState())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsedState())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsedState())  {	  if(comment!=    null    &&    comment.getParsedState())    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
52	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsedState())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getParsedState())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsedState())  {	  if(comment!=    null    &&    comment.getParsedState())    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
53	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getState())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getState())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getState())  {	  if(comment!=    null    &&    comment.getParsedState())    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
54	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasParsedState())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.hasParsedState())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasParsedState())  {	  if(comment!=    null    &&    comment.getParsedState())    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
55	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
56	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node,  comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node,  comment);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
57	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  findJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  findJsDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  findJsDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
58	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
59	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
60	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
61	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
62	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
63	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
64	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
65	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
66	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
67	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
68	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
69	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
70	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
71	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
72	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.hasParsed())  {	  if(comment    ==    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
74	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  fileLevelJsDocBuilder);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  fileLevelJsDocBuilder);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
75	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  node);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
76	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment,  comment.setParsed(true);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
77	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()!=  Token.VAR)  {	  if(comment    ==    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
78	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.VAR)  {	  if(comment    ==    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
79	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isPossibleFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isPossibleFileOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isPossibleFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
82	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isFileOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.isPossibleFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.isPossibleFileOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.isPossibleFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
84	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isImmutableFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isImmutableFileOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isImmutableFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
85	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isDocInfo())  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isDocInfo())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
86	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.EXPR_RESULT)  {	  if(comment    [Delete]    null    &&    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
87	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY)  {	  if(comment    [Delete]    null    &&    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
88	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "* "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "* "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "* "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
89	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "/ "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "/ "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "/ "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
90	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "DocInfo "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "DocInfo "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "DocInfo "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
91	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "_ "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "_ "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
92	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "__ "))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "__ "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "__ "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
93	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getName().equals( "   "))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getName().equals( "   "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getName().equals( "   "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
94	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
95	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
96	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
97	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
98	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
99	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
100	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
101	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDocInfo())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJsDocInfo())  {	  if(comment    ==    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
103	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
104	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VAR  &&  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
105	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
106	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
107	[BUG]  [BUGGY]  if(comment!=  node  &&  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  &&  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  &&  comment.getType()  ==  Token.NAME)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
108	[BUG]  [BUGGY]  if(comment  ==  node  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  node  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  node  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
109	[BUG]  [BUGGY]  if(node!=  comment  ||  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  comment  ||  node.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  comment  ||  node.getType()  ==  Token.NAME)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
110	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJAsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJAsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJAsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(irNode);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode,  comment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode,  comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(irNode);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
112	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ||  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsed()  ||  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
113	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(true))  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
114	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName()  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName()  ||  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName()  ||  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
115	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
116	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
117	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
118	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
119	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.GETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isPossibleFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isPossibleFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isPossibleFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
121	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
122	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.isPossibleFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.isPossibleFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.isPossibleFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
123	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isImmutableFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isImmutableFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isImmutableFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
124	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  >=  Token.GETPROP)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
125	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()!=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
126	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()!=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
127	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()!=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
128	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  >=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  >=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
129	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJSDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
130	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  getJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  comment  =  getJsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  comment  =  getJsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
131	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getParsed())  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
132	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getParsed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getParsed())  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
133	[BUG]  [BUGGY]  if(node!=  null  &&  node.getParsed())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.getParsed())  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
134	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
135	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
136	[BUG]  [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
137	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
138	[BUG]  [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
139	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.VAR)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
140	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.VAR)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
141	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getName()!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getName()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getName()!=  null)  {	  if(comment!=    null    ||    comment.getParsed()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
142	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isParsed()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isParsed()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isParsed()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
143	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsed()  &&  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isParsed()  &&  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsed()  &&  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
144	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
145	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isStatement()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isStatement()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isStatement()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
146	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasChildren()  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.hasChildren()  ||  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasChildren()  ||  comment.isParsed())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
147	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()!=  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
148	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getParsed()  ==  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
149	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getParsed()!=  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
150	[BUG]  [BUGGY]  if(node!=  null  &&  node.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.getParsed()  ==  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
151	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  >=  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  >=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  >=  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
152	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  comment.getJSDocInfoParser();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  comment.getJSDocInfoParser();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  comment.getJSDocInfoParser();	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
153	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
154	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(0);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(0);	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
155	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser(true);	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
156	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser2();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser2();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser2();	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
157	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.hasType())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.hasType())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.hasType())  {	  if(comment!=    null    &&    comment.hasType())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
158	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.hasType())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.hasType())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.hasType())  {	  if(comment!=    null    &&    comment.hasType())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
159	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.isParsed())  {	  if(comment!=    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
160	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
161	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    node.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
164	[BUG]  [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    node.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
165	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    node.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
166	[BUG]  [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  node.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    node.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
167	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(node))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(node))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(node))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
168	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isAssignableFrom(comment))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isAssignableFrom(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isAssignableFrom(comment))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
169	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(sourceString))  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(sourceString))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(sourceString))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
170	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.isAssignableFrom(comment))  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.isAssignableFrom(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.isAssignableFrom(comment))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
171	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(irNode))  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(irNode))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(irNode))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
172	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(org.jboss.node.JSDocInfo))  {  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(org.jboss.node.JSDocInfo))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(org.jboss.node.JSDocInfo))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
173	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  >=  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
174	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  node);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
175	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
176	[BUG]  [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(node!=  null  &&  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(node!=  null  &&  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
177	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
178	[BUG]  [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
179	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.isAssignableFrom(comment))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.isAssignableFrom(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.isAssignableFrom(comment))  {	  if(comment    ==    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
180	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasJSDocInfo())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasJSDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasJSDocInfo())  {	  if(comment    ==    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
181	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsed()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
182	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsed()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
183	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
184	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  >=  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
185	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()!=  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
186	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
187	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
188	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
189	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
190	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  node.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  node.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  node.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
191	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  false)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsed()  ==  false)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
192	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  false)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ==  false)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
193	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  false)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsed()  ==  false)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
194	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  true)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ==  true)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
195	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  false)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  >=  false)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  >=  false)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
196	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getName()!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getName()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getName()!=  null)  {	  if(comment    ==    null    ||    comment.getParsed()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
197	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.FUNCTION)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
198	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.setParsed(false))  {	  if(comment!=    null    &&    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
199	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.setParsed(false))  {	  if(comment!=    null    &&    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
200	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.setParsed(true,  false))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.setParsed(true,  false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.setParsed(true,  false))  {	  if(comment!=    null    &&    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
201	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isParsedIn())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isParsedIn())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isParsedIn())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
202	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.isParsedIn())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.isParsedIn())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.isParsedIn())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
203	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
204	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(false);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(false);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
205	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
206	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
207	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(true);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(true);  }  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(true);  }	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
208	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(false);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(false);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  &&  comment.setParsed(false);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
209	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VOID)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VOID)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.VOID)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VOID)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
210	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VOID)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VOID)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.VOID)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VOID)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
211	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.setParsed(true))  {	  if(comment!=    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
212	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
213	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(node);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
214	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJSDocInfoParser(comment);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
215	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  fileLevelJsDocBuilder);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  fileLevelJsDocBuilder);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
216	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
217	[BUG]  [BUGGY]  Comment  comment  =(Comment)node.cloneTree();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)node.cloneTree();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)node.cloneTree();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
218	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.clone();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.clone();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
219	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc(node);	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
220	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.clonePossibleFileOverviewJsDoc();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
221	[BUG]  [BUGGY]  Comment  comment  =(Comment)irNode.cloneTree();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)irNode.cloneTree();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)irNode.cloneTree();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
222	[BUG]  [BUGGY]  Comment  comment  =(Comment)this.comment.cloneTree();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)this.comment.cloneTree();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)this.comment.cloneTree();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
223	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.CALL)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
224	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SCRIPT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SCRIPT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.SCRIPT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
225	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.CALL)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
226	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  errorReporter);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  errorReporter);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
227	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  errorReporter);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  this,  errorReporter);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
228	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  this,  comment);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
229	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  fileLevelJsDocBuilder);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  this,  fileLevelJsDocBuilder);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
230	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  config);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  this,  config);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
231	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  errorsReporter);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  errorsReporter);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  errorsReporter);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
232	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
233	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  comment.getJsDocInfoParser();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  comment.getJsDocInfoParser();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  comment.getJsDocInfoParser();	  JsDocInfoParser    jsDocParser    =    node.getJsDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
234	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    node.getJsDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
235	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(0);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(0);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(0);	  JsDocInfoParser    jsDocParser    =    node.getJsDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
236	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.hasParsed())  {	  if(comment!=    null    ||    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
237	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
238	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.STRING)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.STRING)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
239	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
240	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
241	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
242	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node,  comment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(node,  comment);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
243	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
244	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  >=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  >=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  >=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
245	[BUG]  [BUGGY]  if(comment!=  null  &&  node.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.hasChildren())  {	  if(comment!=    null    &&    node.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
246	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName()  ==  null)  {	  if(comment!=    null    &&    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
247	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETMODE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETMODE)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.SETMODE)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
248	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETELEM)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.SETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
249	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  new  JsDocInfoParser(node.getJSDocInfoParser());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  new  JsDocInfoParser(node.getJSDocInfoParser());  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  new  JsDocInfoParser(node.getJSDocInfoParser());	  JsDocInfoParser    jsDocParser    =    node.getJSDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
250	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.EXPR_RESULT)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
251	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isChildren()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isChildren()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isChildren()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed()    ||    comment.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
252	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node,  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node,  comment);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
253	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
254	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
255	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasParsedIn())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.hasParsedIn())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasParsedIn())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
256	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
257	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
258	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
259	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.setPossibleFileOverviewJsDoc(comment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.setPossibleFileOverviewJsDoc(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.setPossibleFileOverviewJsDoc(comment))  {	  if(comment!=    null    &&    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
260	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
261	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  >=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
262	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.hasDocInfo())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.hasDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.hasDocInfo())  {	  if(comment!=    null    ||    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
263	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.CALL)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
264	[BUG]  [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  node.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  node.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
265	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
266	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isDocPossibleFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isDocPossibleFileOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isDocPossibleFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
267	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isDocOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isDocOverviewJSDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isDocOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
268	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isDocInfo())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isDocInfo())  {	  if(comment!=    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
269	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isAssignableFrom(node))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isAssignableFrom(node))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isAssignableFrom(node))  {	  if(comment!=    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
270	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isComment())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.isComment())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isComment())  {	  if(comment!=    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
271	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "- "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "- "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "- "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
272	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( ". "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( ". "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( ". "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
273	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
274	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
275	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
276	[BUG]  [BUGGY]  Comment  comment  =  node.getDefaultJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getDefaultJSDocInfo();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getDefaultJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
277	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ||  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
278	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  &&  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
279	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()!=  false)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()!=  false)  {	  if(comment!=    null    &&    comment.getParsed()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
280	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETMODE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETMODE)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SETMODE)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
281	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETELEM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
282	[BUG]  [BUGGY]  JsDocParser  jsDocParser  =  createJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocParser  jsDocParser  =  createJsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocParser  jsDocParser  =  createJsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(irNode);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
283	[BUG]  [BUGGY]  if(comment  ==  null  &&  Comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  Comment.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  Comment.getParsed()  ==  null)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
284	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  comment.getType()  >=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  >=  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    >=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
285	[BUG]  [BUGGY]  if(comment  ==  null  &&  node.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  &&  node.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  node.getParsed()  ==  null)  {	  if(comment!=    null    &&    node.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
286	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETELM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
287	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasAssignableFrom(comment))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.hasAssignableFrom(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasAssignableFrom(comment))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
288	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.canAssignTo(comment))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.canAssignTo(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.canAssignTo(comment))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
289	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(hashCode,  comment))  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(hashCode,  comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(hashCode,  comment))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
290	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VOID)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VOID)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.VOID)  {	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
291	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    node.getJsDocInfoParser();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
292	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  comment);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
293	[BUG]  [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
294	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.cloneAstNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.cloneAstNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.cloneAstNode();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
295	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.cloneParser();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.cloneParser();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.cloneParser();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
296	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isDocPossibleFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isDocPossibleFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isDocPossibleFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
297	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isJsDocInfo())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isJsDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isJsDocInfo())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
298	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isDocFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isDocFileOverviewJsDoc())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isDocFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
299	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(comment))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(comment))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(comment))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
300	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(node))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(node))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.setPossibleFileOverviewJsDoc(node))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
301	[BUG]  [BUGGY]  Node  irNode  =  node.getImmediateParentNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.getImmediateParentNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getImmediateParentNode();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
302	[BUG]  [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  ||  comment.getType()  ==  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
303	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.NAME  ||  comment.hasChildren())  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
304	[BUG]  [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
305	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.isParsed())  {	  if(comment    ==    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
306	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.isParsed()  ||  comment.hasChildren())  {	  if(comment    ==    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
307	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  ||  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.getParsed())  {	  if(comment!=    null    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
308	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getParsed())  {	  if(comment!=    null    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
309	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc()  ||  comment.isParsed())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJsDoc())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
310	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment,  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment,  node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment,  node);	  JsDocInfoParser    jsDocParser    =    getJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
311	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
312	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(false);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(false);  }  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  comment.setParsed(false);  }	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.setParsed(true);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
313	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getParsed()!=  null)  {	  if(comment!=    null    ||    comment.getParsed()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
314	[BUG]  [BUGGY]  if(comment  >>  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment    ==    null    &&    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
315	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()!=  Token.GETPROP)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
316	[BUG]  [BUGGY]  if(comment  >>  null  ||  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  ||  comment.getType()!=  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  ||  comment.getType()!=  Token.GETPROP)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
317	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
318	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
319	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
320	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.setParsed(true);	  if(comment!=    null    &&    node.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
321	[BUG]  [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.setParsed(true))  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
322	[BUG]  [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  Comment.getParsed()  ==  null  ||  comment.getParsed()!=  null)  {	  if(comment!=    null    &&    Comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
323	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.CALL)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
324	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.CALL)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.CALL)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
325	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME  ||  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME  ||  comment.setParsed(true))  {	  if(comment!=    null    &&    comment.getParsed()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
326	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
327	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsedFile())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsedFile())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsedFile())  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
328	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParsed()  ||  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ||  comment.setParsed(true))  {	  if(comment!=    null    &&    node.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
329	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
330	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment.setParsed(true);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
331	[BUG]  [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
332	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getParsed()  ==  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getParsed()  ==  null)  {	  if(comment    ==    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
333	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment.setParsed(true);	  JsDocInfoParser    jsDocParser    =    createJSDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
334	[BUG]  [BUGGY]  if(comment!=  node  &&  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  &&  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  &&  comment.isParsed())  {	  if(comment    ==    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
335	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
336	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
337	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getParsed()!=  null)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getParsed()!=  null)  {	  if(comment    ==    null    ||    comment.getParsed()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
338	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc()  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc()  ||  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc()  ||  comment.isParsed())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
339	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDocInfo())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDocInfo())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJSDocInfo())  {	  if(comment!=    null    &&    comment.isPossibleFileOverviewJSDoc())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
340	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParent().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getParent().getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParent().getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    node.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
341	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SET_PROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SET_PROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SET_PROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
342	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  &&  comment.getParsed())  {	  if(comment!=    null    &&    comment.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
343	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.ASSIGN)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.ASSIGN)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.ASSIGN)  {	  if(comment!=    null    &&    comment.hasType())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
344	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.clonePossibleFileOverviewJSDocInfo();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.clonePossibleFileOverviewJSDocInfo();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
345	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.cloneChildren();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =(Comment)comment.cloneChildren();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.cloneChildren();	  Comment    comment    =(Comment)comment.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
346	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  ||  comment.isParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.isParsed())  {	  if(comment!=    null    ||    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
347	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
348	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
349	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
350	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
351	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VOID)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VOID)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VOID)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME    ||    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
352	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(hibernate))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(hibernate))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(hibernate))  {	  if(comment!=    null    &&    comment.isAssignableFrom(comment))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
353	[BUG]  [BUGGY]  if(comment!=  node.getParent()  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node.getParent()  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node.getParent()  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
354	[BUG]  [BUGGY]  if(comment!=  node.getType()  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node.getType()  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node.getType()  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    node    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
355	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "xmlns "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getName().equals( "xmlns "))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( "xmlns "))  {	  if(comment!=    null    &&    comment.getName().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
356	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(false))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(false))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.setParsed(false))  {	  if(comment!=    null    &&    comment.getParsed()    ||    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
357	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
358	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
359	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP    ||    comment.getType()    ==    Token.GETELEM)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
360	[BUG]  [BUGGY]  Node  irNode  =  node.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Node  irNode  =  node.removeFirstChild();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.removeFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
361	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment,  comment.setParsed(true);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
362	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment.setParsed(true);	  JsDocInfoParser    jsDocInfoParser    =    createJsDocInfoParser(comment);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
363	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()!=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
364	[BUG]  [BUGGY]  if(comment  ==  node  ||  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  ==  node  ||  comment.getType()!=  Token.NAME)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  node  ||  comment.getType()!=  Token.NAME)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
365	[BUG]  [BUGGY]  Comment  comment  =  node.getDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getDocInfo();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
366	[BUG]  [BUGGY]  Comment  comment  =  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getParentNode();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getParentNode();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
367	[BUG]  [BUGGY]  Comment  comment  =  node.getXmlComment();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  Comment  comment  =  node.getXmlComment();  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getXmlComment();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
368	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsedFile())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isParsedFile())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsedFile())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
369	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsedBlock())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isParsedBlock())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsedBlock())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
370	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsedIn()  &&  node.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.isParsedIn()  &&  node.hasChildren())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsedIn()  &&  node.hasChildren())  {	  if(comment!=    null    &&    comment.isParsedIn())    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
371	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.setParsed(true))  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.setParsed(true))  {	  if(comment    ==    null    ||    comment.setParsed(true))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
372	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {	  if(comment    [Delete]    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
373	[BUG]  [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
374	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
375	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.STRING)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.STRING)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
376	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.EMPTY  ||  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
377	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
378	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
379	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  ||  comment.hasParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.hasParsed())  {	  if(comment!=    null    ||    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
380	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
381	[BUG]  [BUGGY]  if(comment  >>  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment  >>  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >>  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment    ==    null    ||    comment.getType()!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
382	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.getParsed())  {	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
383	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.setParsed(true);  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETPROP  &&  comment.setParsed(true);	  if(comment!=    null    &&    node.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
384	[BUG]  [BUGGY]  if(comment!=  node  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();      [BUGGY]  if(comment!=  node  &&  comment.getParsed())  {  [BUGGY]      JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  &&  comment.getParsed())  {	  if(comment    ==    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
