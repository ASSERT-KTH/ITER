bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.GETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  >=  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  >=  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.hasParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.hasParsed())  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.hasParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.hasParsed())  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.hasChildren())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasChildren())  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasType())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.hasType())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.hasType())  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.NAME)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.FUNCTION)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.getType()  ==  Token.VAR)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VOID)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VOID)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VOID)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.isParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.isParsed())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJsDoc())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.isParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.isParsed())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isPossibleFileOverviewJSDoc())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(comment))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.isAssignableFrom(comment))  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isAssignableFrom(comment))  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.FUNCTION)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.FUNCTION)  {	  if(comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.CALL)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.CALL)  {	  if(comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(comment);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocInfoParser  =  createJsDocInfoParser(comment);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  Comment  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  Comment  comment  =  node.getJSDocInfo();  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(comment);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getParsed()!=  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsed()!=  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getParsed()!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getParsed()!=  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getParsed()!=  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.getType()!=  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.EMPTY)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.EMPTY)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  if(comment  ==  null  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  &&  comment.getParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  &&  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.getParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed())  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  false)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  false)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ==  false)  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  if(comment!=  null  &&  node.hasParsed())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  node.hasParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  node.hasParsed())  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.SETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.SETPROP)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ==  Token.NAME)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser();  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJSDocInfoParser();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser();  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  node.getJsDocInfoParser();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	JsDocInfoParser  jsDocParser  =  getJsDocInfoParser(node);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getName().equals( " "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getName().equals( " "))  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getName().equals( " "))  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  ||  comment.setParsed(true))  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  ||  comment.setParsed(true))  {	  if(comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.setParsed(true))  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.setParsed(true))  {	  if(comment!=    null    &&    comment.hasParsed())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  &&  comment.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
69	[BUG]  [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  Comment.getParsed()  ==  null)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  Comment.getParsed()  ==  null)  {	  if(comment!=    null    ||    comment.getParsed()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
70	[BUG]  [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  [Delete]  null  &&  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  [Delete]  null  &&  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.getType()  ==  Token.NAME)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  Node  irNode  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  Node  irNode  =  node.getFirstChild();  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Node  irNode  =  node.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	NodeTraversal.traverse(compiler,  node,  this);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  Comment  comment  =(Comment)comment.cloneTree();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  Comment  comment  =(Comment)comment.cloneTree();  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	Comment  comment  =(Comment)comment.cloneTree();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.getType()  ==  Token.VAR)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME  ||  comment.setParsed(true);	  if(comment!=    null    &&    comment.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsed()  ||  comment.hasChildren())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.isParsed()  ||  comment.hasChildren())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsed()  ||  comment.hasChildren())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsedIn())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.isParsedIn())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.isParsedIn())  {	  if(comment!=    null    &&    comment.isParsed())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsedState())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getParsedState())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsedState())  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getParsed()  ||  comment.getParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getParsed()  ||  comment.getParsed())  {	  if(comment!=    null    &&    comment.getParsed())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.CALL)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.CALL)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP  ||  comment.getType()  ==  Token.GETELEM)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  >=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  >=  null  &&  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
85	[BUG]  [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  node  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	  if(comment!=    null    ||    comment.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.isParsed())  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.isParsed())  {	  if(comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  if(comment  ==  null  ||  comment.setParsed(true))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment  ==  null  ||  comment.setParsed(true))  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment  ==  null  ||  comment.setParsed(true))  {	  if(comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();    [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]    JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	194	194	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VAR  ||  comment.getType()  ==  Token.GETPROP)  {	  if(comment!=    null    &&    comment.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
