bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return  this;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  this;	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
2	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
3	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
4	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
5	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
6	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
7	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser);	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	  	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
9	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
10	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetParsedJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
11	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
12	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
13	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
14	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
15	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndResetJSDocInfo();	return  null;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
