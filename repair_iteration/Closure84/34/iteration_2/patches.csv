bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getRetrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
2	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentStructure();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentStructure();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentStructure();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getRetrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
3	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInitializingJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInitializingJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getInitializingJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getRetrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
4	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getRetrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
5	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.getAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.getAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.getAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReturnJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReturnJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReturnJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
9	[BUG]  [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
10	[BUG]  [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
11	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
12	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getPossibleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getPossibleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInputJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInputJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getInputJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInput();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getInput();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getInput();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
16	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
17	[BUG]  [BUGGY]  For(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
18	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
19	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getMessage());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.sourceName);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
21	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
22	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  sourceString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocInfo());	  return(node!=    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
24	[BUG]  [BUGGY]  return(node  >=  null)?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  >=  null)?  null  :  node.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  >=  null)?  null  :  node.getJSDocInfo();	  return(node!=    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
25	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo();	  return(node!=    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
26	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
27	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
28	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
29	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
30	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReset();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndReset();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
31	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
32	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
33	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  node.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
34	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString,  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString,  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString,  jsDocParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
35	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
36	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceName,  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceName,  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceName,  jsDocParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
37	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
38	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
39	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
40	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
41	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getQualifiedName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getQualifiedName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
42	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
43	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext()  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext()  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext()	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
44	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndReset  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndReset  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndReset	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
45	[BUG]  [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
46	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
47	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
48	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
49	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  message);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
50	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  comment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
51	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
52	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
53	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
54	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(irNode);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
55	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLineno());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString);	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferencedJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferencedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferencedJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
60	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getTypeDesc();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getTypeDesc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getTypeDesc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
61	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReturnJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReturnJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getReturnJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
62	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getName();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
63	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
66	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
67	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
68	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
69	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocInfo());	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
70	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  node);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  node);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
71	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
72	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getCurrentNode();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
73	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
74	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.replaceAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.replaceAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.replaceAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getText());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getText());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getText());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getText());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
77	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getText());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
78	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.toString());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.toString());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
79	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.getJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
81	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
82	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
83	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  JsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  JsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  JsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
84	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
85	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
86	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getMessage());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
87	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.toString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.toString());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
88	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.toString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.toString());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
89	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getLineno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getLineno());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
90	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
91	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
92	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
93	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
94	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
95	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node,  node.getJSDocNode());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node,  node.getJSDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node,  node.getJSDocNode());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
96	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getCharset());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getCharset());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getCharset());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
97	[BUG]  [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handlePossibleFileOverviewJsDoc(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
98	[BUG]  [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handlePossibleFileOverviewJSDoc(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
99	[BUG]  [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
100	[BUG]  [BUGGY]  return  jsDocParser.retrieveAndResetJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.retrieveAndResetJSDocInfo(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.retrieveAndResetJSDocInfo(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
101	[BUG]  [BUGGY]  return  jsDocParser.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handleFileOverviewJsDoc(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
102	[BUG]  [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handlePossibleFileOverviewJSDoc();	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
103	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
104	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
106	[BUG]  [BUGGY]  Reporter  errorReporter(jsDocParser, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter(jsDocParser, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter(jsDocParser, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
107	[BUG]  [BUGGY]  Reporter  errorReporter(node, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter(node, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter(node, "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
108	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
109	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.GETPROP)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
110	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.GETPROP)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
111	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.GETPROP)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
112	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  ir  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  ir  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  ir	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.GETPROP)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
113	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLocalName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLocalName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getLocalName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLocalName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLocalName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
116	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
117	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  nu	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
118	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
119	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
120	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName(),  jsDocParser);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName(),  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName(),  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
121	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
122	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
123	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
124	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLocalName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLocalName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLocalName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getName());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getMessage());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getName());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
126	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getName());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
127	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
128	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getMessage());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getMessage());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
129	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
130	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
131	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
132	[BUG]  [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser!=  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
133	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
134	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
135	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
136	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
137	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  comment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
138	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
139	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString,  config);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  sourceString,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
140	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  message);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
141	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
142	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJSDocInfo());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
143	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
144	[BUG]  [BUGGY]  Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
145	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
146	[BUG]  [BUGGY]  Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.warning( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
147	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
148	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
149	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
150	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndChildren();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndChildren();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
152	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildCount();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildCount();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildCount();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
153	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.clone();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
154	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  node.getJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  node.getJsDocInfo();	  return(node    ==    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
155	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  NodeUtil.getJSDocInfo(node);	  return(node    ==    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
156	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
157	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser,  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser,  comment);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
158	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
159	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
160	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
161	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
162	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  message);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
163	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetChildren();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndReset();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
164	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getLineno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getLineno());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
165	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getCharset());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
166	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getLocalName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getLocalName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getLocalName());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
167	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getModule());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
168	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
169	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  irNode.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
170	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
171	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.reset();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.reset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.reset();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
172	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getType();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getType();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
173	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getModule());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
174	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node);	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
175	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getLineno());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
176	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
177	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
178	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.NAME)  {  return  irNode.  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()  ==  Token.NAME)  {  return  irNode.	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
179	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.re  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.re  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.re	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
180	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.set  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.set  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.set	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
181	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getReferencedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getReferencedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getReferencedJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
182	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getNamespace();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getNamespace();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getNamespace();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
183	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
184	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
185	[BUG]  [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.getAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.getAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser!=  null?  null  :  jsDocParser.getAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
186	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
187	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
188	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
189	[BUG]  [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
190	[BUG]  [BUGGY]  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
191	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  config,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  config,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  config,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    config);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
192	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
193	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  config.getJSDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
194	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo(),  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
195	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
196	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
197	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
198	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
199	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
200	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  sourceString,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
201	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  message);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
202	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
203	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter,  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
204	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
205	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  sourceString,  jsDocInfo.getSourceName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  sourceString,  jsDocInfo.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  sourceString,  jsDocInfo.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
206	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
207	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLocalName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLocalName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLocalName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
208	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
209	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
210	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
211	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment.getCharno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  comment.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
212	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
213	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno(),  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
214	[BUG]  [BUGGY]  return  handleJsDoc(node,  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  irNode);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
215	[BUG]  [BUGGY]  return  handleJsDoc(node,  comment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  comment);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
216	[BUG]  [BUGGY]  return  handleJsDoc(node,  config);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  config);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
217	[BUG]  [BUGGY]  return  handleJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(jsDocParser);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
218	[BUG]  [BUGGY]  return  handleJsDoc(jsDocParser,  node);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(jsDocParser,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(jsDocParser,  node);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
219	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
220	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
221	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  nu	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
222	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  &&  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
223	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
224	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
225	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocParser,  comment);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocParser,  comment);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
226	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocParser,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocParser,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocParser,  errorReporter);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
227	[BUG]  [BUGGY]  return  handleJsDoc(node,  irNode,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  irNode,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  irNode,  jsDocParser);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
228	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  config);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocInfoParser,  config);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
229	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser);  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocInfoParser);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
230	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getNameNode());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getNameNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getNameNode());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getNameNode());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
231	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCommentInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getCommentInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getCommentInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
232	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
233	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
234	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetPossibleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetPossibleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
235	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
236	[BUG]  [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
237	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.removeAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.removeAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.removeAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
238	[BUG]  [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
239	[BUG]  [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	For(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
240	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()!=  Token.EXPR_RESULT)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
241	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  nodes.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  nodes.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  nodes.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
242	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
243	[BUG]  [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.resetAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.resetAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser!=  null?  null  :  jsDocParser.resetAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
244	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
245	[BUG]  [BUGGY]  return(comment!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(comment!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(comment!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
246	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  errorReporter);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
247	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  this);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
248	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  newBlock);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  newBlock);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
249	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.class);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.class);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
250	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
251	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
252	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
253	[BUG]  [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser  ==  null?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
254	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
255	[BUG]  [BUGGY]  Reporter.warning( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.warning( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.warning( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
256	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
257	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
258	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
259	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(irNode);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
260	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJSDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
261	[BUG]  [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JSDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
262	[BUG]  [BUGGY]  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
263	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
264	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
265	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.toString());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.toString());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
266	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    comment);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
267	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  message);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    comment);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
268	[BUG]  [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.reset();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser!=  null?  null  :  jsDocParser.reset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser!=  null?  null  :  jsDocParser.reset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
269	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
270	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  message);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  message);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
271	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  sourceString);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
272	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
273	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReturnCode());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
274	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getCurrentName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
275	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJsDocInfo());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJsDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJsDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getJsDocInfo());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
276	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
277	[BUG]  [BUGGY]  Reporter  errorReporter(jsDocParser, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter(jsDocParser, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter(jsDocParser, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
278	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocInfoParser.getSourceName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
279	[BUG]  [BUGGY]  Reporter  errorReporter(node, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter(node, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter(node, "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
280	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser.getName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
281	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getTextNode());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getTextNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getTextNode());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getText());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
282	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
283	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceString());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
284	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
285	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
286	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
287	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
288	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNamespaceURI());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNamespaceURI());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNamespaceURI());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLocalName());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
289	[BUG]  [BUGGY]  if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
290	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocNode());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node.getJSDocNode());	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
291	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
292	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
293	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
294	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
295	[BUG]  [BUGGY]  return  handleJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  fileLevelJsDocBuilder);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
296	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
297	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESUL  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESUL  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESUL	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
298	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  this;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  this;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
299	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  new  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  new  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  new	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()!=    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
300	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node);	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
301	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  node.getSourceName());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
302	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceString());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
303	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
304	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
305	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJsDocNode());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJsDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJsDocNode());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
306	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocName());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
307	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode.getJSDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
308	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.getAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.getAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.getAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
309	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getName(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
310	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
311	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
312	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
313	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(!irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(!irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(!irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
314	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndRe  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndRe	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
315	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
316	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieve  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieve  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieve	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
317	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocName());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
318	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getParent());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
319	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  node.getSourceName());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
320	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EMPTY)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EMPTY)  {  return  irNode;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EMPTY)  {  return  irNode;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
321	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode  +  1;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode  +  1;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode  +  1;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
322	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndResetParsedJS  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndResetParsedJS  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(node))  {  return  node.retrieveAndResetParsedJS	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
323	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsed  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsed  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsed	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
324	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJsDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
325	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndClearBuffer();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndClearBuffer();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndClearBuffer();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
326	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
327	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndStart();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndStart();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndStart();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
328	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.name());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.name());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.name());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
329	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLocalName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
330	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  irNode);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
331	[BUG]  [BUGGY]  return  jsDocParser.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.getJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.getJsDocInfo();	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
332	[BUG]  [BUGGY]  return  jsDocParser.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.getJSDocInfo();	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
333	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
334	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
335	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
336	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
337	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
338	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
339	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
340	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESUL  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESUL  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESUL	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
341	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
342	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocParser,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocParser,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocParser,  fileLevelJsDocBuilder);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
343	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  comment);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocInfoParser,  comment);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
344	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocInfoParser,  fileLevelJsDocBuilder);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
345	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
346	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
347	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
348	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.FIELD_NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.FIELD_NAME);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
349	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
350	[BUG]  [BUGGY]  return(node!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
351	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
352	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
353	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
354	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceString());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceString());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
355	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
356	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
357	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
358	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieve();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieve();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieve();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndReset();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
359	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  this;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
360	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
361	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetAndChildren();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
362	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  new  JsDocInfoParser());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  new  JsDocInfoParser());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceChild(node,  new  JsDocInfoParser());	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
363	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndChildren();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.removeAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
364	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    comment);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
365	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  node.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
366	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
367	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
368	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
369	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleFileOverviewJSDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
370	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.GETPROP)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
371	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferenceName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferenceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getReferenceName();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
372	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
373	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
374	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJsDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getRetrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
375	[BUG]  [BUGGY]  if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(node!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
376	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
377	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.to  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.to  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.to	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
378	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.retri  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.retri  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.retri	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
379	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
380	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getIsSyntheticJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getIsSyntheticJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getIsSyntheticJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
381	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getName());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
382	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getDefaultJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getDefaultJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getDefaultJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
383	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getNameNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getNameNode();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
384	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
385	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocName,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocName,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocName,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
386	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocReporter,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
387	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    config);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
388	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  config);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocNode,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    config);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
389	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  sourceString,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    config);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
390	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReferenceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReferenceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getReferenceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getNameNode());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
391	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  node.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  node.toString();	  return(node    ==    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
392	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
393	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());	  return(node!=    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
394	[BUG]  [BUGGY]  return  handleJsDoc(jsDocNode,  node);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(jsDocNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(jsDocNode,  node);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
395	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleJsDoc(node,  jsDocInfoParser,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocInfoParser,  errorReporter);	  return    handleJsDoc(node,    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
396	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
397	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.GETPROP)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.GETPROP)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.GETPROP)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
398	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.NAME)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.NAME)  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.NAME)  {  return  null;  }	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
399	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
400	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitReturn();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getImplicitReturn();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
401	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalPart());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalPart());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalPart());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
402	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
403	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
404	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
405	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
406	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getFileName());	  Reporter    errorReporter(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
407	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  node,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
408	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
409	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
410	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetPossibleFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
411	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndReset();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndReset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getAndReset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
412	[BUG]  [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
413	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.resetAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
414	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  node.cloneTree();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  node.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  node.cloneTree();	  return(node    ==    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
415	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  node.getParent();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  node.getParent();	  return(node    ==    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
416	[BUG]  [BUGGY]  return  handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handlePossibleFileOverviewJsDoc(node);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
417	[BUG]  [BUGGY]  return  handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleFileOverviewJsDoc(node);	  return    handleJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
418	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAnd	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
419	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
420	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndRe    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
421	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
422	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno(),    jsDocParser.getCharno());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
423	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndChildren();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndChildren();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndReset();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
424	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieve();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieve();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieve();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndReset();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
425	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getDefaultJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getDefaultJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getDefaultJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
426	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
427	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFile();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getFile();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
428	[BUG]  [BUGGY]  return(node!=  null)?  null  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  node.getJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  node.getJsDocInfo();	  return(node!=    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
429	[BUG]  [BUGGY]  return(node!=  null)?  null  :  node.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  node.toString();	  return(node!=    null)?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
430	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config,  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    config);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
431	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode(),  comment);	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
432	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node,  comment.getJSDocNode());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
433	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJsDocNode());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJsDocNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJsDocNode());	  return(node    ==    null)?    null    :    new    JsDocInfo(node.getJSDocNode());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
434	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  comment.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
435	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc();	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
436	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleJsDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleJsDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
437	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
438	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLineno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfo.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
439	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comments,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comments,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comments,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
440	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
441	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
442	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.toString());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.toString());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.toString());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
443	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndUpdateJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
444	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
445	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
446	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.clone();	  return(jsDocParser!=    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
447	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getType();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getType();	  return(jsDocParser!=    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
448	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndStart();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndStart();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndStart();	  return(jsDocParser!=    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
449	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFile();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getFile();	  return(jsDocParser!=    null)?    null    :    jsDocParser.reset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
450	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
451	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getLineno());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
452	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  jsDocParser.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
453	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  jsDoc.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
454	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.cloneTree();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.cloneTree();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
455	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetAndChildren();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getResetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
456	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getConfig().resetAndChildren();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getConfig().resetAndChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getConfig().resetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndChildren();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
457	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.UNKNOWN_SIGNATURES);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.UNKNOWN_SIGNATURES);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.UNKNOWN_SIGNATURES);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
458	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.OTHER);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.OTHER);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.OTHER);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
459	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.EMPTY_STRING_OBJECT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.EMPTY_STRING_OBJECT);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  JsDocInfoParser.EMPTY_STRING_OBJECT);	  return(jsDocParser!=    null)?    null    :    jsDocParser.replaceChild(node,    comment);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
460	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
461	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());	  Reporter.error(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
462	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
463	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
464	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
465	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
466	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getContentOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
467	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJsDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
468	[BUG]  [BUGGY]  return  jsDocParser.handleJsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handleJsDocInfo(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handleJsDocInfo(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
469	[BUG]  [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return  jsDocParser.handlePossibleFileOverviewJSDocInfo(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.handlePossibleFileOverviewJSDocInfo(node);	  return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
470	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineNumber());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineNumber());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineNumber());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getText());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
471	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
472	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDoc();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
473	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config,  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocInfoParser,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
474	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  message);	  return(jsDocParser!=    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
475	[BUG]  [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
476	[BUG]  [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo()  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo()  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	if(jsDocParser!=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo()	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
477	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
478	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(!node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
479	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment);  return  jsDocParser.retrieveAndResetJSDocInfo();	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    return    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
480	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handleLocalFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
481	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
482	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
483	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());	  Reporter    errorReporter(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
484	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
485	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node,  jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
486	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndReset();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndReset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndReset();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.replaceAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
487	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
488	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getImplicitReturn();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getImplicitReturn();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
489	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJsDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJsDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedFileOverviewJsDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.getParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
490	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getJSDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
491	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment.getJSDocInfo());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node,  comment.getJSDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
492	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
493	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);	  return(node    ==    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
494	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
495	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getMessage());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getMessage());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getMessage());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
496	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config.getSourceName());	  Reporter.error(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
497	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.remov  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.remov  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.remov	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.FUNCTION    ||    irNode.getType()    ==    Token.NAME)    {    return    irNode.get    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
498	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node,  comment.getSourceName());	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
499	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName(),  comment);	  return(node!=    null)?    null    :    new    JSDocInfo(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
500	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdate();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdate();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndUpdate();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.resetAndReset();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
501	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
502	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
503	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno(),  node.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
504	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  comment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName(),  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
505	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  irNode,  node.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
506	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node,  comment.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node,  comment.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node,  comment.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser,    node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
507	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
508	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment.setParsed(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment.setParsed(true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  comment.setParsed(true);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
509	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  message);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node,  message);	  JsDocInfoParser    jsDocParser    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
510	[BUG]  [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  node  :  node.getIrNodes())  {  if(node.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
511	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getAllJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS	  for(JSDocInfo    jsDocInfo    :    node.getJSDocInfos())    {    if(!handlePossibleFileOverviewJsDoc(jsDocInfo))    {    return    jsDocInfo.retrieveAndResetParsedJS    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
512	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  comment.getName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    node.getName());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
513	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  ir  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  ir  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.FUNCTION)  {  return  ir	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
514	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  ir  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }      [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  ir  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT  ||  irNode.getType()  ==  Token.VAR)  {  return  ir	  for(JSDocInfo    irNode    :    node.getIrNodes())    {    if(irNode.getType()    ==    Token.EXPR_RESULT)    {    return    irNode;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
