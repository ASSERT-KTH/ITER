bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetParsedJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndReset();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndReset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndReset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndReset();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndReset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.resetAndReset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndReset();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndReset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndReset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndResetPossibleFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  node.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getName());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.replaceAndResetJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfo.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocInfoParser,  config);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLocalName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getQualifiedName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDoc(jsDocParser);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter  errorReporter( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  node.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getSourceName());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getText());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	Reporter.error( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetParsedJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.retrieveAndResetJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndResetParsedJS	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(node);  return  jsDocParser.removeAndResetJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  jsDocInfo  :  node.getJSDocInfos())  {  if(!handlePossibleFileOverviewJsDoc(jsDocInfo))  {  return  jsDocInfo.retrieveAndRe	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node.getJSDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJsDocInfo());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJsDocInfo());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getJsDocInfo());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getJSDocInfo());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildren();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildren();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.resetAndChildren();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getName());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getJsDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getJsDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.reset();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.reset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.reset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node  ==  null)?  null  :  node.getJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  node.getJSDocInfo();	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  return(node!=  null)?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node!=  null)?  null  :  node.getJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  node.getJSDocInfo();	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JsDocInfo(node.getJSDocNode());	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node  ==  null)?  null  :  new  JSDocInfo(node.getSourceName());	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JsDocInfo(node.getJSDocNode());	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(node!=  null)?  null  :  new  JSDocInfo(node.getSourceName());	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getNameNode());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getRetrieveAndResetJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  errorReporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  errorReporter);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  node);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  return  jsDocParser.retrieveAndResetJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return  jsDocParser.retrieveAndResetJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  jsDocParser.retrieveAndResetJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  return  handleJsDoc(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return  handleJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()!=  Token.EXPR_RESULT)  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.GETPROP)  {  return  irNode;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.get  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.get  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.FUNCTION  ||  irNode.getType()  ==  Token.NAME)  {  return  irNode.get	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  return  handleJsDoc(node,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return  handleJsDoc(node,  jsDocParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return  handleJsDoc(node,  jsDocParser);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.toString());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Unable  to  handle  JsDocInfo: "  +  jsDocParser.getMessage());	  reportError(   "Unable    to    handle    JsDocInfo:   "    +    jsDocParser.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(jsDocParser);	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getParsedJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser.getLineno(),  jsDocParser.getCharno());	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser.getLineno());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndReset();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndReset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.retrieveAndReset();	  return    this;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.replaceChild(node,  comment);	  return(jsDocParser!=    null)?    null    :    jsDocParser.removeAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getAndResetParsedJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.reset();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.reset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.reset();	  return(jsDocParser!=    null)?    null    :    jsDocParser.resetAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().get	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().get	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	for(JSDocInfo  irNode  :  node.getIrNodes())  {  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  irNode;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
88	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  jsDocParser);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	reportError( "Failed  to  handle  JsDocInfo: "  +  jsDocParser,  comment);	  reportError(   "Failed    to    handle    JsDocInfo:   "    +    jsDocParser);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedJSDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.getParsedJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.handlePossibleFileOverviewJsDoc(node);	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetParsedJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
92	[BUG]  [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser  ==  null)?  null  :  jsDocParser.retrieveAndFileOverviewJSDocInfo();	  return(jsDocParser    ==    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.handlePossibleFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
94	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
95	[BUG]  [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }    [BUGGY]  return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	201	201	1	replace	return(jsDocParser!=  null)?  null  :  jsDocParser.getFileOverviewJSDocInfo();	  return(jsDocParser!=    null)?    null    :    jsDocParser.retrieveAndResetJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
