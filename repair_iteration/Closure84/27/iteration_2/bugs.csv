bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(errorReporter);	  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);	  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);	  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(sourceString);	  irFactory.setFileLevelJsDocBuilder(node);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(node);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);	  irFactory.setFileLevelJsDocBuilder(node);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  node);	  irFactory.setFileLevelJsDocBuilder(node);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(node);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(comment);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(comment);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  sourceString);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  sourceString);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo,  sourceString);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo,  errorReporter);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNodeJsDocHolder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  irNode.addChildToBack(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.addChildToBack(rootNodeJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.addChildToBack(rootNodeJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  Node  irNode  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  Node  irNode  =  node.getParent();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	Node  irNode  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  irNode.setParentNode(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.setParentNode(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.setParentNode(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  Node  irNode  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  Node  irNode  =  node.getFirstChild();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	Node  irNode  =  node.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.setFileLevelJsDocBuilder(null);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.setFileLevelJsDocBuilder(null);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  irNode.addChildToFront(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.addChildToFront(rootNodeJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.addChildToFront(rootNodeJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  irNode.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.handlePossibleFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(comment);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  node);	  irFactory.setFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(errorReporter);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);	  irFactory.setFileLevelJsDocBuilder(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(jsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(jsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(jsDocBuilder);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(null);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(null);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);	  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParent();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	Node  rootNodeJsDocHolder  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  irNode  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode  =  node.getParent();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  Node  rootNodeJsDocHolder  =  node.getLastChild();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	Node  rootNodeJsDocHolder  =  node.getLastChild();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode();  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	Node  rootNodeJsDocHolder  =  node.getRootNode();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handleMissingFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handleLocalFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  irFactory.handleNodeOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handleNodeOverviewJsDoc(irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handleNodeOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  irFactory.setFileLevelJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDoc(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDoc(node);	  irFactory.setFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  false);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  false);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDocBuilder(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDocBuilder(node);	  irFactory.setFileLevelJsDocBuilder(node);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder,  irNode);	  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(jsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(true);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDoc);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDoc);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(jsDoc);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverview);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverview);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileOverview);	  irFactory.setPossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileLevelJsDocBuilder(rootNode);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);	  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo,  irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo,  irNode);	  irFactory.setFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  irNode.setJSDocInfo(errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.setJSDocInfo(errorReporter);  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.setJSDocInfo(errorReporter);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }    [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [BUGGY]      return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	139	139	1	replace	irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
