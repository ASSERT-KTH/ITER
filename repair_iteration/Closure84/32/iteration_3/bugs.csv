bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfo.DEFAULT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfo.DEFAULT;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfo.DEFAULT;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  this);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  null,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
8	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  newBlock);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  newBlock);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
9	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
10	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  fileOverviewJsDocInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  fileOverviewJsDocInfo);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  null,  fileOverviewJsDocInfo);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
11	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(irNode.getModule());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(irNode.getModule());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(irNode.getModule());	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
12	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(node.getModule());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(node.getModule());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(node.getModule());	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
13	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getModule(),  false);	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
14	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getModule(),  true);	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
15	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNode,  node.getModule());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNode,  node.getModule());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNode,  node.getModule());	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
16	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  null);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getModule(),  null);	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
17	[BUG]  [BUGGY]  Comment  comment  =  node.getComment(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getComment(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getComment(),  true);	  Comment    comment    =    node.getComment(),    false);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
18	[BUG]  [BUGGY]  Comment  comment  =  irNode.getComment(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getComment(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getComment(),  false);	  Comment    comment    =    node.getComment(),    false);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  Comment  comment  =  node.getComment(),  false,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getComment(),  false,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getComment(),  false,  null);	  Comment    comment    =    node.getComment(),    false);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
20	[BUG]  [BUGGY]  Comment  comment  =  node.getParent(),  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getParent(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getParent(),  false);	  Comment    comment    =    node.getComment(),    false);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
21	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  Comment  comment  =(irNode  ==  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode  ==  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode  ==  null)?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  irNode.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  Comment  comment  =(irNode  ==  null)?  node  :  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode  ==  null)?  node  :  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode  ==  null)?  node  :  irNode.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  irNode);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  Comment  comment  =  jsDocParser.getAstNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  jsDocParser.getAstNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  jsDocParser.getAstNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
28	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_COMMENT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_COMMENT);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
29	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.COMMENT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.COMMENT);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
30	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JSDocInfoParser.class,  irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JSDocInfoParser.class,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JSDocInfoParser.class,  irNode);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
31	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.class,  config);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
32	[BUG]  [BUGGY]  Node  comment  =  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getLastChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getLastChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
33	[BUG]  [BUGGY]  Node  comment  =  node.getNext();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getNext();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getNext();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
34	[BUG]  [BUGGY]  Node  comment  =  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
35	[BUG]  [BUGGY]  Node  comment  =  node.getType()  ==  Token.GETPROP?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getType()  ==  Token.GETPROP?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getType()  ==  Token.GETPROP?  node.getLastChild()  :  node.getLastChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
36	[BUG]  [BUGGY]  Node  comment  =  node.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  node.getLastChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
37	[BUG]  [BUGGY]  Node  comment  =  node.getType()  ==  Token.THIS?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getType()  ==  Token.THIS?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getType()  ==  Token.THIS?  node.getLastChild()  :  node.getLastChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
38	[BUG]  [BUGGY]  JSDocInfo  comment  =  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  irNode.getJSDocInfo();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getJsDocInfo();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getAstNodeInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getAstNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getAstNodeInfo();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getCommentInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getCommentInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getCommentInfo();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getAstRootNode();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getDocInfo();	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
44	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  node.getDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  node.getDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  node.getDocInfo();	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
45	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  irNode.getDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  irNode.getDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getDocInfo()  :  irNode.getDocInfo();	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
46	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getDocInfo());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node  :  irNode.getDocInfo());	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
47	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo());	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
48	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  irNode);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  newBlock);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  newBlock);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
51	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(),  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(),  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(),  config);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  sourceString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  sourceString);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  sourceString);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  null);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(),  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(),  true);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
55	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  true);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode();	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
57	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  true,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  true,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  true,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  null  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()!=  Token.GETPROP?  null  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo().getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo().getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  ||  node.getJSDocInfo().getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  NodeUtil.getJSDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
62	[BUG]  [BUGGY]  Comment  comment  =  irNode.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
63	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocHolder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  this.fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
65	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
66	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(irNode,  this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(irNode,  this.rootNodeJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(irNode,  this.rootNodeJsDocHolder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  Comment  comment  =  this.rootNodeJsDocBuilder.getAstNode(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  this.rootNodeJsDocBuilder.getAstNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  this.rootNodeJsDocBuilder.getAstNode(node);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
68	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  irNode);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
69	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(),  false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(),  false);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  Node  comment  =  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  irNode.getAstRootNode();	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(),  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(),  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(),  null);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(true);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(true);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
73	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(node);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(node);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
74	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(node);	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
75	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT;	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
76	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.EXPR_RESULT);	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
77	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.GETPROP;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.GETPROP;	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
78	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.FUNCTION;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode()  ||  node.getType()  ==  Token.FUNCTION;	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
79	[BUG]  [BUGGY]  Comment  comment  =  node.getCurrentCommentInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCurrentCommentInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCurrentCommentInfo();	  Comment    comment    =    node.getCurrentDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
80	[BUG]  [BUGGY]  Comment  comment  =  node.getCurrentNodeInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCurrentNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCurrentNodeInfo();	  Comment    comment    =    node.getCurrentDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
81	[BUG]  [BUGGY]  Comment  comment  =  irNode.getCommentNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getCommentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getCommentNode();	  Comment    comment    =    node.getCommentNode();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
82	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentNode(),  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentNode(),  false);	  Comment    comment    =    node.getCommentNode();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
83	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstNode();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  AstNode  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getParent();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  AstNode  comment  =  node.getCurrentNode();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getCurrentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getCurrentNode();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  AstNode  comment  =  node.getImmediateParentNode();  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getImmediateParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getImmediateParentNode();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  AstNode  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getComment();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
88	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(irNode.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(irNode.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
89	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno(),  node.getCharno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getLineno(),  node.getCharno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
90	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLastChild());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getLastChild());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getLastChild());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
91	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.irNode,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.irNode,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.irNode,  node.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
92	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(node.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
93	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getSourceName());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getSourceName());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getSourceName());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
94	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.irNode.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.irNode.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
95	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getComment();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getComment();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
97	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  irNode.getComment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  irNode.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getComment()  :  irNode.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
98	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment());	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
100	[BUG]  [BUGGY]  Comment  comment  =  irNode.getCommentInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getCommentInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getCommentInfo();	  Comment    comment    =    node.getCommentInfo();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
101	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(irNode.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getCharno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getCharno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
103	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.irNode,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
104	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLastChild());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLastChild());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getLastChild());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
105	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.irNode.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
106	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNode,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNode,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.rootNode,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
107	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(irNode,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
108	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  irNode);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  config);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(this.fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.sourceString);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.sourceString);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
112	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  newBlock);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  newBlock);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  sourceString);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  sourceString);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  Comment  comment  =  this.fileLevelJsDocBuilder.getAstNode(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  this.fileLevelJsDocBuilder.getAstNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  this.fileLevelJsDocBuilder.getAstNode(node);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
115	[BUG]  [BUGGY]  Comment  comment  =  irNode.getCommentParent();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getCommentParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getCommentParent();	  Comment    comment    =    node.getCommentParent();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
116	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileLevelJsDocBuilder);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
117	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  config);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  config);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
118	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileOverviewJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileOverviewJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  fileOverviewJsDocBuilder);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
119	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  node);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  node);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  irNode);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  irNode);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
121	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  true);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(),  false);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  false,  null);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false,  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  false,  true);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
125	[BUG]  [BUGGY]  Node  comment  =  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  irNode.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  irNode.getAstNode();	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
126	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(),  false);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(),  false);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
127	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(),  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(),  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(),  null);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
128	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(node.getType());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(node.getType());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(node.getType());	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
129	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(),  context);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(),  context);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(),  context);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
130	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  fileLevelJsDocBuilder);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
131	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  config);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
132	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node.getJSDocInfo());	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
133	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  false);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
134	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  message);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  message);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  message);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
135	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  node.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
136	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
137	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
138	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(node);	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
139	[BUG]  [BUGGY]  Comment  comment  =  NodeUtil.getAstRootNode(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  NodeUtil.getAstRootNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  NodeUtil.getAstRootNode(node);	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
140	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(),  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(),  false);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
141	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  false,  null);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  fileOverviewJsDocInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  fileOverviewJsDocInfo);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  false,  fileOverviewJsDocInfo);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
143	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  false,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
144	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  false,  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  false,  true);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
145	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(true);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
146	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(node);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
147	[BUG]  [BUGGY]  AstNode  comment  =  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  irNode.getAstRootNode();	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
148	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(),  false);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(),  false);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
149	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(this);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
150	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(this.rootNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(this.rootNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(this.rootNode);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  Comment  comment  =  node.getImmediateParentNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getImmediateParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getImmediateParentNode();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
152	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentOwnerDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentOwnerDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentOwnerDocInfo();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
153	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  irNode);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
154	[BUG]  [BUGGY]  Comment  comment  =  jsDocParser.getAstRootNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  jsDocParser.getAstRootNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  jsDocParser.getAstRootNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
155	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.DEFAULT_COMMENT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.DEFAULT_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.DEFAULT_COMMENT);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
156	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.TYPE_COMMENT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.TYPE_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.TYPE_COMMENT);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
157	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JSDocInfoParser.class,  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JSDocInfoParser.class,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JSDocInfoParser.class,  irNode);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
158	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  config);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
159	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  node.getNext();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  node.getNext();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  node.getNext();	  Comment    comment    =    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
160	[BUG]  [BUGGY]  Comment  comment  =  irNode.getNext();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getNext();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getNext();	  Comment    comment    =    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
161	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(false);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
162	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(true,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(true,  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(true,  false);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
163	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getJSDocInfo());	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
164	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(true,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(true,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(true,  config);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
165	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getType()  ==  Token.EXPR_RESULT);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
166	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.GETPROP);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getType()  ==  Token.GETPROP);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
167	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(true);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getAstNodeInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getAstNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getAstNodeInfo();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
169	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getJsDocInfo();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
170	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getConfig().getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getConfig().getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getConfig().getJSDocInfo();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
171	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getParent();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
172	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getCommentInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getCommentInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getCommentInfo();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
173	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getAstRootNode();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
174	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.GETPROP;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.GETPROP;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.GETPROP;	  Comment    comment    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
175	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(irNode);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
176	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  node);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
177	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.irNode);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
178	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNodeInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNodeInfo();	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
179	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(),  false);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
180	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(),  null);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
181	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  sourceString);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(),  sourceString);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
182	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(),  true);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
183	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  sourceString;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(),  sourceString;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(),  sourceString;	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
184	[BUG]  [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()!=  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
185	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
186	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
187	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node.getJSDocInfo());	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
188	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  irNode.getJSDocInfo();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
189	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getConfig().getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getConfig().getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getConfig().getJSDocInfo();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
190	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getJsDocInfo();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
191	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getAstRootNode();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
192	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getAstNodeInfo();  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getAstNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getAstNodeInfo();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
193	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getComment();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
194	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  this.fileLevelJsDocHolder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
195	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(this.rootNodeJsDocBuilder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
196	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  irNode);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
197	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocHolder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
198	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  config);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
199	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  newBlock);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  newBlock);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
200	[BUG]  [BUGGY]  Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
201	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  this;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  this;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  this;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
202	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
203	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
204	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getParent().getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getParent().getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getParent().getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
205	[BUG]  [BUGGY]  Comment  comment  =  NodeUtil.getJsDocInfo(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  NodeUtil.getJsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  NodeUtil.getJsDocInfo(node);	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
206	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getAstNode();	  JsDocInfo    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
207	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  irNode);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
208	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
209	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  errorReporter);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  errorReporter);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
210	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  newBlock);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  newBlock);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
211	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(),  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(),  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(),  config);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
212	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  null);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  null);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
213	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  config);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
214	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
215	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  newBlock);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  newBlock);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
216	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  irNode);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
217	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(this);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
218	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  sourceString);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  sourceString);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
219	[BUG]  [BUGGY]  Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()!=  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
220	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
221	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
222	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  ||  node.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
223	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(false);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
224	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(true,  false);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
225	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(true,  config);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
226	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getJSDocInfo());	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
227	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getParent());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getParent());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getParent());	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
228	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(true,  true);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
229	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(true);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
230	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  this);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
231	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  newBlock);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  newBlock);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  newBlock);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
232	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  null,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
233	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
234	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  fileOverviewJsDocInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  fileOverviewJsDocInfo);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  null,  fileOverviewJsDocInfo);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
235	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  sourceString,  null);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  sourceString,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  sourceString,  null);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
236	[BUG]  [BUGGY]  Node  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getParent();	  Node    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
237	[BUG]  [BUGGY]  Node  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getComment();	  Node    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
238	[BUG]  [BUGGY]  Comment  comment  =  node.getOwner();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getOwner();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getOwner();	  Comment    comment    =    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
239	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class,  null);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
240	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.this);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
241	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJsDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
242	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParent();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
243	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(irNode);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
244	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
245	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  node.getModule());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  node.getModule());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder,  node.getModule());	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
246	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getParent());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getParent());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getParent());	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
247	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(true,  irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(true,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(true,  irNode);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
248	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.THIS);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getType()  ==  Token.THIS);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getType()  ==  Token.THIS);	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
249	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocBuilder,  node.getLineno());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocBuilder,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocBuilder,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
250	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder,  node.getLineno());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
251	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.fileLevelJsDocBuilder,  node.getLineno());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
252	[BUG]  [BUGGY]  Comment  comment  =  node.getCurrentParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCurrentParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCurrentParent();	  Comment    comment    =    node.getCurrentDocInfo();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
253	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getCurrentNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getCurrentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getCurrentNode();	  JsDocInfo    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
254	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeComment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeComment();	  Comment    comment    =    node.getCurrentComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
255	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJsDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
256	[BUG]  [BUGGY]  Node  comment  =  node.getAncestor(1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAncestor(1);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAncestor(1);	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
257	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  this.fileLevelJsDocBuilder);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
258	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
259	[BUG]  [BUGGY]  Comment  comment  =  node  ==  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node  ==  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node  ==  null?  node.getJSDocInfo()  :  irNode.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
260	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  irNode);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
261	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  this.fileLevelJsDocBuilder);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
262	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  node.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
263	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  node.getLineno());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
264	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno(),  node.getLength());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno(),  node.getLength());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getLineno(),  node.getLength());	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
265	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  irNode.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstNode()  :  irNode.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
266	[BUG]  [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstNode()  :  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstNode()  :  irNode.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node  ==  null?  node.getAstNode()  :  irNode.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
267	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  node.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
268	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
269	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode());	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
270	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  irNode.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getAstNode()  :  irNode.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
271	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getParentNode();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
272	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getNodeInfo();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfo  comment  =  node.getNodeInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfo  comment  =  node.getNodeInfo();	  JsDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
273	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode(),  false);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
274	[BUG]  [BUGGY]  Comment  comment  =  node.getParentNode(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getParentNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getParentNode(),  false);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
275	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getParentNode(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getParentNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getParentNode(),  false);	  Comment    comment    =    node.getAstRootNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
276	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJsDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJsDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJsDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
277	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  this;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  this;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  this;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
278	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
279	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  new  JsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  new  JsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  new  JsDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
280	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentNode(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentNode(node);	  Comment    comment    =    node.getCommentNode();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
281	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  irNode);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
282	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.rootNodeJsDocHolder);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
283	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this.rootNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this.rootNode);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
284	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.rootNodeJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.rootNodeJsDocHolder);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
285	[BUG]  [BUGGY]  Comment  comment  =  fileLevelJsDocBuilder.getAstNode(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  fileLevelJsDocBuilder.getAstNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  fileLevelJsDocBuilder.getAstNode(node);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
286	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  false);	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
287	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode();	  Comment    comment    =    node.getAstNode(),    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
288	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(true,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(true,  irNode);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
289	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.EXPR_RESULT);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
290	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.GETPROP);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getType()  ==  Token.GETPROP);	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
291	[BUG]  [BUGGY]  Comment  comment  =  node.getNameNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getNameNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getNameNode();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
292	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(JsDocInfoParser.class);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
293	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(this.rootNodeJsDocHolder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(this.rootNodeJsDocHolder);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
294	[BUG]  [BUGGY]  Node  comment  =  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getParentNode();	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
295	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
296	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
297	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(irNode);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(irNode);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
298	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstNode()  :  node.getAstNode(),  true);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
299	[BUG]  [BUGGY]  Comment  comment  =  node.getParentNode(),  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getParentNode(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getParentNode(),  true);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
300	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  false);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode()?  null  :  node.getAstNode(),  false);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
301	[BUG]  [BUGGY]  Comment  comment  =  node.getParent(),  true);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getParent(),  true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getParent(),  true);	  Comment    comment    =    node.getAstNode(),    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
302	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJsDocInfo();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
303	[BUG]  [BUGGY]  Comment  comment  =(irNode  ==  null)?  node.getComment()  :  node.getComment();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode  ==  null)?  node.getComment()  :  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode  ==  null)?  node.getComment()  :  node.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
304	[BUG]  [BUGGY]  Comment  comment  =(irNode  ==  null)?  node  :  irNode.getComment();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode  ==  null)?  node  :  irNode.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode  ==  null)?  node  :  irNode.getComment();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
305	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  _config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  _config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  _config);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
306	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  handleJsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  handleJsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  handleJsDocInfo(node);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
307	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  sourceString,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  sourceString,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  sourceString,  null);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
308	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.DEFAULT_COMMENT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.DEFAULT_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.DEFAULT_COMMENT);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
309	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_DOCUMENT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_DOCUMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.TYPE_DOCUMENT);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
310	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.JSDOC_INFO);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.JSDOC_INFO);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.JSDOC_INFO);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
311	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJsDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJsDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJsDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
312	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  new  JsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  new  JsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  new  JsDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
313	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  JsDocInfoParser.createJsDocInfo(node);	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
314	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNodeInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstNodeInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstNodeInfo()  :  null;	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
315	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(this);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
316	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(true);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
317	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getDocInfo()  :  node.getDocInfo();	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
318	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getDocInfo();	  Comment    comment    =    irNode.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
319	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(JsDocInfoParser.class);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
320	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(this);	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
321	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstNode(node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstNode(node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstNode(node.getJSDocInfo());	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
322	[BUG]  [BUGGY]  AstNode  comment  =  node.getNext();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getNext();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getNext();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
323	[BUG]  [BUGGY]  AstNode  comment  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getFirstChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getFirstChild();	  AstNode    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
324	[BUG]  [BUGGY]  JSDocInfo  comment  =  node  ==  null?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node  ==  null?  null  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node  ==  null?  null  :  node.getJSDocInfo();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
325	[BUG]  [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  NodeUtil.getJSDocInfo(node);	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
326	[BUG]  [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  null;	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
327	[BUG]  [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  new  JsDocInfo(node.getSourceName());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  new  JsDocInfo(node.getSourceName());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node!=  null?  node.getJSDocInfo()  :  new  JsDocInfo(node.getSourceName());	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
328	[BUG]  [BUGGY]  Comment  comment  =  node.getDocInfo(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getDocInfo(),  false);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getDocInfo(),  false);	  Comment    comment    =    node.getComment(),    false);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
329	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstRootNode()  :  irNode.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
330	[BUG]  [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  irNode.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  irNode.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
331	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node!=  null?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node!=  null?  null  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node!=  null?  null  :  node.getJSDocInfo();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
332	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getAstNode();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
333	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getJSDocInfo(),  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getJSDocInfo(),  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getJSDocInfo(),  fileLevelJsDocBuilder);	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
334	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.EXPR_RESULT;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.CALL?  node.getParent()  :  Node.EXPR_RESULT;	  Comment    comment    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
335	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getParent()  :  Node.GETPROP;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getParent()  :  Node.GETPROP;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getParent()  :  Node.GETPROP;	  Comment    comment    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
336	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getJsDocInfo()  :  irNode.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getJsDocInfo()  :  irNode.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getJsDocInfo()  :  irNode.getJsDocInfo();	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
337	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJsDocInfo();	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
338	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node  :  irNode.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node  :  irNode.getJsDocInfo();	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
339	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getJsDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
340	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJsDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getJSDocInfo()  :  node.getJsDocInfo();	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
341	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node  :  irNode.getJSDocInfo());	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
342	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
343	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getJSDocInfo()  :  node.getJSDocInfo());	  Comment    comment    =    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
344	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParent();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
345	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getParentNode();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
346	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule(),  this);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getModule(),  this);	  Comment    comment    =    node.getAstNode(node.getModule());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
347	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
348	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getMessage();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  node.getMessage();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  node.getMessage();	  JsDocInfoParser    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
349	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getParent());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getParent());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getComment()  :  node.getParent());	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
350	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null)?  node.getComment()  :  node.getParent();	  Comment    comment    =    irNode.getComment();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
351	[BUG]  [BUGGY]  Comment  comment  =  node.getAncestor(2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAncestor(2);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAncestor(2);	  Comment    comment    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
352	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  URLEncoder.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  config,  URLEncoder.UTF8);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  config,  URLEncoder.UTF8);	  Comment    comment    =    node.getAstNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
353	[BUG]  [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node!=  null?  node.getAstRootNode()  :  node.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
354	[BUG]  [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  node.getAstRootNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node  ==  null?  node.getAstRootNode()  :  node.getAstRootNode();	  Comment    comment    =    irNode.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
355	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getComment()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getComment()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getComment()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
356	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getParent()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
357	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
358	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
359	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getParent();	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
360	[BUG]  [BUGGY]  Node  comment  =  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  irNode.getFirstChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  irNode.getFirstChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
361	[BUG]  [BUGGY]  Node  comment  =  node.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.removeFirstChild();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.removeFirstChild();	  Node    comment    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
362	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getAstNode());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getAstNode());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node  :  irNode.getAstNode());	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
363	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node.getAstNode()  :  node.getAstNode();	  Comment    comment    =    irNode.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
364	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  _config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node,  _config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node,  _config);	  JsDocInfoParser    comment    =    createJSDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
365	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLocalPart());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getLocalPart());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getLocalPart());	  Comment    comment    =    node.getAstNode(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
366	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno()  +  1);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(node.getLineno()  +  1);	  Comment    comment    =    node.getAstNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
367	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(this,  null);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(this,  null);	  Comment    comment    =    node.getAstRootNode(this);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
368	[BUG]  [BUGGY]  Comment  comment  =  irNode.getOwnerDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getOwnerDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getOwnerDocInfo();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
369	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentOwner();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentOwner();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentOwner();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
370	[BUG]  [BUGGY]  Comment  comment  =  node.getOwnerComment();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getOwnerComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getOwnerComment();	  Comment    comment    =    node.getOwnerDocInfo();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
371	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getModule());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getModule());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getModule());	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
372	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLocalPart());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLocalPart());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getLocalPart());	  Comment    comment    =    node.getAstRootNode(true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
373	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(node.getLineno());	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
374	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(JsDocInfoParser.class);	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
375	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode(node.getType());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  AstNode  comment  =  node.getAstRootNode(node.getType());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	AstNode  comment  =  node.getAstRootNode(node.getType());	  AstNode    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
376	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstRootNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstRootNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
377	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.JSDOC_INFO);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.JSDOC_INFO);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.JSDOC_INFO);	  Comment    comment    =    node.getAstRootNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
378	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNodeInfo(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNodeInfo(node);	  Comment    comment    =    node.getAstNodeInfo();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
379	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME  &&  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
380	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getComment()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getComment()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getComment()  :  null;	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
381	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  NodeUtil.getParentNode(node);	  Comment    comment    =    node.getType()    ==    Token.NAME?    node.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
382	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(JsDocInfo.DEFAULT_COMMENT);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(JsDocInfo.DEFAULT_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(JsDocInfo.DEFAULT_COMMENT);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
383	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(node.getLineno());	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
384	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(JSDocInfo.DEFAULT_COMMENT);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(JSDocInfo.DEFAULT_COMMENT);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(JSDocInfo.DEFAULT_COMMENT);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
385	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode(true);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstNode(true);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstNode(true);	  Node    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
386	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Node  comment  =  node.getAstRootNode(node.getLineno());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Node  comment  =  node.getAstRootNode(node.getLineno());	  Node    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
387	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  node.getJSDocInfo()  :  null;  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
388	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getParentNode();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
389	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  null  :  node.getJSDocInfo();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP  &&  node.getJSDocInfo()!=  null?  null  :  node.getJSDocInfo();	  Comment    comment    =    node.getType()    ==    Token.GETPROP?    null    :    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
390	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getSourceName());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getSourceName());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getSourceName());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
391	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getFirstChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getFirstChild());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getFirstChild());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
392	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getLength());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getLength());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getLineno(),  node.getLength());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
393	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLocation());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLocation());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node.getLocation());	  Comment    comment    =    node.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
394	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  URLEncoder.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config,  URLEncoder.UTF8);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  config,  URLEncoder.UTF8);	  Comment    comment    =    node.getAstRootNode(),    config);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
395	[BUG]  [BUGGY]  Comment  comment  =  this.rootNodeJsDocHolder.getAstNode(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  this.rootNodeJsDocHolder.getAstNode(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  this.rootNodeJsDocHolder.getAstNode(node);	  Comment    comment    =    node.getAstNode(this.rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
396	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(),  null,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(),  null,  irNode);	  Comment    comment    =    node.getAstNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
397	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(),  null,  irNode);	  Comment    comment    =    node.getAstRootNode(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
398	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder,  this.irNode);	  Comment    comment    =    node.getAstNode(this.fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
399	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentRoot();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentRoot();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentRoot();	  Comment    comment    =    node.getCommentParent();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
400	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentOp();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getCommentOp();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getCommentOp();	  Comment    comment    =    node.getCommentParent();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
401	[BUG]  [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getJsDocInfo());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =(irNode!=  null?  node  :  irNode.getJsDocInfo());  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =(irNode!=  null?  node  :  irNode.getJsDocInfo());	  Comment    comment    =    irNode.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
402	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRoot(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRoot(node);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRoot(node);	  Comment    comment    =    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
403	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  _config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node,  _config);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node,  _config);	  JsDocInfoParser    comment    =    createJsDocInfoParser(node);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
404	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  irNode.getAstNode(JsDocInfoParser.class);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  irNode.getAstNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstNode(JsDocInfoParser.class);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
405	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getComment();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getComment();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
406	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getAstNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getAstNode();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
407	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getParent();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getParent();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
408	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getParentNode();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  JSDocInfo  comment  =  node.getParentNode();  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	JSDocInfo  comment  =  node.getParentNode();	  JSDocInfo    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
409	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node,  irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  JSDocInfo  handleJsDoc(AstNode  node)  {      [BUGGY]  Comment  comment  =  node.getAstRootNode(node,  irNode);  [BUGGY]      if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	193	193	1	replace	Comment  comment  =  node.getAstRootNode(node,  irNode);	  Comment    comment    =    node.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
