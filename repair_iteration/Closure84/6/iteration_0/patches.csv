bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(token  ==  Token.EOL)  {  switch(token)  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.EOL)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
2	[BUG]  [BUGGY]  if(token!=  Token.EOL)  {  switch(token)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  Token.EOL)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  Token.EOL)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
3	[BUG]  [BUGGY]  if(token  ==  Token.EOF)  {  switch(token)  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.EOF)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
4	[BUG]  [BUGGY]  if(token!=  Token.EOF)  {  switch(token)  {  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  Token.EOF)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  Token.EOF)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  if(token  ==  Token.NAME)  {  switch(token)  {  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.NAME)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  if(token!=  null)  {  switch(token)  {  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  null)  {  switch(token)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  null)  {  switch(token)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
7	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]    [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	  	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
8	[BUG]  [BUGGY]  if(token  ==  Token.EOL)  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.EOL)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.EOL)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
9	[BUG]  [BUGGY]  if(token!=  Token.EOL)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  Token.EOL)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  Token.EOL)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
10	[BUG]  [BUGGY]  if(token!=  Token.EOF)  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  Token.EOF)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  Token.EOF)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
11	[BUG]  [BUGGY]  if(token  ==  Token.EOF)  {  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.EOF)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.EOF)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
12	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token!=  Token.NAME)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token!=  Token.NAME)  {	switch  (token)  {  	non-compiled	[CE]  not  a  statement	11	None	replace
13	[BUG]  [BUGGY]  if(token  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError  [CONTEXT]  private  static  int  transformTokenType(int  token)  {  [BUGGY]  if(token  ==  Token.NAME)  {  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14907119849998599	876	876	1	replace	if(token  ==  Token.NAME)  {	switch  (token)  {  	non-compiled	[CE]  	11	None	replace
