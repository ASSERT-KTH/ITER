bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  -  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
2	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('n',  position  -  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
3	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  -  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
4	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('n');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.lastIndexOf('n');	  int    lineIndex    =    position.lastIndexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
5	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
6	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.intValue()  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position.intValue()  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
7	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
8	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
9	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
10	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n')/  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n')/  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n')/  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
11	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('n',  position  +  1);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('n',  position  -  1);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
13	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  this.sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  this.sourceString);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  this.sourceString);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('N',  position  +  1);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('#',  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('#',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('#',  position);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position  -  1);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position  +  1);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position,  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position,  0);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position,  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position,  position);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position,  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position,  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position,  1);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  int  lineIndex  =  getColumnIndex(position);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getColumnIndex(position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getColumnIndex(position);	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  0);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  position);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
25	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  -1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  -1);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
26	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  1);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
27	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  comment  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  comment  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  comment  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
31	[BUG]  [BUGGY]  int  lineIndex  =  0;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  0;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  0;	  int    lineIndex    =    position;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  int  lineIndex  =  position  -  2;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  2;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  2;	  int    lineIndex    =    position;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  int  lineIndex  =  position  +  2;  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  2;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  2;	  int    lineIndex    =    position;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
35	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
36	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position.indexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
37	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('-',  sourceString.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('-',  sourceString.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('-',  sourceString.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
38	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
39	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  1);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  -1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  -1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  -1);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
41	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  2);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  3);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  3);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  3);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  4);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  4);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  4);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
44	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceName  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceName  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('N',  this.sourceName  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('N',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
46	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.lastIndexOf('N',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
47	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  2);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  2);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
48	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  1,  position);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  1,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('N',  position  +  1,  position);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
49	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.indexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
53	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('0',  position  -  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
54	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('0',  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('0',  position);	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
55	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('0',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('0',  position);	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
56	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  this.sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  this.sourceString);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  this.sourceString);	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
57	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n');  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n');	  int    lineIndex    =    sourceString.lastIndexOf('n');    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
58	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n');  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('n');	  int    lineIndex    =    sourceString.lastIndexOf('n');    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
59	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('n');	  int    lineIndex    =    sourceString.lastIndexOf('n');    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
60	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n');	  int    lineIndex    =    sourceString.lastIndexOf('n');    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
61	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('N',  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('N',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('N',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n');    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
62	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('N',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  +  2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('N',  position  +  2);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
64	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  +  1,  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  +  1,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('N',  position  +  1,  position);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
65	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('N',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('N',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('N',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
66	[BUG]  [BUGGY]  int  lineIndex  =  position.getLineno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getLineno();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getLineno();	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineno()  +  position;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineno()  +  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineno()  +  position;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineno()  -  position;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineno()  -  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineno()  -  position;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineno()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineno()  +  1;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineno()  *  position;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineno()  *  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineno()  *  position;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineno()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineno()  -  1;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  position  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
73	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  0  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
74	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  position  +  2);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
75	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('N',  position  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
76	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.indexOf('n',  position  -  1);	  int    lineIndex    =    sourceName.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('n',  position  +  2);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  this.sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  this.sourceName);	  int    lineIndex    =    this.sourceName.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  int  lineIndex  =  position  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  1  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  1  +  1;	  int    lineIndex    =    position    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
80	[BUG]  [BUGGY]  int  lineIndex  =  position  -  1L;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  1L;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  1L;	  int    lineIndex    =    position    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
81	[BUG]  [BUGGY]  int  lineIndex  =  position  -  3;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  3;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  3;	  int    lineIndex    =    position    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
82	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex()  -  position;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex()  -  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex()  -  position;	  int    lineIndex    =    getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex()  -  1;	  int    lineIndex    =    getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex()  +  1;	  int    lineIndex    =    getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex()  +  position;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex()  +  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex()  +  position;	  int    lineIndex    =    getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  int  lineIndex  =  getColumnIndex();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getColumnIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getColumnIndex();	  int    lineIndex    =    getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
87	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.length  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName.length  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
89	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
90	[BUG]  [BUGGY]  int  lineIndex  =  comment.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  comment.indexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  comment.indexOf('n',  position);	  int    lineIndex    =    position.indexOf('n',    comment);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
91	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  comment  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  comment  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  comment  +  1);	  int    lineIndex    =    position.indexOf('n',    comment);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
92	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceName  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n',  position  +  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('n',  position  +  2);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  +  position;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  +  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineIndex()  +  position;	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
95	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineIndex()  +  1;	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
96	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineIndex(position);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineIndex(position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineIndex(position);	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  -  position;  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  -  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineIndex()  -  position;	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getLineIndex()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getLineIndex()  -  1;	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
99	[BUG]  [BUGGY]  int  lineIndex  =  charno.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  charno.lastIndexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  charno.lastIndexOf('n',  position);	  int    lineIndex    =    position.lastIndexOf('n',    charno);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
100	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
101	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('0',  position  -  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
102	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  this.sourceName);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  this.sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  this.sourceName);	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
103	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('0',  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.lastIndexOf('0',  position);	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
104	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('0',  position);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('0',  position);	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
105	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.length());  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position.length());	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
106	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceName.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceName.length());  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceName.length());	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
107	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  comment.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  comment.length());  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  comment.length());	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
108	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position.length());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.indexOf('n',  position.length());  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.indexOf('n',  position.length());	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
109	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length()  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length()  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.length()  -  1);	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
110	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  sourceString.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  sourceString.length());  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('n',  sourceString.length());	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
111	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.length);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.length);	  int    lineIndex    =    position.lastIndexOf('n',    this.sourceString);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
112	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('0',  position  +  1);	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  irNode);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  irNode);	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
114	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position  -  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('0',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
115	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position)-  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('0',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('0',  position)-  1;	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
116	[BUG]  [BUGGY]  int  lineIndex  =  comment.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  comment.lastIndexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  comment.lastIndexOf('n',  position);	  int    lineIndex    =    position.lastIndexOf('n',    comment);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
117	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0,  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  0,  comment);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  0,  comment);	  int    lineIndex    =    position.lastIndexOf('n',    comment);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
118	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('N',  position  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
119	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('n');	  int    lineIndex    =    position.lastIndexOf('n',    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
120	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName.length);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceName.length);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceName.length);	  int    lineIndex    =    position.lastIndexOf('n',    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
121	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.length  -  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
122	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('n',  position  -  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
123	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.indexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.indexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.indexOf('n')-  1);	  int    lineIndex    =    sourceString.indexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
124	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
125	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position  +  2);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
126	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1,  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position  +  1,  position);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
128	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  irNode);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  irNode);	  int    lineIndex    =    irNode.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
129	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('N',  position  +  1);	  int    lineIndex    =    irNode.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('#',  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('#',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('#',  position);	  int    lineIndex    =    irNode.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
131	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf(',',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf(',',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf(',',  position);	  int    lineIndex    =    irNode.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
132	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
133	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('n')-  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
134	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('-')-  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
135	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode  -  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
136	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceName.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
137	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
138	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1));  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1));	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
139	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
140	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  sourceString.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
141	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
142	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
143	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
144	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('/',  position  -  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
145	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  this.sourceString);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  this.sourceString);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  this.sourceString);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
146	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('/',  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('/',  position);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
147	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('/',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('/',  position);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
148	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('/',  position  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('/',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('/',  position  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
149	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.length);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.length);	  int    lineIndex    =    position.lastIndexOf('n',    irNode);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
150	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
151	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('/',  position  -  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
152	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  this.sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  this.sourceName);	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
153	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('/',  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.lastIndexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.lastIndexOf('/',  position);	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
154	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('/',  position);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('/',  position);	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
155	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('n');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
156	[BUG]  [BUGGY]  int  lineIndex  =  sourceName.indexOf('n');  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceName.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceName.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
157	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n');  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
158	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
159	[BUG]  [BUGGY]  char  lineIndex  =  sourceString.indexOf('n');  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  char  lineIndex  =  sourceString.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	char  lineIndex  =  sourceString.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
160	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position  +  1);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
161	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position  -  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position  -  1);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
162	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position,  0);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
163	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position,  1);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
164	[BUG]  [BUGGY]  Integer  lineIndex  =  getColumnIndex(position);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getColumnIndex(position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getColumnIndex(position);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
165	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  position);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position,  position);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
166	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  1,  position);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  1,  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  1,  position);	  int    lineIndex    =    this.sourceString.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
167	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceString.lastIndexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceString.lastIndexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('N',  this.sourceString.lastIndexOf('N',  position  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
168	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  +  2);	  int    lineIndex    =    this.sourceString.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
169	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('N',  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('N',  comment);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('N',  comment);	  int    lineIndex    =    position.indexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
170	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('#',  sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('#',  sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('#',  sourceName);	  int    lineIndex    =    position.indexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
171	[BUG]  [BUGGY]  int  lineIndex  =  position  /  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  /  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  /  1;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
172	[BUG]  [BUGGY]  int  lineIndex  =  position  +  3;  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  3;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  3;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
173	[BUG]  [BUGGY]  int  lineIndex  =  position  +  1L;  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  1L;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  1L;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
174	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourcePosition);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourcePosition);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourcePosition);	  int    lineIndex    =    sourcePosition.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
175	[BUG]  [BUGGY]  int  lineIndex  =  sourcePosition.indexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourcePosition.indexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourcePosition.indexOf('n',  position  +  1);	  int    lineIndex    =    sourcePosition.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
176	[BUG]  [BUGGY]  int  lineIndex  =  this.sourcePosition.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourcePosition.indexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourcePosition.indexOf('n',  position);	  int    lineIndex    =    sourcePosition.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
177	[BUG]  [BUGGY]  int  lineIndex  =  sourcePosition.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourcePosition.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourcePosition.indexOf('n',  position  -  1);	  int    lineIndex    =    sourcePosition.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
178	[BUG]  [BUGGY]  char[]  lineIndex  =  sourcePosition.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  char[]  lineIndex  =  sourcePosition.indexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	char[]  lineIndex  =  sourcePosition.indexOf('n',  position);	  int    lineIndex    =    sourcePosition.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
179	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  position  -  1);	  int    lineIndex    =    position.indexOf('n',    charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
180	[BUG]  [BUGGY]  int  lineIndex  =  charno.indexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  charno.indexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  charno.indexOf('n',  position);	  int    lineIndex    =    position.indexOf('n',    charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
181	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('/',  position  +  1);	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
182	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  irNode);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  irNode);	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
183	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position  -  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('/',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
184	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('/',  irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('/',  irNode);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('/',  irNode);	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
185	[BUG]  [BUGGY]  int  lineIndex  =  position.getLineIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getLineIndex()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getLineIndex()  -  1;	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
186	[BUG]  [BUGGY]  int  lineIndex  =  position.getLineIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getLineIndex()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getLineIndex()  +  1;	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
187	[BUG]  [BUGGY]  int  lineIndex  =  position.getColumnIndex();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getColumnIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getColumnIndex();	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
188	[BUG]  [BUGGY]  int  lineIndex  =  position.getCharnoIndex();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getCharnoIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getCharnoIndex();	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
189	[BUG]  [BUGGY]  int  lineIndex  =  this.position.getLineIndex();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.position.getLineIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.position.getLineIndex();	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
190	[BUG]  [BUGGY]  int  lineIndex  =  position.length()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.length()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.length()  -  1;	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
191	[BUG]  [BUGGY]  int  lineIndex  =  position.length()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.length()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.length()  +  1;	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
192	[BUG]  [BUGGY]  int  lineIndex  =  position.length()  -  2;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.length()  -  2;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.length()  -  2;	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
193	[BUG]  [BUGGY]  int  lineIndex  =  position  -  position.length();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  position.length();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  position.length();	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
194	[BUG]  [BUGGY]  int  lineIndex  =  position.length()  *  2;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.length()  *  2;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.length()  *  2;	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
195	[BUG]  [BUGGY]  char  lineIndex  =  position.charno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  char  lineIndex  =  position.charno();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	char  lineIndex  =  position.charno();	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
196	[BUG]  [BUGGY]  int  lineIndex  =  position.charno()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.charno()  -  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.charno()  -  1;	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
197	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('.');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('.');	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
198	[BUG]  [BUGGY]  int  lineIndex  =  position.charno()  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.charno()  +  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.charno()  +  1;	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
199	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('0',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('0',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('0',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
200	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('/')-  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('/')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('/')-  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
201	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
202	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('1',  position  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('1',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('1',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
203	[BUG]  [BUGGY]  int  lineIndex  =  position  +  this.sourceName.lastIndexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  this.sourceName.lastIndexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  this.sourceName.lastIndexOf('N',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
204	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position  +  2);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position  +  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position  +  2);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
205	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position)-  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position)-  1;	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
206	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('0',  position);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('0',  position);	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
207	[BUG]  [BUGGY]  int  lineIndex  =  position.charnoIndex();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.charnoIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.charnoIndex();	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
208	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('  ');  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('  ');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('  ');	  int    lineIndex    =    position.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
209	[BUG]  [BUGGY]  int  lineIndex  =  position?  irNode.getLineno()  :  0;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position?  irNode.getLineno()  :  0;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position?  irNode.getLineno()  :  0;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
210	[BUG]  [BUGGY]  int  lineIndex  =  position  +  this.sourceName.lastIndexOf('n',  position  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  this.sourceName.lastIndexOf('n',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  this.sourceName.lastIndexOf('n',  position  +  1);	  int    lineIndex    =    this.sourceName.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
211	[BUG]  [BUGGY]  int  lineIndex  =  positionNode.lastIndexOf('N',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  positionNode.lastIndexOf('N',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  positionNode.lastIndexOf('N',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
212	[BUG]  [BUGGY]  int  lineIndex  =  position2.lastIndexOf('N',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position2.lastIndexOf('N',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position2.lastIndexOf('N',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
213	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('N',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('N',  position  -  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
214	[BUG]  [BUGGY]  int  lineIndex  =  position.getLineIndex()  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getLineIndex()  -  2;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getLineIndex()  -  2;	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
215	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  position)-  1;	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
216	[BUG]  [BUGGY]  int  lineIndex  =  getLineIndex(position)-  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  getLineIndex(position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  getLineIndex(position)-  1;	  int    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
217	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)+  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)+  1;	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
218	[BUG]  [BUGGY]  int  lineIndex  =  irNode.getCharnoIndex();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.getCharnoIndex();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.getCharnoIndex();	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
219	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position)-  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('/',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.lastIndexOf('/',  position)-  1;	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
220	[BUG]  [BUGGY]  int  lineIndex  =  config.indexOf('n');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  config.indexOf('n');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  config.indexOf('n');	  int    lineIndex    =    sourceString.indexOf('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
221	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
222	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  0L);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  0L);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  0L);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
223	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('N',  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('N',  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('N',  0);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
224	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf(':');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf(':');  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf(':');	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
225	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)+  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)+  1;	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
226	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n',  position  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n',  position  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n',  position  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
227	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.charAt(position  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.charAt(position  -  1));  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.charAt(position  -  1));	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
228	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceString  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('N',  this.sourceString  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('N',  this.sourceString  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
229	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('  ',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf('  ',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf('  ',  position);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
230	[BUG]  [BUGGY]  int  lineIndex  =  position  +  charno.length;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  charno.length;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  charno.length;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
231	[BUG]  [BUGGY]  int  lineIndex  =  position  +  0;  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  0;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  0;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
232	[BUG]  [BUGGY]  int  lineIndex  =  positionNode.lastIndexOf('n',  irNode  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  positionNode.lastIndexOf('n',  irNode  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  positionNode.lastIndexOf('n',  irNode  +  1);	  int    lineIndex    =    irNode.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
233	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
234	[BUG]  [BUGGY]  int  lineIndex  =  sourcePosition.lastIndexOf('n',  position);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourcePosition.lastIndexOf('n',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourcePosition.lastIndexOf('n',  position);	  int    lineIndex    =    position.lastIndexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
235	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position).length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position).length();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position).length();	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
236	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('n',  sourceString.length()  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('n',  sourceString.length()  +  1);	  int    lineIndex    =    position.indexOf('n',    sourceString.length());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
237	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position)-  1;	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
238	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position.lastIndexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
239	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n')-  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.indexOf('n')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('n')-    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
240	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceString.lastIndexOf('-')-  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
241	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  this.sourceString  -  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
242	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)+  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)+  1;	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
243	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)+  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)+  1;	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
244	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  position);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  position);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
245	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  position);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  position);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
246	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('-',  position);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('-',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('-',  position);	  int    lineIndex    =    position.lastIndexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
247	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('0',  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('0',  irNode);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('0',  irNode);	  int    lineIndex    =    irNode.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
248	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('/',  sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('/',  sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('/',  sourceName);	  int    lineIndex    =    position.indexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
249	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)-  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('0',  position)-  1;	  int    lineIndex    =    this.sourceString.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
250	[BUG]  [BUGGY]  int  lineIndex  =  position.charno()  -  position;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.charno()  -  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.charno()  -  position;	  int    lineIndex    =    position.charno();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
251	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('-',  position.lastIndexOf('-')-  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('-',  position.lastIndexOf('-')-  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  sourceString.lastIndexOf('-',  position.lastIndexOf('-')-  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString.lastIndexOf('-')-    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
252	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  sourceName);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  sourceName);	  int    lineIndex    =    position.lastIndexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
253	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  sourceName);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  sourceName);	  int    lineIndex    =    position.lastIndexOf('n',    sourceName);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
254	[BUG]  [BUGGY]  int  lineIndex  =  position?  irNode.getLineIndex()  :  0;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position?  irNode.getLineIndex()  :  0;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position?  irNode.getLineIndex()  :  0;	  int    lineIndex    =    irNode.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
255	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('N',  position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('N',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('N',  position);	  int    lineIndex    =    position.indexOf('n',    charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
256	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('N',  position  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('N',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('N',  position  +  1);	  int    lineIndex    =    irNode.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
257	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1));  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  irNode.lastIndexOf('P',  position  -  1));	  int    lineIndex    =    irNode.lastIndexOf('n',    position    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
258	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('/',  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('/',  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('/',  0);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
259	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf('#',  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf('#',  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf('#',  0);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
260	[BUG]  [BUGGY]  int  lineIndex  =  position.indexOf(':',  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.indexOf(':',  0);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.indexOf(':',  0);	  int    lineIndex    =    position.indexOf('n',    0);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
261	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  position  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('/',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('/',  position  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
262	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  position  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('0',  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('0',  position  +  1);	  int    lineIndex    =    position.lastIndexOf('n',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
263	[BUG]  [BUGGY]  int  lineIndex  =  position.getLineIndex(position);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.getLineIndex(position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.getLineIndex(position);	  int    lineIndex    =    position.getLineIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
264	[BUG]  [BUGGY]  int  lineIndex  =  position  -  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  irNode.getLineno();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  irNode.getLineno();	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
265	[BUG]  [BUGGY]  int  lineIndex  =  position?  irNode.getLineno()  :  position;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position?  irNode.getLineno()  :  position;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position?  irNode.getLineno()  :  position;	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
266	[BUG]  [BUGGY]  int  lineIndex  =  position  +  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  irNode.getLineno();  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  irNode.getLineno();	  int    lineIndex    =    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
267	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('/',  position)-  1;	  int    lineIndex    =    this.sourceName.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
268	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)-  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('0',  position)-  1;	  int    lineIndex    =    this.sourceName.lastIndexOf('0',    position);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
269	[BUG]  [BUGGY]  int  lineIndex  =  irNode.indexOf('/',  position);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  irNode.indexOf('/',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  irNode.indexOf('/',  position);	  int    lineIndex    =    irNode.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
270	[BUG]  [BUGGY]  Integer  lineIndex  =  getLineIndex(position  -  2);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  Integer  lineIndex  =  getLineIndex(position  -  2);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	Integer  lineIndex  =  getLineIndex(position  -  2);	  Integer    lineIndex    =    getLineIndex(position);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
271	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)-  1;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('/',  position)-  1;	  int    lineIndex    =    this.sourceString.lastIndexOf('/',    position);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
272	[BUG]  [BUGGY]  int  lineIndex  =  position  +  4;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  +  4;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  +  4;	  int    lineIndex    =    position    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
273	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString.length  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
274	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  charno  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  charno  -  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position.lastIndexOf('n',  charno  -  1);	  int    lineIndex    =    position.lastIndexOf('n',    sourceString    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
275	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1,  position  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1,  position  +  1);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('N',  position  -  1,  position  +  1);	  int    lineIndex    =    this.sourceString.lastIndexOf('N',    position    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
276	[BUG]  [BUGGY]  int  lineIndex  =  position  -  4;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  position  -  4;  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  position  -  4;	  int    lineIndex    =    position    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
277	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.indexOf(':',  position);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {      [BUGGY]  int  lineIndex  =  this.sourceString.indexOf(':',  position);  [BUGGY]      if  (lineIndex  ==  -1)  {  return  position;  }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	263	263	1	replace	int  lineIndex  =  this.sourceString.indexOf(':',  position);	  int    lineIndex    =    this.sourceString.indexOf('n',    position);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
