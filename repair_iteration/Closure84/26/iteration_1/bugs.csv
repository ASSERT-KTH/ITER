bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (node.getComments()  ==  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if  (node.getComments()  ==  null)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if  (node.getComments()  ==  null)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
2	[BUG]  [BUGGY]  if  (irNode.getComments()!=  null)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if  (irNode.getComments()!=  null)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if  (irNode.getComments()!=  null)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
3	[BUG]  [BUGGY]  if(node.getComments()!=  null  ||  node.getComments()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if(node.getComments()!=  null  ||  node.getComments()!=  null)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if(node.getComments()!=  null  ||  node.getComments()!=  null)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]    [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	  	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  if  (node!=  null  &&  node.getComments()!=  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if  (node!=  null  &&  node.getComments()!=  null)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if  (node!=  null  &&  node.getComments()!=  null)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
6	[BUG]  [BUGGY]  if  (node.getComments()!=  null  ||  node.getComments().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if  (node.getComments()!=  null  ||  node.getComments().length  ==  0)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if  (node.getComments()!=  null  ||  node.getComments().length  ==  0)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
7	[BUG]  [BUGGY]  if(node.getComments()!=  null  &&  node.getComments().length  >  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if(node.getComments()!=  null  &&  node.getComments().length  >  0)  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if(node.getComments()!=  null  &&  node.getComments().length  >  0)  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
8	[BUG]  [BUGGY]  if(node.getComments()!=  null  &&  NodeUtil.isFunction(node.getParentNode()))  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if(node.getComments()!=  null  &&  NodeUtil.isFunction(node.getParentNode()))  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if(node.getComments()!=  null  &&  NodeUtil.isFunction(node.getParentNode()))  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
9	[BUG]  [BUGGY]  if(node.getComments()!=  null  &&  node.getName().endsWith( "/ "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  [BUGGY]  if(node.getComments()!=  null  &&  node.getName().endsWith( "/ "))  {  [BUGGY]  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  return  irNode;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	131	131	1	replace	if(node.getComments()!=  null  &&  node.getName().endsWith( "/ "))  {	if  (node.getComments()  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	51	None	replace
