bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  lineIndex  -  position;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  lineIndex  -  position;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position;	  return    lineIndex;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  return  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  lineIndex  -  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  1;	  return    lineIndex;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  return(position  -  lineIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return(position  -  lineIndex);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex);	  return    lineIndex;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  return  position2charno;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position2charno;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno;	  return    lineIndex;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  -  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  1;	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  return  position  -  2charno;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  2charno;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2charno;	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  return  position  -  lineIndex  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  -  2;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  2;	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  return  position  -  sourceString.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  sourceString.length();  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.length();	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  return  position  -(lineIndex  *  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(lineIndex  *  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  1);	  return    position    -(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  return  position  -(lineIndex  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(lineIndex  +  2);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  +  2);	  return    position    -(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  return  position  -(position  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(position  +  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(position  +  1);	  return    position    -(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  return  position  +(lineIndex  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +(lineIndex  +  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  1);	  return    position    -(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  return  position  -  lineIndex  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  +  2;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  +  2;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  return  position  -  lineIndex  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  /  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  /  1;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  return  position  +  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  lineIndex  +  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  +  1;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  return  lineIndex  -  position  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  lineIndex  -  position  +  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  +  1;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  return  position  -  lineIndex  +  3;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  +  3;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  +  3;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  return  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  lineIndex  +  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  1;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  return  position  +  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  lineIndex  -  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  -  1;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  return  position  +  charnoIndex;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  charnoIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  charnoIndex;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  return  position  /  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  /  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  1;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  return  position  -  lineIndex.intValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex.intValue();  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.intValue();	  return    position    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  return  position  -  lineIndex.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex.length();  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.length();	  return    position    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  return  position  -(position  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(position  -  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(position  -  1);	  return    position    -(lineIndex    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  return  position  -(lineIndex  -  1  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(lineIndex  -  1  +  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  1  +  1);	  return    position    -(lineIndex    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  return  position  -(lineIndex  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(lineIndex  -  2);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  2);	  return    position    -(lineIndex    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  return  position  -(position  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(position  -  2);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(position  -  2);	  return    position    -(lineIndex    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  return  position  /  lineIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  /  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  lineIndex;	  return    position    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  return  position  +  1  -  lineIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  1  -  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  1  -  lineIndex;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  return  position  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  2;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  2;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  return  position  +  charno.length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  charno.length;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  charno.length;	  return    position    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  position);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  position  =  sourceString.indexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('n',  position);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  lineIndex);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  return  position  -  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  sourceString.indexOf('n',  position);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.indexOf('n',  position);	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  return  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  0;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  0;	  return    lineIndex;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  return  position  +  sourceString.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  +  sourceString.length();  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.length();	  return    position    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  return  position  -  lineIndex  *  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  lineIndex  *  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  *  1;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  return  position  *  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  *  lineIndex  +  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  +  1;	  return    position    -    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  return  position  -  1  +  lineIndex;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  1  +  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  lineIndex;	  return    position    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  return  position  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  2;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2;	  return    position    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  return  position  -  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  1  +  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  1;	  return    position    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  return  position  -(lineIndex  -  1  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -(lineIndex  -  1  -  1);  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  1  -  1);	  return    position    -(lineIndex    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  return  position  -  this.lineIndex;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  return  position  -  this.lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  this.lineIndex;	  return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {    [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [BUGGY]    }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
