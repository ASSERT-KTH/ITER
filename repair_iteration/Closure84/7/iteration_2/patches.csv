bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  position  -  1  +  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  +  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  lineIndex  +  1;	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
2	[BUG]  [BUGGY]  return  position  -  1  +  sourceString.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  +  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  sourceString.length();	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
3	[BUG]  [BUGGY]  return  position  -  1  +  this.lineIndex;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  +  this.lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  this.lineIndex;	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  this.sourceName.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  this.sourceName.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  return  lineIndex  -  position  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  -  1;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  return  this.lineIndex  -  position;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  this.lineIndex  -  position;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  this.lineIndex  -  position;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  return  lineIndex  -  position  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  -  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  -  2;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  return  lineIndex  -  position  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  +  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  +  2;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
14	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
15	[BUG]  [BUGGY]  if(position  ==  0)  {  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(position  ==  0)  {  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(position  ==  0)  {  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
16	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
17	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
18	[BUG]  [BUGGY]  return  position  -  lineIndex  *  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  *  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  *  2;	  return    position    -    lineIndex    *    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
19	[BUG]  [BUGGY]  return  lineIndex  -  position  *  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  *  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  *  1;	  return    position    -    lineIndex    *    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
20	[BUG]  [BUGGY]  return  position  +  lineIndex  *  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  *  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  *  1;	  return    position    -    lineIndex    *    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
21	[BUG]  [BUGGY]  return  position  -(lineIndex  -  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  -  2  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  2  +  1);	  return    position    -(lineIndex    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
22	[BUG]  [BUGGY]  return  position  -(lineIndex  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  *  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  2);	  return    position    -(lineIndex    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  return  position  -(lineIndex  -  2  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  -  2  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  2  -  1);	  return    position    -(lineIndex    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
24	[BUG]  [BUGGY]  return  position  -  lineIndex  /  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  /  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  /  2;	  return    position    -    lineIndex    +    2;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
25	[BUG]  [BUGGY]  return  position2charno  -  lineIndex;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  lineIndex;	  return    position2charno;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  return  irNode.position2charno;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  irNode.position2charno;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  irNode.position2charno;	  return    position2charno;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  return  position2charno  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  1;	  return    position2charno;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  return  position  -  charno.length;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
29	[BUG]  [BUGGY]  return  lineIndex  +  charno.length;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  +  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
30	[BUG]  [BUGGY]  return  position  /  charno.length;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
31	[BUG]  [BUGGY]  return  position  -  lineIndex  +  charno.length;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  +  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  +  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
32	[BUG]  [BUGGY]  return  position  +  charno.length  -  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  charno.length  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  charno.length  -  1;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
33	[BUG]  [BUGGY]  return  position  +  lineIndex.length;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
34	[BUG]  [BUGGY]  return(position  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  1);	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  return(position  -  lineIndex  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex  -  1);	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  return(position  -  lineIndex  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex  +  1);	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  return(lineIndex  -  position);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(lineIndex  -  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(lineIndex  -  position);	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  return(position  -  lineIndex  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex  -  2);	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  return(position  -  lineIndex)-  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex)-  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex)-  1;	  return(position    -    lineIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position1  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position1  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position1  -  lineIndex  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  2;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  2;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  return  lineIndex  -  sourceString.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  sourceString.length();	  return    position    -    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  return  position  -  lineIndex  +  sourceString.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  +  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  +  sourceString.length();	  return    position    -    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  return  position  -  sourceString.length()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.length()  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.length()  +  1;	  return    position    -    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  return  position  -  sourceString.length()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.length()  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.length()  -  1;	  return    position    -    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  return  lineIndex  -  1  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  1  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  1  +  1;	  return    position    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
49	[BUG]  [BUGGY]  return  position  -  1,  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1,  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1,  lineIndex  +  1;	  return    position    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
50	[BUG]  [BUGGY]  return  position  -  lineIndex  *  1  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  *  1  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  *  1  +  1;	  return    position    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
51	[BUG]  [BUGGY]  return  position  -  lineIndex  *  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  *  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  *  lineIndex  +  1;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
52	[BUG]  [BUGGY]  return  position  /  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  lineIndex  +  1;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
53	[BUG]  [BUGGY]  return  position  *  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  -  1;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
54	[BUG]  [BUGGY]  return  position  *  lineIndex  +  2;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex  +  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  +  2;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
55	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	throw  new  IllegalArgumentException( " ");	  return    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	throw  new  IllegalStateException( " ");	  return    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
61	[BUG]  [BUGGY]  result(0,  lineIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  result(0,  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	result(0,  lineIndex);	  return    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
62	[BUG]  [BUGGY]  result[0]  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  result[0]  =  0;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	result[0]  =  0;	  return    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
63	[BUG]  [BUGGY]  if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
64	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
65	[BUG]  [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
66	[BUG]  [BUGGY]  return  position  -(lineIndex  *  1  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  *  1  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  1  +  1);	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
67	[BUG]  [BUGGY]  return  position  -(lineIndex  /  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  /  1  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  /  1  +  1);	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
68	[BUG]  [BUGGY]  return  lineIndex  -(lineIndex  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -(lineIndex  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -(lineIndex  -  1);	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
69	[BUG]  [BUGGY]  return  lineIndex  -(position  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -(position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -(position  -  1);	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
70	[BUG]  [BUGGY]  return  position  -  2charno  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  2charno  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2charno  +  1;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  return  lineIndex  -  2charno;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  2charno;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  2charno;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  return  position  -  2charno  +  lineIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  2charno  +  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2charno  +  lineIndex;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  return  position2charno  -  2charno;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  2charno;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  2charno;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
74	[BUG]  [BUGGY]  return  position  +  2charno;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  2charno;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  2charno;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  return  position2charno  -  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  lineIndex  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  return(position  -  lineIndex  +  1)/  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex  +  1)/  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex  +  1)/  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
77	[BUG]  [BUGGY]  return  position  -  lineIndex.charno();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.charno();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.charno();	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
78	[BUG]  [BUGGY]  return  position  -  lineIndex.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.intValue()  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.intValue()  +  1;	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
79	[BUG]  [BUGGY]  return  position  -  lineIndex.doubleValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.doubleValue();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.doubleValue();	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  return  position  -  lineIndex.intValue()  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.intValue()  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.intValue()  -  1;	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
81	[BUG]  [BUGGY]  return  position  -  lineIndex.longValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.longValue();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.longValue();	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
82	[BUG]  [BUGGY]  return  lineIndex  -  position.intValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position.intValue();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position.intValue();	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
83	[BUG]  [BUGGY]  return  lineIndex  -(position  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -(position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -(position  +  1);	  return    position    -(position    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
84	[BUG]  [BUGGY]  return  lineIndex  +  1  -  position;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  +  1  -  position;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  1  -  position;	  return    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
85	[BUG]  [BUGGY]  return  lineIndex  +  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  +  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  2;	  return    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  return  position  +  lineIndex  /  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  /  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  /  1;	  return    position    -    lineIndex    /    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
87	[BUG]  [BUGGY]  return  lineIndex  -  position  /  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  /  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  /  1;	  return    position    -    lineIndex    /    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  return  lineIndex  -(position  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -(position  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -(position  -  2);	  return    position    -(position    -    2);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
89	[BUG]  [BUGGY]  return  position  -(irNode.position  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(irNode.position  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(irNode.position  -  2);	  return    position    -(position    -    2);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
90	[BUG]  [BUGGY]  return  position  +(position  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(position  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(position  -  2);	  return    position    -(position    -    2);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
91	[BUG]  [BUGGY]  return  position  -  this.lineIndex  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  this.lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  this.lineIndex  -  1;	  return    position    -    this.lineIndex;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  return  position  -  this.lineIndex  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  this.lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  this.lineIndex  +  1;	  return    position    -    this.lineIndex;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
93	[BUG]  [BUGGY]  return  lineIndex  -  this.lineIndex;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  this.lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  this.lineIndex;	  return    position    -    this.lineIndex;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
94	[BUG]  [BUGGY]  return  position  +  lineIndex  -  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  -  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  -  2;	  return    position    +    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
95	[BUG]  [BUGGY]  return  position  /  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  lineIndex  -  1;	  return    position    +    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
96	[BUG]  [BUGGY]  return  position  +  charnoIndex  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  charnoIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  charnoIndex  -  1;	  return    position    +    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
97	[BUG]  [BUGGY]  return  position  /  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  2;	  return    position    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
98	[BUG]  [BUGGY]  return  position  -(lineIndex  *  1  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  *  1  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  1  -  1);	  return    position    -(lineIndex    -    1    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
99	[BUG]  [BUGGY]  return  position  -  lineIndex  -  2  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -  2  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  2  +  1;	  return    position    -    lineIndex    -    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
100	[BUG]  [BUGGY]  return  position  -  lineIndex  -  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -  3;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  3;	  return    position    -    lineIndex    -    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  return  position  -  1  -  lineIndex;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  -  lineIndex;	  return    position    +    1    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
102	[BUG]  [BUGGY]  return  position  /  1  -  lineIndex;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  1  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  1  -  lineIndex;	  return    position    +    1    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
103	[BUG]  [BUGGY]  return  position  +  1  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  1  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  1  -  lineIndex  -  1;	  return    position    +    1    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
104	[BUG]  [BUGGY]  return  position  -  lineIndex.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.lastIndexOf('n',  position);	  return    position    -    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
105	[BUG]  [BUGGY]  return  position  -  lineIndex.lastIndexOf('n',  sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.lastIndexOf('n',  sourceString);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.lastIndexOf('n',  sourceString);	  return    position    -    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
106	[BUG]  [BUGGY]  return  lineIndex  -  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  sourceString.lastIndexOf('n',  position);	  return    position    -    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
107	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  position  +  1);	  return    position    -    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
108	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  lineIndex  +  1);	  return    position    -    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
109	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.indexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('n',  position  +  1);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
110	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.indexOf('n',  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('n',  lineIndex);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
111	[BUG]  [BUGGY]  position  =  irNode.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  irNode.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  irNode.indexOf('n',  position);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
112	[BUG]  [BUGGY]  position  =  sourceString.indexOf('r',  position);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.indexOf('r',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('r',  position);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
113	[BUG]  [BUGGY]  return  position  +  lineIndex.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex.length();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
114	[BUG]  [BUGGY]  return  lineIndex  +  sourceString.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  +  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  sourceString.length();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
115	[BUG]  [BUGGY]  return  position  +  lineIndex  -  sourceString.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  -  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  -  sourceString.length();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
116	[BUG]  [BUGGY]  return  position  /  sourceString.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  sourceString.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  sourceString.length();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
117	[BUG]  [BUGGY]  return  position  +  sourceString.length()  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.length()  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.length()  -  1;	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
118	[BUG]  [BUGGY]  return  lineIndex  /  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  /  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  /  1;	  return    position    /    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
119	[BUG]  [BUGGY]  return  position  /  1  +  lineIndex;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  1  +  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  1  +  lineIndex;	  return    position    /    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
120	[BUG]  [BUGGY]  return  lineIndex  -(lineIndex  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -(lineIndex  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -(lineIndex  +  1);	  return    position    -(lineIndex    +    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
121	[BUG]  [BUGGY]  return  position  -(lineIndex  /  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  /  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  /  2);	  return    position    -(lineIndex    +    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
122	[BUG]  [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  position.lastIndexOf('n',  sourceString);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.indexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
124	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
125	[BUG]  [BUGGY]  lineIndex  =  irNode.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  irNode.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  irNode.lastIndexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
126	[BUG]  [BUGGY]  lineIndex  =  position.indexOf('n',  sourceString);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  position.indexOf('n',  sourceString);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  position.indexOf('n',  sourceString);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
127	[BUG]  [BUGGY]  return  position2charno  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  lineIndex  -  1;	  return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
128	[BUG]  [BUGGY]  return  position  -  lineIndex  -  1  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -  1  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  1  +  1;	  return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
129	[BUG]  [BUGGY]  return  lineIndex  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  2;	  return    position    -    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
130	[BUG]  [BUGGY]  return  position  -  2  +  lineIndex;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  2  +  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2  +  lineIndex;	  return    position    -    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
131	[BUG]  [BUGGY]  position  =  irNode.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  irNode.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  irNode.lastIndexOf('n',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
132	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position  +  1);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
133	[BUG]  [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  this.sourceString.lastIndexOf('n',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
134	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  lineIndex);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  lineIndex);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('r',  position);  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('r',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('r',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  return  position  +  lineIndex  +  2;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  +  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  +  2;	  return    position    +    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
137	[BUG]  [BUGGY]  return  position  +  lineIndex  +  3;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  +  3;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  +  3;	  return    position    +    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
138	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  if(position  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  if(position  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  if(position  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
139	[BUG]  [BUGGY]  if(position  ==  -1)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(position  ==  -1)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(position  ==  -1)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
140	[BUG]  [BUGGY]  if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(position  ==  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
141	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  if(position  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  if(position  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  if(position  >=  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
142	[BUG]  [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
143	[BUG]  [BUGGY]  return  position2charno  -(position  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -(position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -(position  -  1);	  return    position    -(position    -    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
144	[BUG]  [BUGGY]  return  position  +(position  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(position  -  1);	  return    position    -(position    -    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
145	[BUG]  [BUGGY]  return  position  -  lineIndex  -(position  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -(position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -(position  -  1);	  return    position    -(position    -    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
146	[BUG]  [BUGGY]  return  position  -  lineIndex.length()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.length()  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.length()  -  1;	  return    position    -    lineIndex.length();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
147	[BUG]  [BUGGY]  return  position  -  lineIndex.length()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.length()  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.length()  +  1;	  return    position    -    lineIndex.length();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
148	[BUG]  [BUGGY]  return  position  -  lineIndex.length()  -  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.length()  -  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.length()  -  2;	  return    position    -    lineIndex.length();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
149	[BUG]  [BUGGY]  return  lineIndex  -  position.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position.length();	  return    position    -    lineIndex.length();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
150	[BUG]  [BUGGY]  return  position  -  lineIndex.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.indexOf('n',  position);	  return    position    -    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
151	[BUG]  [BUGGY]  return  position  -  lineIndex.indexOf('n',  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.indexOf('n',  sourceString);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.indexOf('n',  sourceString);	  return    position    -    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
152	[BUG]  [BUGGY]  return  position  -  sourceString.indexOf('n',  lineIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.indexOf('n',  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.indexOf('n',  lineIndex);	  return    position    -    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
153	[BUG]  [BUGGY]  return  lineIndex  -  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  sourceString.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  sourceString.indexOf('n',  position);	  return    position    -    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
154	[BUG]  [BUGGY]  return  position  /  2charno;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  2charno;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  2charno;	  return    position    /    lineIndex;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
155	[BUG]  [BUGGY]  return  lineIndex  /  position;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  /  position;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  /  position;	  return    position    /    lineIndex;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
156	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
157	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
158	[BUG]  [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
159	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
160	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
161	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString);  return  position  -  lineIndex;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
162	[BUG]  [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  irNode.lastIndexOf('n',  position);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  irNode.lastIndexOf('n',  position);  return  position  -  lineIndex;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
163	[BUG]  [BUGGY]  return  position  -(lineIndex  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  /  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  /  1);	  return    position    -(lineIndex    *    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
164	[BUG]  [BUGGY]  return  position  -(position  *  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(position  *  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(position  *  2);	  return    position    -(lineIndex    *    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
165	[BUG]  [BUGGY]  return  position  -(lineIndex  *  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  *  4);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  4);	  return    position    -(lineIndex    *    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  return  position  -(lineIndex  *  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  *  3);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  *  3);	  return    position    -(lineIndex    *    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
167	[BUG]  [BUGGY]  return  position  -  charnoIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  charnoIndex;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
168	[BUG]  [BUGGY]  return  position  /  charnoIndex;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  charnoIndex;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
169	[BUG]  [BUGGY]  return  lineIndex  +  charnoIndex;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  +  charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  +  charnoIndex;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
170	[BUG]  [BUGGY]  return  position  +  charnoIndex  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  charnoIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  charnoIndex  +  1;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
171	[BUG]  [BUGGY]  return  position  +(lineIndex  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  1);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
172	[BUG]  [BUGGY]  return  position  +(lineIndex  +  1  -  lineIndex);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  1  -  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  1  -  lineIndex);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
173	[BUG]  [BUGGY]  return  position  +(lineIndex  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  2);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
174	[BUG]  [BUGGY]  return  position  /(lineIndex  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /(lineIndex  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /(lineIndex  +  1);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
175	[BUG]  [BUGGY]  return  position  +(lineIndex  *  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  *  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  *  1);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
176	[BUG]  [BUGGY]  return  lineIndex  -  position  +  3;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  position  +  3;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  position  +  3;	  return    position    -    lineIndex    +    3;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
177	[BUG]  [BUGGY]  return  position  -  lineIndex  *  3;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  *  3;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  *  3;	  return    position    -    lineIndex    +    3;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
178	[BUG]  [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  position.lastIndexOf('n',  sourceString);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    >=    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
179	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.indexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    >=    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
180	[BUG]  [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	Integer  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    >=    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
181	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;	  position    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
182	[BUG]  [BUGGY]  return  position  -  fileLevelJsDocBuilder  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  fileLevelJsDocBuilder  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  fileLevelJsDocBuilder  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
183	[BUG]  [BUGGY]  return  position2charno  -  position  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  position  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  position  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
184	[BUG]  [BUGGY]  return  position1  -  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position1  -  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position1  -  lineIndex  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
185	[BUG]  [BUGGY]  return  position  -  pointIndex  +  1;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  pointIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  pointIndex  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
186	[BUG]  [BUGGY]  return  position2charno  -(position  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -(position  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -(position  -  2);	  return    position    -(position    -    2);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
187	[BUG]  [BUGGY]  position  =  sourceString.indexOf('n',  position  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.indexOf('n',  position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('n',  position  -  1);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
188	[BUG]  [BUGGY]  position  =  sourceString.indexOf('  ',  position);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.indexOf('  ',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.indexOf('  ',  position);	  position    =    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
189	[BUG]  [BUGGY]  return  position  +  lineIndex  -  1+1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  -  1+1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  -  1+1;	  return    position    +    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
190	[BUG]  [BUGGY]  return  position  /  1  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  1  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  1  +  1;	  return    position    /    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
191	[BUG]  [BUGGY]  return  position  -  sourceString.intValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.intValue();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.intValue();	  return    position    -    lineIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
192	[BUG]  [BUGGY]  return  position  -  1  +  sourceString.charnoIndex;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  +  sourceString.charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  sourceString.charnoIndex;	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
193	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('n',  position  -  1);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
194	[BUG]  [BUGGY]  position  =  sourceString.lastIndexOf('  ',  position);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  position  =  sourceString.lastIndexOf('  ',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	position  =  sourceString.lastIndexOf('  ',  position);	  position    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
195	[BUG]  [BUGGY]  return  position  +  sourceString.charnoIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.charnoIndex;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
196	[BUG]  [BUGGY]  return  position  *  lineIndex  +  3;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex  +  3;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  +  3;	  return    position    -    lineIndex    +    3;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
197	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
198	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  lineIndex  +  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
199	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
200	[BUG]  [BUGGY]  return  position  -(lineIndex  -  1)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  -  1)+  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  -  1)+  1;	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
201	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
202	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >>  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >>  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >>  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
203	[BUG]  [BUGGY]  return  position  +  lineIndex  +  1  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  lineIndex  +  1  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  lineIndex  +  1  -  1;	  return    position    +    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
204	[BUG]  [BUGGY]  return  position2charno  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  +  1;	  return    position2charno;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
205	[BUG]  [BUGGY]  return  position  +  sourceString.charno();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.charno();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.charno();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
206	[BUG]  [BUGGY]  return  position  +  sourceString.charNo();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.charNo();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.charNo();	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
207	[BUG]  [BUGGY]  return  position  -(position  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(position  *  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(position  *  1);	  return    position    -(lineIndex    *    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
208	[BUG]  [BUGGY]  return  position  -  2  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  2  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  2  +  1;	  return    position    -    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
209	[BUG]  [BUGGY]  return  position2charno  -  lineIndex  /  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  lineIndex  /  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  lineIndex  /  1;	  return    position    -    lineIndex    /    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
210	[BUG]  [BUGGY]  return  position  -  lineIndex  /  1  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  /  1  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  /  1  +  1;	  return    position    -    lineIndex    /    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
211	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  lineIndex  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  lineIndex  -  1);	  return    position    -    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
212	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
213	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('  ',  position);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('  ',  position);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('  ',  position);  return  position  -  lineIndex  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
214	[BUG]  [BUGGY]  return  position  -  sourceString.indexOf('n',  position  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.indexOf('n',  position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.indexOf('n',  position  +  1);	  return    position    -    sourceString.indexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
215	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
216	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('  ',  position);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('  ',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('  ',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
217	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
218	[BUG]  [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  this.sourceString.lastIndexOf('n',  position);	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
219	[BUG]  [BUGGY]  return  position2charno  -(position  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -(position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -(position  +  1);	  return    position    -(position    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
220	[BUG]  [BUGGY]  return  position  +(lineIndex  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  2);	  return    position    -(lineIndex    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
221	[BUG]  [BUGGY]  return  lineIndex  -  1  +  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  1  +  sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  1  +  sourceString.lastIndexOf('n',  position);	  return    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
222	[BUG]  [BUGGY]  return  lineIndex  -  1  +  sourceString.indexOf('n',  position);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  1  +  sourceString.indexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  1  +  sourceString.indexOf('n',  position);	  return    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
223	[BUG]  [BUGGY]  return  lineIndex  -  1  +  position;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  lineIndex  -  1  +  position;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  lineIndex  -  1  +  position;	  return    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
224	[BUG]  [BUGGY]  return  position  +(position  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(position  +  1);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
225	[BUG]  [BUGGY]  return  position  +(lineIndex  +  1  -  position);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  1  -  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  1  -  position);	  return    position    +(lineIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
226	[BUG]  [BUGGY]  return  position  -  fileLevelJsDocBuilder.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  fileLevelJsDocBuilder.length();  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  fileLevelJsDocBuilder.length();	  return    position    -    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
227	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >=  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
228	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex!=  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
229	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  <  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
230	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
231	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position  -  1;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
232	[BUG]  [BUGGY]  return  position  +(lineIndex  +  charno.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  charno.length);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  charno.length);	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
233	[BUG]  [BUGGY]  return  position  +  sourceString.length;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
234	[BUG]  [BUGGY]  return  position  +(lineIndex  +  charno.length)-  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  charno.length)-  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  charno.length)-  1;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
235	[BUG]  [BUGGY]  return  position  +(lineIndex  -  position)+  charno.length;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  position)+  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  position)+  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
236	[BUG]  [BUGGY]  return  position  *  lineIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex;	  return    position    /    lineIndex;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
237	[BUG]  [BUGGY]  return  position  *  charno  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  charno  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  charno  +  1;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  return  position  *  lineIndex  +  1  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex  +  1  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  +  1  -  1;	  return    position    *    lineIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
239	[BUG]  [BUGGY]  return  position2charno  -  lineIndex  *  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  -  lineIndex  *  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  -  lineIndex  *  1;	  return    position    -    lineIndex    *    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
240	[BUG]  [BUGGY]  return  position  *  lineIndex  *  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  *  lineIndex  *  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  *  lineIndex  *  1;	  return    position    -    lineIndex    *    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
241	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  +  1);  return  position  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
242	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position  -  1);  return  position  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
243	[BUG]  [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex  -  1;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
244	[BUG]  [BUGGY]  return  position  -  lineIndex  +  charnoIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  +  charnoIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  +  charnoIndex;	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
245	[BUG]  [BUGGY]  return  position  +(lineIndex  +  charnoIndex);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  +  charnoIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  +  charnoIndex);	  return    position    +    charnoIndex;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
246	[BUG]  [BUGGY]  return  position2charno  +  lineIndex;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position2charno  +  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position2charno  +  lineIndex;	  return    position2charno;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
247	[BUG]  [BUGGY]  return  position  +(lineIndex  -  1)/  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  1)/  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  1)/  1;	  return    position    +    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
248	[BUG]  [BUGGY]  return(lineIndex  -  position)/  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(lineIndex  -  position)/  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(lineIndex  -  position)/  2;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
249	[BUG]  [BUGGY]  return(lineIndex  -  position)%  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(lineIndex  -  position)%  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(lineIndex  -  position)%  2;	  return    lineIndex    -    position;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
250	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
251	[BUG]  [BUGGY]  return(position  -  lineIndex  +  1)/  2;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return(position  -  lineIndex  +  1)/  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return(position  -  lineIndex  +  1)/  2;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
252	[BUG]  [BUGGY]  return  position  -  fileIndex  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  fileIndex  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  fileIndex  +  1;	  return    lineIndex    -    position    +    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
253	[BUG]  [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.lastIndexOf('n',  position);  return  position2charno  -  lineIndex;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
254	[BUG]  [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  sourceString.indexOf('n',  position);  return  position  -  lineIndex;	  lineIndex    =    sourceString.lastIndexOf('n',    position);    return    position    -    lineIndex;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
255	[BUG]  [BUGGY]  return  position  /(lineIndex  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /(lineIndex  +  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /(lineIndex  +  2);	  return    position    -(lineIndex    +    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
256	[BUG]  [BUGGY]  return  position  -  lineIndex.1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex.1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex.1;	  return    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
257	[BUG]  [BUGGY]  return  position  -  lineIndex  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  1;	  return    lineIndex    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
258	[BUG]  [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	int  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  >  -1)  {  return  position  -  lineIndex  -  1;  }	  int    lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    >=    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
259	[BUG]  [BUGGY]  return  position  -  lineIndex  /  2  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  /  2  +  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  /  2  +  1;	  return    position    -    lineIndex    /    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
260	[BUG]  [BUGGY]  if(lineIndex  <  0)  {  return  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(lineIndex  <  0)  {  return  0;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(lineIndex  <  0)  {  return  0;  }	  return    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
261	[BUG]  [BUGGY]  return  position  +  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.lastIndexOf('n',  position);	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
262	[BUG]  [BUGGY]  return  position  +  sourceString.lastIndexOf('n',  lineIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  sourceString.lastIndexOf('n',  lineIndex);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  sourceString.lastIndexOf('n',  lineIndex);	  return    position    +    sourceString.length();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
263	[BUG]  [BUGGY]  if(position  <=  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  if(position  <=  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	if(position  <=  0)  {  lineIndex  =  sourceString.lastIndexOf('n',  position);  if(lineIndex  ==  -1)  {  return  position  -  lineIndex  -  1;  }	  lineIndex    =    sourceString.lastIndexOf('n',    position);    if(lineIndex    ==    -1)    {    return    position    -    lineIndex    -    1;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
264	[BUG]  [BUGGY]  return  position  /  lineIndex  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /  lineIndex  +  2;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /  lineIndex  +  2;	  return    position    /    lineIndex;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
265	[BUG]  [BUGGY]  return  position  -  lineIndex  -  sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -  sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -  sourceString.lastIndexOf('n',  position);	  return    position    -    sourceString.lastIndexOf('n',    lineIndex);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
266	[BUG]  [BUGGY]  return  position  /(lineIndex  -  1  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /(lineIndex  -  1  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /(lineIndex  -  1  +  1);	  return    position    -(lineIndex    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
267	[BUG]  [BUGGY]  return  position  -  lineIndex  -(position  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  -(position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  -(position  +  1);	  return    position    -(position    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
268	[BUG]  [BUGGY]  return  position  -  lineIndex  /(position  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  lineIndex  /(position  +  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  lineIndex  /(position  +  1);	  return    position    -(position    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
269	[BUG]  [BUGGY]  return  position  +(lineIndex  -  1)/  charno.length;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  1)/  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  1)/  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
270	[BUG]  [BUGGY]  return  position  +(lineIndex  -  position)/  charno.length;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +(lineIndex  -  position)/  charno.length;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +(lineIndex  -  position)/  charno.length;	  return    position    +    charno.length;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
271	[BUG]  [BUGGY]  return  position  /(position  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  /(position  -  2);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  /(position  -  2);	  return    position    -(position    -    2);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
272	[BUG]  [BUGGY]  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  lineIndex  =  this.sourceString.lastIndexOf('n',  position);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	lineIndex  =  this.sourceString.lastIndexOf('n',  position);	  lineIndex    =    sourceString.lastIndexOf('n',    position);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
273	[BUG]  [BUGGY]  return  position  -  1  +  lineIndex  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  1  +  lineIndex  -  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  1  +  lineIndex  -  1;	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
274	[BUG]  [BUGGY]  return  position  +  1  +  lineIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  +  1  +  lineIndex;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  +  1  +  lineIndex;	  return    position    -    1    +    lineIndex;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
275	[BUG]  [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -  sourceString.lastIndexOf('n',  position)+  1;  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -  sourceString.lastIndexOf('n',  position)+  1;	  return    position    -    2charno;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
276	[BUG]  [BUGGY]  return  position  -(lineIndex  +  1  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  +  1  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  +  1  -  1);	  return    position    -(lineIndex    -    1    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
277	[BUG]  [BUGGY]  return  position  -(lineIndex  /  1  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  int  position2charno(int  position)  {  int  lineIndex  =  sourceString.lastIndexOf('\n',  position);  if  (lineIndex  ==  -1)  {      [BUGGY]  return  position  -(lineIndex  /  1  -  1);  [BUGGY]      }  else  {  return  position  -  lineIndex  -  1;  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  position2charno  [RETURN_TYPE]  int  int  position  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  lineIndex  position  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12403473458920847	265	265	1	replace	return  position  -(lineIndex  /  1  -  1);	  return    position    -(lineIndex    -    1    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
