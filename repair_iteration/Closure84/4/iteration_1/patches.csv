bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
3	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOLID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
4	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VAR;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
5	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VIDEO;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
8	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
9	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
10	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
11	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EMPTY;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EMPTY;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EMPTY;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
13	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
14	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
15	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
16	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
17	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
18	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
19	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
20	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_RESULT;	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
21	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
22	[BUG]  [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
23	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
24	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_VOID;	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
25	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:	      	non-compiled	[CE]  ')'  expected	8	None	replace
26	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  ')'  expected:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_VOID;	      	non-compiled	[CE]  ')'  expected	8	None	replace
27	[BUG]  [BUGGY]  case  EXPR_VOID:  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:	      	non-compiled	[CE]  ')'  expected	8	None	replace
28	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  break;	      	non-compiled	[CE]  ')'  expected	8	None	replace
29	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
30	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
31	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
32	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
33	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
34	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
35	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
36	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	10	None	replace
37	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	10	None	replace
38	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	10	None	replace
39	[BUG]  [BUGGY]  if(token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	14	None	replace
40	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	14	None	replace
41	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	14	None	replace
42	[BUG]  [BUGGY]  if(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	14	None	replace
43	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	15	None	replace
44	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
45	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
46	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
47	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VID;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
48	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;  [CE]  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR;  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VAR;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	3	None	replace
50	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_RESULT;  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	1	None	replace
52	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	1	None	replace
53	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
54	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
55	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
56	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
57	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
58	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
59	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
60	[BUG]  [BUGGY]  (Token.EXPR_RESULT  >>  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  (Token.EXPR_RESULT  >>  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  >>  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
61	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
62	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
63	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
64	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
65	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
66	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
67	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_RESULT;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
68	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VAR;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
69	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
70	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EMPTY;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EMPTY;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EMPTY;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
71	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
72	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
73	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
74	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
75	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
76	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
77	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
78	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VALUE;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
79	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT  +  1;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
80	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_LOID;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_LOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_LOID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
81	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_NOID;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
82	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
83	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
84	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
85	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  (Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
86	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
87	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
88	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
89	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
90	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
91	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
92	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
93	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
94	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
95	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOID;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_LOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
96	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_NOT;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_NOT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_NOT;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
97	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
98	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
99	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
100	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
101	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:	      	non-compiled	[CE]  ')'  expected	8	None	replace
102	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  ')'  expected:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_RESULT;	      	non-compiled	[CE]  ')'  expected	8	None	replace
103	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_RESULT;	      	non-compiled	[CE]  ')'  expected	8	None	replace
104	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_QUOTE;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
105	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLID;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
106	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VALUE;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
107	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
108	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
109	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
110	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
111	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
112	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
113	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
114	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  (Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
115	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
116	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_RESULT;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
117	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	6	None	replace
118	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	3	None	replace
119	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	13	None	replace
120	[BUG]  [BUGGY]  Token.EXPR_RESULT;  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	13	None	replace
121	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	15	None	replace
122	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	15	None	replace
123	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token);	      	non-compiled	[CE]  ')'  expected	8	None	replace
124	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE;	  case    EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	5	None	replace
125	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
126	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	4	None	replace
127	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	2	None	replace
128	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
