bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
2	[BUG]  [BUGGY]  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  return  Token.EXPR_VOID;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	return  Token.EXPR_VOID;	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
3	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT;	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
4	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID;	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
5	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT;	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
6	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]              AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT;	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
7	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
8	[BUG]  [BUGGY]    [CE]  ')'  expected  [FE]                  AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]    [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	  	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
9	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
10	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
11	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
12	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
13	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
14	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
15	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  [BUGGY]  if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	return  Token.EXPR_RESULT;  	non-compiled	[CE]  ')'  expected	7	None	replace
