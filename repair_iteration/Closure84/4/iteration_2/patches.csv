bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.ERROR;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.ERROR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.ERROR;	  case    EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	70	None	replace
2	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RECORD;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RECORD;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RECORD;	  case    EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	70	None	replace
3	[BUG]  [BUGGY]  if(Token.EXPR_VOID  <=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  <=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  <=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
4	[BUG]  [BUGGY]  ||  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
5	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RECULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RECULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RECULT;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RECULT;    	non-compiled	[CE]  ')'  expected	126	None	replace
6	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RECULT;    	non-compiled	[CE]  ')'  expected	126	None	replace
7	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VAR;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RECULT;    	non-compiled	[CE]  ')'  expected	126	None	replace
8	[BUG]  [BUGGY]  case  Token.EXPR_VAR:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VAR:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VAR:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	49	None	replace
9	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOAD;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOAD;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_LOAD;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	49	None	replace
10	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.VAR;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.VAR;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	49	None	replace
11	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VID;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	31	None	replace
12	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VALUE;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	31	None	replace
13	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
14	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
15	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
16	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
17	[BUG]  [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOKEN_VOID:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	46	None	replace
18	[BUG]  [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	46	None	replace
19	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_LOCATION;    	non-compiled	[CE]  ')'  expected	100	None	replace
20	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_LOCATION;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_LOCATION;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_LOCATION;	  case    Token.EXPR_RESULT:    return    Token.EXPR_LOCATION;    	non-compiled	[CE]  ')'  expected	100	None	replace
21	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_REULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_REULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_REULT;	  case    EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ')'  expected	80	None	replace
22	[BUG]  [BUGGY]  case  EXPR_NOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_NOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_NOID:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ')'  expected	81	None	replace
23	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  +  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_NOID  +  1;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ')'  expected	81	None	replace
24	[BUG]  [BUGGY]  case  EXPR_NOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_NOID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_NOID:  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ')'  expected	81	None	replace
25	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_VOID;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.EXPR_VOID:  return  Token.EXPR_RESULT;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
27	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
28	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
29	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
30	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.VAR_VOID;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.VAR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.VAR_VOID;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
31	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	20	None	replace
32	[BUG]  [BUGGY]  case  Token.EXPR_VOLID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOLID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOLID:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	48	None	replace
33	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VALUE  +  1;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	78	None	replace
34	[BUG]  [BUGGY]  case  EXPR_VID:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VID:  return  Token.EXPR_VALUE;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	78	None	replace
35	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  -  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VALUE  -  1;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	78	None	replace
36	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	78	None	replace
37	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
38	[BUG]  [BUGGY]  if(Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
40	[BUG]  [BUGGY]  ||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
41	[BUG]  [BUGGY]  result.equals(Token.EXPR_VOID)||  result.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  result.equals(Token.EXPR_VOID)||  result.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	result.equals(Token.EXPR_VOID)||  result.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
42	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
43	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY_STRING)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
45	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
46	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
47	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
48	[BUG]  [BUGGY]  if(Token.EOF  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
49	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EOF;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EOF;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EOF;	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
50	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ')'  expected	104	None	replace
51	[BUG]  [BUGGY]  case  EXPR_QUOTE:  return  Token.EXPR_QUOTE;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_QUOTE:  return  Token.EXPR_QUOTE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_QUOTE:  return  Token.EXPR_QUOTE;	  case    EXPR_RESULT:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ')'  expected	104	None	replace
52	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  |  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_QUOTE  |  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ')'  expected	104	None	replace
53	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VID  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	94	None	replace
54	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOID  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	94	None	replace
55	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	94	None	replace
56	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
57	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  null  ||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  null  ||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  null  ||  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError.make(Token.EXPR_VOID,  token)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.make(Token.EXPR_VOID,  token)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.make(Token.EXPR_VOID,  token)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
59	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
60	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.UNKNOWN;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.UNKNOWN;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
61	[BUG]  [BUGGY]  case  EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
62	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VOID;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
63	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EMPTY;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EMPTY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EMPTY;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
64	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.ERROR;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.ERROR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.ERROR;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
65	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.FUNCTION;  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.FUNCTION;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.FUNCTION;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
66	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
67	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
68	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
69	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
70	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
71	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
72	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token.eXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token.eXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token.eXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
73	[BUG]  [BUGGY]  case  '('  expected:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  '('  expected:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  '('  expected:  return  Token.EXPR_RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	26	None	replace
74	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_UNKNOWN;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	26	None	replace
75	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_REULT;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_REULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_REULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	26	None	replace
76	[BUG]  [BUGGY]  case  '.'  expected:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  '.'  expected:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  '.'  expected:  return  Token.EXPR_RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	26	None	replace
77	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	98	None	replace
78	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	98	None	replace
79	[BUG]  [BUGGY]  ||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
80	[BUG]  [BUGGY]  |  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
81	[BUG]  [BUGGY]  ||  token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
82	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
83	[BUG]  [BUGGY]  case  EXPR_RESULT:  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:	  case    Token.EXPR_RESULT:    	non-compiled	[CE]  ')'  expected	101	None	replace
84	[BUG]  [BUGGY]  case  Token.EXPR_VAR:  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VAR:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VAR:	  case    Token.EXPR_RESULT:    	non-compiled	[CE]  ')'  expected	101	None	replace
85	[BUG]  [BUGGY]  case  Token.EXPR_REULT:  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_REULT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_REULT:	  case    Token.EXPR_RESULT:    	non-compiled	[CE]  ')'  expected	101	None	replace
86	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	111	None	replace
87	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	111	None	replace
88	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
89	[BUG]  [BUGGY]  AssertionFailedError.expected(token,  EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(token,  EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(token,  EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	110	None	replace
91	[BUG]  [BUGGY]  AssertionFailedError.expected(token,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(token,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(token,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	110	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	110	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(token,  Token.EXPR_VOID,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	110	None	replace
94	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	56	None	replace
95	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
96	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
97	[BUG]  [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
98	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
99	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VOID  +  1;	  case    'EXPR_RESULT':    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	11	None	replace
100	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VID;	  case    'EXPR_RESULT':    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	11	None	replace
101	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EMPTY;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EMPTY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EMPTY;	  case    'EXPR_RESULT':    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	11	None	replace
102	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.VOID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.VOID;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	12	None	replace
103	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.UNKNOWN;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.UNKNOWN;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	12	None	replace
104	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.FALSE;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.FALSE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.FALSE;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	12	None	replace
105	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.VAR;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.VAR;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	12	None	replace
106	[BUG]  [BUGGY]  case  EXPR_VID:  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VID:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VID:	  case    EXPR_VOID:    	non-compiled	[CE]  ')'  expected	27	None	replace
107	[BUG]  [BUGGY]  case  ')'  expected:  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:	  case    EXPR_VOID:    	non-compiled	[CE]  ')'  expected	27	None	replace
108	[BUG]  [BUGGY]  case  Token.EXPR_VID:  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VID:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VID:	  case    EXPR_VOID:    	non-compiled	[CE]  ')'  expected	27	None	replace
109	[BUG]  [BUGGY]  if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
110	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
111	[BUG]  [BUGGY]  if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
112	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
113	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
114	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	90	None	replace
115	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	71	None	replace
116	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	71	None	replace
117	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Integer.toString(Token.EXPR_RESULT);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Integer.toString(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Integer.toString(Token.EXPR_RESULT);	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	71	None	replace
118	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	71	None	replace
119	[BUG]  [BUGGY]  if(token!=  EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	92	None	replace
120	[BUG]  [BUGGY]  if(token!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	92	None	replace
121	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
122	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
123	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
124	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
125	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FIELD)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FIELD)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FIELD)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
126	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
127	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
128	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  2;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	99	None	replace
129	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  /  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	99	None	replace
130	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  	99	None	replace
131	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  	99	None	replace
132	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  TOKEN)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  TOKEN)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  TOKEN)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	119	None	replace
133	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	119	None	replace
134	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	119	None	replace
135	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	33	None	replace
136	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	33	None	replace
137	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	33	None	replace
138	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	33	None	replace
139	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VAR)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	33	None	replace
140	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:	  case    Token.EXPR_VOID:    	non-compiled	[CE]  	25	None	replace
141	[BUG]  [BUGGY]  case  Token.EXPR_NOID:  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_NOID:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_NOID:	  case    Token.EXPR_VOID:    	non-compiled	[CE]  	25	None	replace
142	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  	93	None	replace
143	[BUG]  [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_VALUE;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOKEN_VOID:  return  Token.EXPR_VALUE;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  	93	None	replace
144	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;	  case    'EXPR_RESULT':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	67	None	replace
145	[BUG]  [BUGGY]  ||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
146	[BUG]  [BUGGY]  if(!token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
147	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
148	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	74	None	replace
149	[BUG]  [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	72	None	replace
150	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	72	None	replace
151	[BUG]  [BUGGY]  if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	66	None	replace
152	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	66	None	replace
153	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	66	None	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
155	[BUG]  [BUGGY]  Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
156	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
157	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
158	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
159	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
160	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
161	[BUG]  [BUGGY]  ||  Token.EXPR_VID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
162	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
163	[BUG]  [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
164	[BUG]  [BUGGY]  ||  Token.VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
165	[BUG]  [BUGGY]  |  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
166	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
167	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
168	[BUG]  [BUGGY]  if(token  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	122	None	replace
169	[BUG]  [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VAR:  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	4	None	replace
170	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	4	None	replace
171	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
172	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
173	[BUG]  [BUGGY]  if(Token.EXPR_VAR!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VAR!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VAR!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
174	[BUG]  [BUGGY]  Token.EXPR_RESULT:  token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
175	[BUG]  [BUGGY]  result.equals(Token.EXPR_VOID)||  result.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  result.equals(Token.EXPR_VOID)||  result.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	result.equals(Token.EXPR_VOID)||  result.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
176	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
177	[BUG]  [BUGGY]  token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token.equals(Token.EXPR_VOID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
178	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
179	[BUG]  [BUGGY]  (Token.EXPR_RESULT  ==  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  ==  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  ==  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT    >>    Token.EOF))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
180	[BUG]  [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_RESULT!=  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT    >>    Token.EOF))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
181	[BUG]  [BUGGY]  (Token.EXPR_RESULT  [Delete]  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  [Delete]  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  [Delete]  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT    >>    Token.EOF))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
182	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
183	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
184	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
185	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
186	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
187	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
188	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
189	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
190	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
191	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
192	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT))  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
193	[BUG]  [BUGGY]  AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_RESULT;	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
194	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
195	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
196	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.VOID;	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
197	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	1	None	replace
198	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RELEASE;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RELEASE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RELEASE;	  case    EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	1	None	replace
199	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
200	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
201	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
202	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RES	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
203	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
204	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
205	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	77	None	replace
206	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	77	None	replace
207	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID)||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	77	None	replace
208	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	77	None	replace
209	[BUG]  [BUGGY]  ||  token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	39	None	replace
210	[BUG]  [BUGGY]  if(token!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	39	None	replace
211	[BUG]  [BUGGY]  if(token!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	39	None	replace
212	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID;  break;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOID;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOID;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
213	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID;  break;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VID;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VID;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
214	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID;  break;  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOID;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
215	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;  break;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
216	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
217	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR;  break;  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VAR;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  	28	None	replace
218	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.NAME  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.NAME  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
219	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	45	None	replace
220	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.NAME)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	45	None	replace
221	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	45	None	replace
222	[BUG]  [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EOF))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	85	None	replace
223	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	17	None	replace
224	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	17	None	replace
225	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	17	None	replace
226	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	17	None	replace
227	[BUG]  [BUGGY]  ||  Token.EMPTY!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	17	None	replace
228	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	112	None	replace
229	[BUG]  [BUGGY]  ||  Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	112	None	replace
230	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	112	None	replace
231	[BUG]  [BUGGY]  ||  Token.EMPTY!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	112	None	replace
232	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	65	None	replace
233	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	65	None	replace
234	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VID;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VID;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  	30	None	replace
235	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.VOID;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.VOID;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	50	None	replace
236	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VID;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_VID;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	50	None	replace
237	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.VAR_VOID;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.VAR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.VAR_VOID;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  	50	None	replace
238	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  +  1;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
239	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  |  Token.EXPR_VOID;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  |  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
240	[BUG]  [BUGGY]  case  EXPR_VOLATILE:  return  Token.EXPR_VOLATILE;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOLATILE:  return  Token.EXPR_VOLATILE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOLATILE:  return  Token.EXPR_VOLATILE;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
241	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_UNKNOWN;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
242	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.VOID;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.VOID;	  Token.EXPR_RESULT;    	non-compiled	[CE]  	120	None	replace
243	[BUG]  [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.class.isAssignableFrom(Token.EXPR_RESULT);	  Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	120	None	replace
244	[BUG]  [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_VOID);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.class.isAssignableFrom(Token.EXPR_VOID);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.class.isAssignableFrom(Token.EXPR_VOID);	  Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	120	None	replace
245	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
246	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
247	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
248	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
249	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
250	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VID  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VID  +  1;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
251	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOID  +  1;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
252	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  2;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT  +  2;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
253	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOID;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOID;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ')'  expected	124	None	replace
254	[BUG]  [BUGGY]  ||  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
255	[BUG]  [BUGGY]  ||  token.equals(Token.VAR))  {  return  Token.VAR;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.VAR))  {  return  Token.VAR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.VAR))  {  return  Token.VAR;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
256	[BUG]  [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
257	[BUG]  [BUGGY]  |  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  token.equals(Token.VOID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
258	[BUG]  [BUGGY]  ||  token.equals(Token.FUNCTION))  {  return  Token.FUNCTION;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.FUNCTION))  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.FUNCTION))  {  return  Token.FUNCTION;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
259	[BUG]  [BUGGY]  ||  token.equals(Token.VOID))  {  return  Token.FUNCTION;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.VOID))  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.VOID))  {  return  Token.FUNCTION;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
260	[BUG]  [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
261	[BUG]  [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
262	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
263	[BUG]  [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
264	[BUG]  [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID  ==  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
265	[BUG]  [BUGGY]  ||(token.eXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token.eXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token.eXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
266	[BUG]  [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID!=  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID!=  Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
267	[BUG]  [BUGGY]  ||(Token.EXPR_VOID  ==  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID  ==  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID  ==  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
268	[BUG]  [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESUL	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	22	None	replace
269	[BUG]  [BUGGY]  case  Token.EXPR_NOT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_NOT:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_NOT:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_NOT;    	non-compiled	[CE]  ')'  expected	96	None	replace
270	[BUG]  [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_NOT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOKEN_VOID:  return  Token.EXPR_NOT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOKEN_VOID:  return  Token.EXPR_NOT;	  case    Token.EXPR_VOID:    return    Token.EXPR_NOT;    	non-compiled	[CE]  ')'  expected	96	None	replace
271	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_NOT  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_NOT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_NOT  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_NOT;    	non-compiled	[CE]  ')'  expected	96	None	replace
272	[BUG]  [BUGGY]  if(token.equals(Token.VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.VOID))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
273	[BUG]  [BUGGY]  if(Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
274	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
275	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_VAR;	  case    ')'    expected:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	102	None	replace
276	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_VARIABLE;	  case    ')'    expected:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	102	None	replace
277	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_VOLATILE;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_VOLATILE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_VOLATILE;	  case    ')'    expected:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	102	None	replace
278	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT)||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
279	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT)||  result.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  result.equals(Token.EXPR_RESULT)||  result.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	result.equals(Token.EXPR_RESULT)||  result.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT)||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
280	[BUG]  [BUGGY]  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT)||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
281	[BUG]  [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOLID:  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	3	None	replace
282	[BUG]  [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOLID:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	3	None	replace
283	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ')'  expected	97	None	replace
284	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_UNKNOWN;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ')'  expected	97	None	replace
285	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  -  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  -  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ')'  expected	97	None	replace
286	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ')'  expected	97	None	replace
287	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_UNKNOWN;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_UNKNOWN;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ')'  expected	97	None	replace
288	[BUG]  [BUGGY]  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
289	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token  ==  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
290	[BUG]  [BUGGY]  if(token!=  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
291	[BUG]  [BUGGY]  token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token  ==  Token.EXPR_VOID  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
292	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VOID;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
293	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.XPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.XPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.XPR_RESULT;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
294	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VAR;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
295	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOLATILE;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOLATILE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VOLATILE;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
296	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_QUOTE;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_QUOTE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_QUOTE;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
297	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
298	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
299	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  -  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
300	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_UNQUOTED;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_UNQUOTED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_UNQUOTED;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
301	[BUG]  [BUGGY]  case  EXPR_VARIABLE:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VARIABLE:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VARIABLE:  return  Token.EXPR_VARIABLE;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
302	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	127	None	replace
303	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	127	None	replace
304	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_RESULT;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_RESULT;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
305	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VAR;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_VAR;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
306	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_LOID;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_LOID;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
307	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
308	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EOF;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EOF;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EOF;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
309	[BUG]  [BUGGY]  if(Token.EOF  ==  Token.EXPR_RESULT)  {  return  Token.EOF;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF  ==  Token.EXPR_RESULT)  {  return  Token.EOF;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF  ==  Token.EXPR_RESULT)  {  return  Token.EOF;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
310	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
311	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
312	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.CALL)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
313	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token!=  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token!=  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
314	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  ||  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VOID  ||  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  ||  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
315	[BUG]  [BUGGY]  ||(token  ==  Token.CALL  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.CALL  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.CALL  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
316	[BUG]  [BUGGY]  ||(token  ==  Token.VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
317	[BUG]  [BUGGY]  ||(token  ==  Token.VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
318	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESUL	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
319	[BUG]  [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
320	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
321	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
322	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
323	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.FIELD)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.FIELD)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.FIELD)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
324	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
325	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
326	[BUG]  [BUGGY]  ||  Token.VAR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.VAR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.VAR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
327	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
328	[BUG]  [BUGGY]  ||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
329	[BUG]  [BUGGY]  ||  Token.NOT_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.NOT_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.NOT_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
330	[BUG]  [BUGGY]  ||  Token.TYPEOFNAME!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.TYPEOFNAME!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.TYPEOFNAME!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ')'  expected	61	None	replace
331	[BUG]  [BUGGY]  ||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	59	None	replace
332	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	59	None	replace
333	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	59	None	replace
334	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	107	None	replace
335	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(vod))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(vod))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(vod))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	107	None	replace
336	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(VOID))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	107	None	replace
337	[BUG]  [BUGGY]  AssertionFailedError.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	107	None	replace
338	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	107	None	replace
339	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	106	None	replace
340	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VALUE;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	106	None	replace
341	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
342	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
343	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
344	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF_VOID;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
345	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VIDEO;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VIDEO;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VIDEO;	  case    Token.EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	47	None	replace
346	[BUG]  [BUGGY]  (Token.EXPR_RESULT  >>  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  >>  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  >>  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EMPTY))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	114	None	replace
347	[BUG]  [BUGGY]  (Token.EXPR_RESULT  ==  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  ==  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  ==  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EMPTY))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	114	None	replace
348	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT!=  Token.VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.VOID))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EMPTY))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	114	None	replace
349	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_VOID))  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VOID))  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	24	None	replace
350	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  null)  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  null)  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  null)  {  Token.EXPR_RESULT:  return  Token.EXPR_VOID;  }	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	24	None	replace
351	[BUG]  [BUGGY]  AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.EXPR_RESULT:  return  Token.EXPR_VOID;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	24	None	replace
352	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_VID;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	24	None	replace
353	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  1;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	24	None	replace
354	[BUG]  [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
355	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
356	[BUG]  [BUGGY]  ||  token.equals(Token.TYPE_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.TYPE_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.TYPE_VOID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
357	[BUG]  [BUGGY]  ||  token.equals(Token.CALL))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.CALL))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.CALL))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
358	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
359	[BUG]  [BUGGY]  ||  Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
360	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EMPTY;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EMPTY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EMPTY;	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
361	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.NAME)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
362	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
363	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	113	None	replace
364	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	91	None	replace
365	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	91	None	replace
366	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	91	None	replace
367	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.VOID;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.VOID)  {  return  Token.VOID;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
368	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
369	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.VAR)  {  return  Token.VAR;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.VAR)  {  return  Token.VAR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.VAR)  {  return  Token.VAR;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
370	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EMPTY;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EMPTY;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EMPTY;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
371	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.VOID)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
372	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.VAR;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.VOID)  {  return  Token.VAR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.VOID)  {  return  Token.VAR;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
373	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.QUOTE)  {  return  Token.QUOTE;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.QUOTE)  {  return  Token.QUOTE;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.QUOTE)  {  return  Token.QUOTE;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
374	[BUG]  [BUGGY]  if(token.equals(Token.VOID))  {  return  Token.VOID;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.VOID))  {  return  Token.VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.VOID))  {  return  Token.VOID;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
375	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY))  {  return  Token.EMPTY;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
376	[BUG]  [BUGGY]  if(token.equals(Token.VAR))  {  return  Token.VAR;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.VAR))  {  return  Token.VAR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.VAR))  {  return  Token.VAR;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
377	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
378	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EOF)  {  return  Token.EOF;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
379	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	84	None	replace
380	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VIDEO;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VIDEO;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VIDEO;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	8	None	replace
381	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOLATILE;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOLATILE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOLATILE;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	8	None	replace
382	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VARIABLE;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	8	None	replace
383	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VID  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VID  +  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	8	None	replace
384	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
385	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  ||  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
386	[BUG]  [BUGGY]  case  Token.EXPR_VARIABLE:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VARIABLE:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VARIABLE:  return  Token.EXPR_VOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
387	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  -  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  -  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
388	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
389	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
390	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
391	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  2;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  2;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID    +    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
392	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  3;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  3;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  3;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID    +    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
393	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  4;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  +  4;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID    +    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
394	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VID;	  case    EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	9	None	replace
395	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOID  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ')'  expected	9	None	replace
396	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
397	[BUG]  [BUGGY]  if(token.equals(Token.RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.RESULT))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
398	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(token))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
399	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
400	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	23	None	replace
401	[BUG]  [BUGGY]  Token.EXPR_VAR:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VAR:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VAR:  return  Token.EXPR_RESULT;	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	23	None	replace
402	[BUG]  [BUGGY]  if(Token.EXPR_VAR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VAR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VAR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	23	None	replace
403	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
404	[BUG]  [BUGGY]  case  EXPR_VIDEO:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VIDEO:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VIDEO:  return  Token.EXPR_VOID;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
405	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VIDEO;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VIDEO;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VIDEO;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
406	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  ||  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VIDEO  ||  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
407	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  +  1;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VIDEO  +  1;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
408	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.NOT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
409	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.NOT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
410	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
411	[BUG]  [BUGGY]  ||  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
412	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
413	[BUG]  [BUGGY]  ||  Token.EMPTY!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
414	[BUG]  [BUGGY]  ||  Token.EOF  }  )  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EOF  }  )  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EOF  }  )  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
415	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
416	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_VOID);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_VOID);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_VOID);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
417	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  name);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  name);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  name);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
418	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  null);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  null);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  null);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
419	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  true);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  true);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
420	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  case);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  case);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  case);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
421	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  context);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  context);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_VOID,  token,  context);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
422	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VAR;	  case    EXPR_RESULT:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	68	None	replace
423	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_AVAILABLE;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_AVAILABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_AVAILABLE;	  case    EXPR_RESULT:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	68	None	replace
424	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLID  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	105	None	replace
425	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  |  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLID  |  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	105	None	replace
426	[BUG]  [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_VOLID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOLID:  return  Token.EXPR_VOLID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOLID:  return  Token.EXPR_VOLID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	105	None	replace
427	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  -  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLID  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	105	None	replace
428	[BUG]  [BUGGY]  if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
429	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
430	[BUG]  [BUGGY]  if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
431	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
432	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.CALL)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
433	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	3	None	replace
434	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOLID  +  1;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	3	None	replace
435	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  -  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOLID  -  1;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	3	None	replace
436	[BUG]  [BUGGY]  case  Token.EXPR_VOLID:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOLID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOLID:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	48	None	replace
437	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  |  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	48	None	replace
438	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  -  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  -  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ')'  expected	48	None	replace
439	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
440	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
441	[BUG]  [BUGGY]  ||  token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_RESULT!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
442	[BUG]  [BUGGY]  ||  Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VARIABLE!=  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
443	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_VALUE;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	50	None	replace
444	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_RESULT  +  1;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	50	None	replace
445	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_LOID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_LOID;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	50	None	replace
446	[BUG]  [BUGGY]  case  EXPR_VOID':  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID':  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID':  return  Token.EXPR_RESULT;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	50	None	replace
447	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
448	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	NodeUtil.isExpressionNode(token)||  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
449	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(token)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(token)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(token)&&  NodeUtil.isExpressionNode(token))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||    NodeUtil.isExpressionNode(token))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
450	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_DIRECTIVES;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_DIRECTIVES;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_DIRECTIVES;	  case    EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	2	None	replace
451	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_FUNCTION;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_FUNCTION;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_FUNCTION;	  case    EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	2	None	replace
452	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_SERVICE;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_SERVICE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_SERVICE;	  case    EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	2	None	replace
453	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOLID;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOLID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOLID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ')'  expected	8	None	replace
454	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNQUOTED;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNQUOTED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNQUOTED;	  case    Token.EXPR_RESULT:    return    Token.EXPR_LOCATION;    	non-compiled	[CE]  ')'  expected	100	None	replace
455	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  -  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_LOCATION  -  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_LOCATION;    	non-compiled	[CE]  ')'  expected	100	None	replace
456	[BUG]  [BUGGY]  case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  ')'  expected	28	None	replace
457	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  ')'  expected	28	None	replace
458	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  break  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  break  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  break  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  ')'  expected	28	None	replace
459	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  break;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  ')'  expected	28	None	replace
460	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VALUE;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_VALUE;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
461	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_NOT;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_NOT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_NOT;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
462	[BUG]  [BUGGY]  if(Token.TYPEOFNAME  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.TYPEOFNAME  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.TYPEOFNAME  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
463	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
464	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
465	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ')'  expected	88	None	replace
466	[BUG]  [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_VALUE;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VALUE:  return  Token.EXPR_VALUE;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	106	None	replace
467	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
468	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VALUE  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
469	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  ')';  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  ')';  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VALUE  +  ')';	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
470	[BUG]  [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
471	[BUG]  [BUGGY]  case  org.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  org.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  org.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_RESULT;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
472	[BUG]  [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  return  Token.EXPR_VOID;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
473	[BUG]  [BUGGY]  case  EXPR_UNKNOWN:  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_UNKNOWN:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_UNKNOWN:	  case    EXPR_VOID:    	non-compiled	[CE]  <identifier>  expected	27	None	replace
474	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	128	None	replace
475	[BUG]  [BUGGY]  case  Token.EXPR_VAR:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VAR:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VAR:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	49	None	replace
476	[BUG]  [BUGGY]  case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOken.EXPR_VOID:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	49	None	replace
477	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  2;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  2;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	94	None	replace
478	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  /  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  /  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	94	None	replace
479	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  -  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  -  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	94	None	replace
480	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  4;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  4;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	94	None	replace
481	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  >=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  >=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  >=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
482	[BUG]  [BUGGY]  ')'  expected:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ')'  expected:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	')'  expected:  return  Token.EXPR_RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	26	None	replace
483	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.RESULT;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	26	None	replace
484	[BUG]  [BUGGY]  &&  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
485	[BUG]  [BUGGY]  ||  Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
486	[BUG]  [BUGGY]  ||  token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
487	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.TYPEOFNAME)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
488	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_NOID;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_NOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_NOID;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ';'  expected	81	None	replace
489	[BUG]  [BUGGY]  case  EXPR_VID:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VID:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ';'  expected	81	None	replace
490	[BUG]  [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_NOID;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_NOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID:  return  Token.EXPR_NOID;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ';'  expected	81	None	replace
491	[BUG]  [BUGGY]  ||  token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	112	None	replace
492	[BUG]  [BUGGY]  ||  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
493	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  >>  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
494	[BUG]  [BUGGY]  case  EXPR_LOID:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_LOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_LOID:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	80	None	replace
495	[BUG]  [BUGGY]  case  EXPR_LOID:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_LOID:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_LOID:  return  Token.EXPR_LOID;	  case    EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	80	None	replace
496	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_LOID;	  case    EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	80	None	replace
497	[BUG]  [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID:  return  Token.EXPR_LOID;	  case    EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	80	None	replace
498	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	24	None	replace
499	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_VALUE;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	24	None	replace
500	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_RESULT  +  1;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	24	None	replace
501	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_NOT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_NOT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_NOT;	  case    Token.EXPR_VOID:    return    Token.EXPR_NOT;    	non-compiled	[CE]  ';'  expected	96	None	replace
502	[BUG]  [BUGGY]  case  Token.EXPR_VID:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VID:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_NOT;    	non-compiled	[CE]  ';'  expected	96	None	replace
503	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
504	[BUG]  [BUGGY]  ||!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
505	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
506	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_RESULT)||!token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
507	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
508	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
509	[BUG]  [BUGGY]  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
510	[BUG]  [BUGGY]  case  Token.EXPR_RECULT:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RECULT:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RECULT:  return  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RECULT;    	non-compiled	[CE]  ')'  expected	126	None	replace
511	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  |  Token.EXPR_VOID;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RECULT  |  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RECULT;    	non-compiled	[CE]  	126	None	replace
512	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	16	None	replace
513	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.FUNCTION  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
514	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT!=  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.FUNCTION))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
515	[BUG]  [BUGGY]  case  EXPR_VIDEO:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VIDEO:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VIDEO:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
516	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  |  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VIDEO  |  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
517	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  -  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VIDEO  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VIDEO  -  1;	  case    EXPR_VOID:    return    Token.EXPR_VIDEO;    	non-compiled	[CE]  ')'  expected	5	None	replace
518	[BUG]  [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_RESULT!=  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EMPTY))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	114	None	replace
519	[BUG]  [BUGGY]  (Token.EXPR_RESULT  [Delete]  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  [Delete]  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  [Delete]  Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT!=    Token.EMPTY))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	114	None	replace
520	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	7	None	replace
521	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	7	None	replace
522	[BUG]  [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VAR:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	4	None	replace
523	[BUG]  [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_VAR;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID:  return  Token.EXPR_VAR;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	4	None	replace
524	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	4	None	replace
525	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
526	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
527	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
528	[BUG]  [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VALUE:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
529	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  -  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  -  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
530	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  2;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  +  2;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
531	[BUG]  [BUGGY]  case  Token.EXPR_VID:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VID:  return  Token.EXPR_VALUE;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
532	[BUG]  [BUGGY]  if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
533	[BUG]  [BUGGY]  if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
534	[BUG]  [BUGGY]  if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.TYPEOFNAME!=  Token.TYPEOFNAME)  {  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
535	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token!=  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token!=  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
536	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EOF_RESULT  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EOF_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EOF_RESULT	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	90	None	replace
537	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
538	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
539	[BUG]  [BUGGY]  case  TOken.EXPR_RESULT:  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOken.EXPR_RESULT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOken.EXPR_RESULT:	  case    Token.EXPR_RESULT:    	non-compiled	[CE]  ';'  expected	101	None	replace
540	[BUG]  [BUGGY]  case  Token.EXPR_SERVICE:  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_SERVICE:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_SERVICE:	  case    Token.EXPR_RESULT:    	non-compiled	[CE]  ';'  expected	101	None	replace
541	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VID;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_VID;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
542	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  Token.EXPR_VOID:  return  Token.EXPR_RESULT;  }	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
543	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_VALUE;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
544	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_RESULT  +  1;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
545	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_LOID;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
546	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	120	None	replace
547	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	120	None	replace
548	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	120	None	replace
549	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR  +  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VAR  +  1;	  case    EXPR_RESULT:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	68	None	replace
550	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR  |  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VAR  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VAR  |  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	68	None	replace
551	[BUG]  [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_VAR;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VAR:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VAR:  return  Token.EXPR_VAR;	  case    EXPR_RESULT:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ';'  expected	68	None	replace
552	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  2;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_RESULT  +  2;	  case    'EXPR_RESULT':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	67	None	replace
553	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_RESULT  +  1;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	116	None	replace
554	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VALUE;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	116	None	replace
555	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOLID;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VOLID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VOLID;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	116	None	replace
556	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
557	[BUG]  [BUGGY]  &&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	64	None	replace
558	[BUG]  [BUGGY]  |  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	64	None	replace
559	[BUG]  [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	64	None	replace
560	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  &&  token!=  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
561	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_EMPTY;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_EMPTY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_EMPTY;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ';'  expected	12	None	replace
562	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.GETPROP_RESULT;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.GETPROP_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.GETPROP_RESULT;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ';'  expected	12	None	replace
563	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.ERROR;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.ERROR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.ERROR;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ';'  expected	12	None	replace
564	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.ESCAPE;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.ESCAPE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.ESCAPE;	  case    Token.EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ';'  expected	12	None	replace
565	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  /  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT  /  1;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	79	None	replace
566	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  -  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT  -  1;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	79	None	replace
567	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  4;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT  +  4;	  case    EXPR_VOID:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	79	None	replace
568	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
569	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
570	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EMPTY))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
571	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
572	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
573	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.RESULT;	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
574	[BUG]  [BUGGY]  case  Token.EXPR_LOID:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_LOID:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_LOID:  return  Token.EXPR_LOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	95	None	replace
575	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOID;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_LOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_LOID;	  case    Token.EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	95	None	replace
576	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOID  +  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_LOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_LOID  +  1;	  case    Token.EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	95	None	replace
577	[BUG]  [BUGGY]  case  Token.EXPR_LOID:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_LOID:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_LOID:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_LOID;    	non-compiled	[CE]  ';'  expected	95	None	replace
578	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  -  1;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  ';'  expected	69	None	replace
579	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  null))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT!=  null))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  null))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
580	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
581	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
582	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_RESULT);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.EXPR_RESULT);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ';'  expected	123	None	replace
583	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT,  token);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
584	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY,  token);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
585	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY_STRING,  token);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY_STRING,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY_STRING,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
586	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT_NAME,  token);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT_NAME,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.RESULT_NAME,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
587	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
588	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
589	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.NAME))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
590	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
591	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.GETPROP))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.GETPROP))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token.equals(Token.GETPROP))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
592	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
593	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT  ||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT  ||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_RESULT  ||  Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
594	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(name))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(name))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(name))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
595	[BUG]  [BUGGY]  (Token.EXPR_RESULT  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
596	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
597	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token!=  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token!=  Token.EXPR_RESULT  &&  token.equals(Token.EXPR_VOID)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
598	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
599	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.TYPEOFNAME)))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.TYPEOFNAME)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.TYPEOFNAME)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	121	None	replace
600	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
601	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
602	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.FUNCTION)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
603	[BUG]  [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
604	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.NOT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
605	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.NOT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.NOT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
606	[BUG]  [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_RESULT;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VALUE:  return  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  	78	None	replace
607	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	91	None	replace
608	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  +  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE  +  1;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  	124	None	replace
609	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  |  Token.EXPR_RESULT;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE  |  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  	124	None	replace
610	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  -  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE  -  1;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  	124	None	replace
611	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  4;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  	71	None	replace
612	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  +  3;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ')'  expected	71	None	replace
613	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  	71	None	replace
614	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_RESULT)||  NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	73	None	replace
615	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	73	None	replace
616	[BUG]  [BUGGY]  Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  NodeUtil.isExpressionNode(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	73	None	replace
617	[BUG]  [BUGGY]  if(Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	82	None	replace
618	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  -  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_QUOTE  -  1;	  case    EXPR_RESULT:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  	104	None	replace
619	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  ')';  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  ')';  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_QUOTE  +  ')';	  case    EXPR_RESULT:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  	104	None	replace
620	[BUG]  [BUGGY]  &&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
621	[BUG]  [BUGGY]  |  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
622	[BUG]  [BUGGY]  ||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
623	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_VID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
624	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT)||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
625	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.TYPEOFNAME))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT)||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
626	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  |  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  |  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ';'  expected	117	None	replace
627	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VAR;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_VAR;	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
628	[BUG]  [BUGGY]  case  TOken.EXPR_VOID:  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  TOken.EXPR_VOID:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  TOken.EXPR_VOID:	  case    Token.EXPR_VOID:    	non-compiled	[CE]  <identifier>  expected	25	None	replace
629	[BUG]  [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VALUE;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VALUE:  return  Token.EXPR_VALUE;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
630	[BUG]  [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VOID;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VALUE:  return  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
631	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VALUE  +  2;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
632	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
633	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
634	[BUG]  [BUGGY]  (Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
635	[BUG]  [BUGGY]  |  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
636	[BUG]  [BUGGY]  &&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
637	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VOLID))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_VOLID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VOLID))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
638	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
639	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.FIELD_NAME)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
640	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID,  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
641	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
642	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.ERROR)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.ERROR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.ERROR)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
643	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.GETPROP_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.GETPROP_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.GETPROP_RESULT;	  case    EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	70	None	replace
644	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.ESCAPE;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.ESCAPE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.ESCAPE;	  case    EXPR_RESULT:    return    Token.EMPTY;    	non-compiled	[CE]  ')'  expected	70	None	replace
645	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
646	[BUG]  [BUGGY]  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_VOID    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
647	[BUG]  [BUGGY]  &&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  &&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	&&  Token.EXPR_VOID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
648	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  >>  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  >>  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  >>  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
649	[BUG]  [BUGGY]  ||  token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
650	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  >>  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
651	[BUG]  [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
652	[BUG]  [BUGGY]  ||(Token.EXPR_VID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
653	[BUG]  [BUGGY]  ||(Token.EXPR_VID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
654	[BUG]  [BUGGY]  ||(token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
655	[BUG]  [BUGGY]  ||(token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token.EXPR_VOID!=  Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
656	[BUG]  [BUGGY]  if(Token.EMPTY  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
657	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_FUNCTION;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_FUNCTION;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_FUNCTION;	  case    Token.EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
658	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_DIRECT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_DIRECT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_DIRECT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
659	[BUG]  [BUGGY]  (Token.EXPR_RESULT  >=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_RESULT  >=  Token.EOF))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_RESULT  >=  Token.EOF))  {  return  Token.EXPR_RESULT;  }	  (Token.EXPR_RESULT    >>    Token.EOF))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
660	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_UNKNOWN;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_UNKNOWN;	  case    'EXPR_RESULT':    return    Token.EXPR_VOID;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
661	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  +  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  +  1;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
662	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  |  Token.EXPR_RESULT;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
663	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  -  1;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  -  1;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
664	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_RESULT;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	103	None	replace
665	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
666	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_VID;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_VID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_VID;	  case    ')'    expected:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	102	None	replace
667	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.EXPR_RESULT  +  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  Token.EXPR_RESULT  +  1;	  case    ')'    expected:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	102	None	replace
668	[BUG]  [BUGGY]  case  Token.EXPR_VARIABLE:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VARIABLE:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VARIABLE:  return  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	118	None	replace
669	[BUG]  [BUGGY]  if(Token.EXPR_VAR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VAR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VAR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	23	None	replace
670	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VAR)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
671	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	30	None	replace
672	[BUG]  [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  org.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VOID;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	30	None	replace
673	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	30	None	replace
674	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_VALUE;	  case    javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	30	None	replace
675	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.NAME)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
676	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.NAME)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.NAME)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.NAME)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.NAME)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
677	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
678	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_RESULT)&&  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
679	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
680	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
681	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(token.jscomp))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(token.jscomp))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(token.jscomp))  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
682	[BUG]  [BUGGY]  case  AssertionFailedError:  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  AssertionFailedError:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  AssertionFailedError:	  case    Token.EXPR_VOID:    	non-compiled	[CE]  ';'  expected	25	None	replace
683	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	115	None	replace
684	[BUG]  [BUGGY]  if(Token.EXPR_VARIABLE  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VARIABLE  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VARIABLE  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	115	None	replace
685	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
686	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_RESULT  &&  token!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_RESULT  &&  token!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_RESULT  &&  token!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
687	[BUG]  [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token  ==  Token.EXPR_VOID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_VOID;  }	  if(token    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
688	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VIDE;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VIDE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VIDE;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VID;    	non-compiled	[CE]  ';'  expected	8	None	replace
689	[BUG]  [BUGGY]  case  ')'  expected  =  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected  =  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected  =  Token.EXPR_VOID;	  case    EXPR_VOID:    	non-compiled	[CE]  ';'  expected	27	None	replace
690	[BUG]  [BUGGY]  case  ')'  expected  =  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected  =  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected  =  Token.EXPR_RESULT;	  case    EXPR_VOID:    	non-compiled	[CE]  ';'  expected	27	None	replace
691	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RELEASE;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_RELEASE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_RELEASE;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	46	None	replace
692	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_REULT;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_REULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_REULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	46	None	replace
693	[BUG]  [BUGGY]  if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT.equals(token)||  Token.EXPR_VOID.equals(token))  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT.equals(token))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	107	None	replace
694	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
695	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_NOT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_NOT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null)  {  return  Token.EXPR_NOT;  }	  if(Token.EXPR_VOID!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
696	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  &&  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLID  &&  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLID  &&  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ';'  expected	105	None	replace
697	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_VOID,  Token.VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EXPR_VOID,  Token.VOID)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	86	None	replace
698	[BUG]  [BUGGY]  assertionFailedError(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  assertionFailedError(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	assertionFailedError(Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	86	None	replace
699	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.ESCAPE)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.ESCAPE)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.ESCAPE)  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	86	None	replace
700	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_NAME)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	36	None	replace
701	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_DECEMBER)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_DECEMBER)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_DECEMBER)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	36	None	replace
702	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_BLOCK)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_BLOCK)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_BLOCK)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	36	None	replace
703	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	36	None	replace
704	[BUG]  [BUGGY]  case  Token.EXPR_LOCATION:  return  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_LOCATION:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_LOCATION:  return  Token.EXPR_RESULT;	  case    Token.EXPR_RESULT:    return    Token.EXPR_LOCATION;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
705	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RELEASE;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RELEASE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RELEASE;	  case    EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	9	None	replace
706	[BUG]  [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VID!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ';'  expected	61	None	replace
707	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RES	  ||    Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RES    	non-compiled	[CE]  ';'  expected	61	None	replace
708	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EMPTY!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EMPTY!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	113	None	replace
709	[BUG]  [BUGGY]  Case  ')'  expected:  return  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Case  ')'  expected:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Case  ')'  expected:  return  Token.EXPR_RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	26	None	replace
710	[BUG]  [BUGGY]  case  ')'  expected:  return  token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  ')'  expected:  return  token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  ')'  expected:  return  token.EXPR_RESULT;	  case    ')'    expected:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	26	None	replace
711	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
712	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
713	[BUG]  [BUGGY]  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
714	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ';'  expected	48	None	replace
715	[BUG]  [BUGGY]  if(Token.EXPR_JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_JSR!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	90	None	replace
716	[BUG]  [BUGGY]  |  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT  ==  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	112	None	replace
717	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.FALSE)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.FALSE)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.FALSE)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	112	None	replace
718	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
719	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
720	[BUG]  [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
721	[BUG]  [BUGGY]  ||(Token.EXPR_RESULT  ==  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_RESULT  ==  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_RESULT  ==  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
722	[BUG]  [BUGGY]  ||(token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token.EXPR_RESULT!=  Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  ||(Token.EXPR_VOID!=    Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
723	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VIO)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VIO)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VIO)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
724	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VARIABLE;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VARIABLE;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VARIABLE;  }	  if(Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
725	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  /  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_VOID  /  1;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VOID    +    1;    	non-compiled	[CE]  ';'  expected	10	None	replace
726	[BUG]  [BUGGY]  if(token!=  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token!=  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token!=  Token.EXPR_VOID  ||  token!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
727	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VAR;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_VAR;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
728	[BUG]  [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_VOID:  return  Token.EXPR_VARIABLE;	  Token.EXPR_VOID:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	20	None	replace
729	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VOLID  &&  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VOLID;    	non-compiled	[CE]  ';'  expected	3	None	replace
730	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_VID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VID)||  token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
731	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE  &&  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ';'  expected	124	None	replace
732	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  ||  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_QUOTE  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_QUOTE  ||  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_QUOTE;    	non-compiled	[CE]  ';'  expected	124	None	replace
733	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID!=  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
734	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  null  ||  Token.EXPR_VOID  ==  null)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
735	[BUG]  [BUGGY]  if(Token.EXPR_JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_JSR  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	88	None	replace
736	[BUG]  [BUGGY]  if(Token.EXPR_VARIABLE  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VARIABLE  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VARIABLE  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	88	None	replace
737	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.JSR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.JSR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.JSR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	88	None	replace
738	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  ||  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ';'  expected	97	None	replace
739	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  &&  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  &&  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_UNKNOWN  &&  Token.EXPR_VOID;	  case    Token.EXPR_RESULT:    return    Token.EXPR_UNKNOWN;    	non-compiled	[CE]  ';'  expected	97	None	replace
740	[BUG]  [BUGGY]  ||  Token.FUNCTION  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.FUNCTION  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.FUNCTION  ==  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
741	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VIDE;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VIDE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VIDE;	  case    Token.EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  ';'  expected	47	None	replace
742	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EMPTY)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	63	None	replace
743	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VARIABLE;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VARIABLE;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_VARIABLE;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
744	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_UNKNOWN;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_UNKNOWN;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_RESULT))  {  return  Token.EXPR_UNKNOWN;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
745	[BUG]  [BUGGY]  if(!token.equals(Token.EXPR_ARRAY))  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(!token.equals(Token.EXPR_ARRAY))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(!token.equals(Token.EXPR_ARRAY))  {  return  Token.EXPR_RESULT;  }	  if(!token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	53	None	replace
746	[BUG]  [BUGGY]  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token  ==  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	122	None	replace
747	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	72	None	replace
748	[BUG]  [BUGGY]  (Token.EXPR_VOID!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  (Token.EXPR_VOID!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	(Token.EXPR_VOID!=  Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	72	None	replace
749	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_VOID;	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	34	None	replace
750	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_VIO)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  	34	None	replace
751	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VARIABLE;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_VARIABLE;	  case    'EXPR_RESULT':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	67	None	replace
752	[BUG]  [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_RESULT':  return  Token.EXPR_RESULT  |  Token.EXPR_VOID;	  case    'EXPR_RESULT':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	67	None	replace
753	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.FUNCTION)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
754	[BUG]  [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.FUNCTION  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.FUNCTION)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
755	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  ||  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_NOID  ||  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ';'  expected	81	None	replace
756	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_NOID  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_NOID  &&  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_NOID;    	non-compiled	[CE]  ';'  expected	81	None	replace
757	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
758	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	93	None	replace
759	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VALUE  &&  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	78	None	replace
760	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VALUE  ||  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	78	None	replace
761	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VALUE;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VALUE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VALUE;	  case    EXPR_VOID:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ';'  expected	78	None	replace
762	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token!=  Token.EXPR_VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token!=  Token.EXPR_VAR  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
763	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(token!=  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(token!=  Token.EXPR_VID  &&  token.equals(Token.EXPR_RESULT)))  {  return  Token.EXPR_RESULT;  }	  ||(token    ==    Token.EXPR_VOID    &&    token.equals(Token.EXPR_RESULT)))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
764	[BUG]  [BUGGY]  AssertionFailedError:  return  Token.EXPR_VOID;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError:  return  Token.EXPR_VOID;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  ';'  expected	24	None	replace
765	[BUG]  [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RELEASE;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT:  return  Token.EXPR_RELEASE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT:  return  Token.EXPR_RELEASE;	  Token.EXPR_RESULT:    return    Token.EXPR_VOID;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
766	[BUG]  [BUGGY]  if(Token.EXPR_VAR  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VAR  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VAR  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
767	[BUG]  [BUGGY]  ||  Token.EXPR_VAR!=  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VAR!=  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VAR!=  Token.EXPR_RESULT;	  if(Token.EXPR_VOID!=    Token.EXPR_VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
768	[BUG]  [BUGGY]  |  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
769	[BUG]  [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VIDEO;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  'EXPR_VOID':  return  Token.EXPR_VIDEO;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  'EXPR_VOID':  return  Token.EXPR_VIDEO;	  case    'EXPR_VOID':    return    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
770	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError.expected(Token.EMPTY,  token.equals(Token.EXPR_VOID))  {  return  Token.EXPR_RESULT;  }	  AssertionFailedError.expected(Token.EXPR_RESULT,    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
771	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  break;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  break;	  case    Token.EXPR_VOID:    return    Token.EXPR_RESULT;    break;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
772	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
773	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EOF  ||  Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
774	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VAR)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EMPTY)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
775	[BUG]  [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID!=  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID!=  Token.EXPR_LONG)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
776	[BUG]  [BUGGY]  AssertionFailedToken.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedToken.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedToken.EXPR_RESULT:  return  Token.EXPR_RESULT;	  Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
777	[BUG]  [BUGGY]  Token.EXPR_RESULT  :  Token.EXPR_VOID;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  Token.EXPR_RESULT  :  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	Token.EXPR_RESULT  :  Token.EXPR_VOID;	  Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
778	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VAR  |  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  	49	None	replace
779	[BUG]  [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;	  case    Token.EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  	49	None	replace
780	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	119	None	replace
781	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT!=  EOF)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	119	None	replace
782	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  &&  Token.EXPR_VOID;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  &&  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  &&  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
783	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  ||  Token.EXPR_VOID;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  ||  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VOLATILE  ||  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VOLATILE;    	non-compiled	[CE]  	69	None	replace
784	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EOF)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	38	None	replace
785	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_VOID;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EOF)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_VOID    ==    Token.EOF)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  	38	None	replace
786	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(Token.EXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
787	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(NodeUtil.isExpressionNode(token.eXPR_VOID))  {  return  Token.EXPR_VOID;  }	  if(NodeUtil.isExpressionNode(Token.EXPR_RESULT))    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
788	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VAR;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VAR;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	103	None	replace
789	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VARIABLE;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_VARIABLE;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	103	None	replace
790	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_NOT;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_NOT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_NOT;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	103	None	replace
791	[BUG]  [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_QUOTE;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_UNKNOWN:  return  Token.EXPR_QUOTE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_UNKNOWN:  return  Token.EXPR_QUOTE;	  case    Token.EXPR_UNKNOWN:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
792	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EXPR_VAR))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
793	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.VAR  ||  Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.VAR)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
794	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_SERIALIZED;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_SERIALIZED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_SERIALIZED;	  case    EXPR_VOID:    return    Token.EXPR_VID;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
795	[BUG]  [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_VOID  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_VOID  ==  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
796	[BUG]  [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||(Token.EXPR_VOID  ==  Token.EXPR_RESULT))  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
797	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
798	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EXPR_RESULT    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
799	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT    ==    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
800	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_RESULT  |  Token.EXPR_RESULT;	  case    EXPR_RESULT:    return    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  ';'  expected	71	None	replace
801	[BUG]  [BUGGY]  if(Token.EXPR_JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
802	[BUG]  [BUGGY]  if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.JSR!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
803	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESUL	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESUL    	non-compiled	[CE]  ';'  expected	66	None	replace
804	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VARIABLE)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
805	[BUG]  [BUGGY]  if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VARIABLE!=  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_VOID!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
806	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_VID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_VID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
807	[BUG]  [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
808	[BUG]  [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_NOT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_VOID!=  Token.EXPR_NOT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_VOID!=  Token.EXPR_NOT)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
809	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  return  Token.EXPR_VOID;  }  else  {  return  Token.EXPR_RESULT;  }	  if(Token.EXPR_RESULT!=    Token.EXPR_VOID)    {    return    Token.EXPR_VOID;    }    else    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
810	[BUG]  [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_RESULT:  return  Token.EXPR_VARIABLE  &&  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VARIABLE;    	non-compiled	[CE]  ')'  expected	117	None	replace
811	[BUG]  [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_VOID;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VALUE:  return  Token.EXPR_VOID;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VALUE:  return  Token.EXPR_VOID;	  case    EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  ')'  expected	106	None	replace
812	[BUG]  [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VARIABLE;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  XPR_RESULT:  return  Token.EXPR_VARIABLE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  XPR_RESULT:  return  Token.EXPR_VARIABLE;	  case    XPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	116	None	replace
813	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token)  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token)  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token)	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
814	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.USE_RESULT,  token);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.USE_RESULT,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.USE_RESULT,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.EXPR_VOID,    token);    	non-compiled	[CE]  ')'  expected	123	None	replace
815	[BUG]  [BUGGY]  ||  token.equals(Token.CASE))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.CASE))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.CASE))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
816	[BUG]  [BUGGY]  ||  token.equals(Token.VAR))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.VAR))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.VAR))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	108	None	replace
817	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_VALUE))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_VALUE))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_VALUE))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
818	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.equals(Token.EXPR_TYPE))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_VOID))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
819	[BUG]  [BUGGY]  |  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  |  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	|  Token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
820	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  0)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT  ==  0)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT  ==  0)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
821	[BUG]  [BUGGY]  ||  token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  token.EXPR_RESULT  ==  null)  {  return  Token.EXPR_RESULT;  }	  ||    Token.EXPR_RESULT!=    null)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
822	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	14	None	replace
823	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	14	None	replace
824	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EXPR_RESULT  ==  Token.EXPR_VOID)  {  token.EXPR_RESULT:  return  Token.EXPR_RESULT;  }	  Token.EXPR_RESULT:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  ')'  expected	14	None	replace
825	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VOID  +  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.VAR_VOID  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.VAR_VOID  +  1;	  case    EXPR_VOID:    return    Token.VAR_VOID;    	non-compiled	[CE]  ')'  expected	6	None	replace
826	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VAR;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_RESULT;case  EXPR_VOID:  return  Token.EXPR_VAR;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	4	None	replace
827	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VAR  ||  Token.EXPR_RESULT;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  ')'  expected	4	None	replace
828	[BUG]  [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  EXPR_VOID:  return  Token.EXPR_VAR  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  EXPR_VOID:  return  Token.EXPR_VAR  +  1;	  case    EXPR_VOID:    return    Token.EXPR_VAR;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
829	[BUG]  [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.EXPR_RESULT)  {  return  Token.EXPR_VOID;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
830	[BUG]  [BUGGY]  if(Token.EOF!=  Token.CATCH)  {  return  Token.EXPR_RESULT;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(Token.EOF!=  Token.CATCH)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(Token.EOF!=  Token.CATCH)  {  return  Token.EXPR_RESULT;  }	  if(Token.EOF!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
831	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	||  Token.EXPR_RESULT!=  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.EXPR_RESULT)    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
832	[BUG]  [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VAR;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  case  Token.EXPR_VALUE:  return  Token.EXPR_VAR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	case  Token.EXPR_VALUE:  return  Token.EXPR_VAR;	  case    Token.EXPR_RESULT:    return    Token.EXPR_VALUE;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
833	[BUG]  [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:      [BUGGY]  if(token.equals(Token.EMPTY)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  return  Token.JSR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME:  return  Token.TYPEOFNAME;  case  com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK:  return  Token.USE_STACK;  case  com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP:  return  Token.SETPROP_OP;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	1139	1139	1	replace	if(token.equals(Token.EMPTY)||  token.equals(Token.EMPTY_STRING))  {  return  Token.EXPR_RESULT;  }	  if(token.equals(Token.EXPR_VOID)||    token.equals(Token.EMPTY_STRING))    {    return    Token.EXPR_RESULT;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
