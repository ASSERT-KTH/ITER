bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(irNode,  node);	  return    irFactory.handleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleFileOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(rootNodeJsDocBuilder);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
4	[BUG]  [BUGGY]  irNode.setPossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setPossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setPossibleFileOverviewJsDoc(node);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
5	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(rootNodeJsDocHolder);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
6	[BUG]  [BUGGY]  irNode.setPossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setPossibleFileOverviewJsDoc(irNode);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
7	[BUG]  [BUGGY]  irNode.setParentNode(node,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(node,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(node,  errorReporter);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
8	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(rootNodeJsDocBuilder,  node);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
9	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
10	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNode,  errorReporter);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
11	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNode,  templateNode);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
12	[BUG]  [BUGGY]  if(rootNode!=  null)  {  return  irFactory.handleFileOverviewJsDocHolder(rootNode);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNode!=  null)  {  return  irFactory.handleFileOverviewJsDocHolder(rootNode);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNode!=  null)  {  return  irFactory.handleFileOverviewJsDocHolder(rootNode);  }	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
13	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
14	[BUG]  [BUGGY]  return  rootNode.handleFileOverviewJsDocHolder(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.handleFileOverviewJsDocHolder(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.handleFileOverviewJsDocHolder(irFactory);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
15	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.cloneTree();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.cloneTree();	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
16	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
17	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
18	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
19	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNodeJsDocBuilder!=  null)  {  return  rootNodeJsDocBuilder.cloneTree();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
20	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
21	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
22	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
23	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleErrorJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
24	[BUG]  [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
25	[BUG]  [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
26	[BUG]  [BUGGY]  return  node.getFile(),  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  irFactory.handleFileOverviewJsDoc(irNode);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
27	[BUG]  [BUGGY]  return  node.getFile(),  irFactory.setFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  irFactory.setFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  irFactory.setFileOverviewJsDoc(irNode);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
28	[BUG]  [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
29	[BUG]  [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irFactory.handlePossibleFileOverviewJsDoc(irNode);  }	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
30	[BUG]  [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irNode.handlePossibleFileOverviewJsDoc(irFactory);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irNode.handlePossibleFileOverviewJsDoc(irFactory);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  irNode.handlePossibleFileOverviewJsDoc(irFactory);  }	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
31	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
32	[BUG]  [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  node.handlePossibleFileOverviewJsDoc(irFactory);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  node.handlePossibleFileOverviewJsDoc(irFactory);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irFactory.handlePossibleFileOverviewJsDoc(irNode))  {  return  node.handlePossibleFileOverviewJsDoc(irFactory);  }	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
33	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);	  return    irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
34	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
35	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
36	[BUG]  [BUGGY]  return  irNode.getParent()  +  comment;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  comment;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  comment;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
37	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getParent()  +  irNode;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getParent()  +  irNode;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getParent()  +  irNode;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
38	[BUG]  [BUGGY]  return  irNode.getNext()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getNext()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getNext()  +  fileLevelJsDocBuilder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
39	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder,  rootNodeJsDocHolder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
40	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
41	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder();	  return    irFactory.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
42	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  node);	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(node);	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
47	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
48	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
49	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
53	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc();	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
54	[BUG]  [BUGGY]  return  irFactory.getFileName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileName();	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
55	[BUG]  [BUGGY]  return  irNode.getFileName()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName()  +  sourceString;	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
56	[BUG]  [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName()  +  fileLevelJsDocBuilder;	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
57	[BUG]  [BUGGY]  return  irNode.getFileName()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName()  +  1;	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
58	[BUG]  [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder.getParent();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName()  +  fileLevelJsDocBuilder.getParent();	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
59	[BUG]  [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder.getLineno();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  fileLevelJsDocBuilder.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName()  +  fileLevelJsDocBuilder.getLineno();	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
60	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  +  sourceString;	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
61	[BUG]  [BUGGY]  return  irFactory.getSourceName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getSourceName();	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  return  irNode.getSourceName()  + "n ";  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + "n ";	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  return  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getSourceName();	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  return  irNode.getSourceName()  + "/ ";  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + "/ ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + "/ ";	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  return  irNode.getSourceName()  + ": ";  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + ": ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + ": ";	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
66	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.getFileOverviewJsDoc();	  return    rootNodeJsDocBuilder.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
67	[BUG]  [BUGGY]  return  irDocBuilder.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irDocBuilder.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irDocBuilder.getFileOverviewJsDoc();	  return    rootNodeJsDocBuilder.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
68	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);	  return    rootNodeJsDocBuilder.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
69	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
70	[BUG]  [BUGGY]  irNode  =  irFactory.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.getFileOverviewJsDoc(irNode);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
71	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
72	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(comment);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
73	[BUG]  [BUGGY]  irNode  =  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleLocalFileOverviewJsDoc(irNode);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
74	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(node);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
75	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
76	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
77	[BUG]  [BUGGY]  result  =  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleLocalFileOverviewJsDoc(irNode);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
78	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(irNode,  node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
79	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(irNode);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
82	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(irNode,  node);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
83	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder,  node);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
84	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
85	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
86	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
87	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
88	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
89	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
90	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
91	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(sourceString);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
92	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocBuilder();	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
93	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
94	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
96	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
97	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
98	[BUG]  [BUGGY]  return  irNode.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno()  -  1;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
99	[BUG]  [BUGGY]  return  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno()  +  1;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
100	[BUG]  [BUGGY]  return  irFactory.getLineno();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getLineno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
101	[BUG]  [BUGGY]  return  irNode.getLineno()  /  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  /  2;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno()  /  2;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
102	[BUG]  [BUGGY]  return  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getCharno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
103	[BUG]  [BUGGY]  return  irFactory.cloneFile();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.cloneFile();	  return    irNode.cloneFile();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
104	[BUG]  [BUGGY]  return  irNode.cloneFile()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFile()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFile()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.cloneFile();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
105	[BUG]  [BUGGY]  return  irNode.cloneFile()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFile()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFile()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.cloneFile();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
106	[BUG]  [BUGGY]  return  irFactory.getLocalName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getLocalName();	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  return  irNode.getLocalName()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLocalName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLocalName()  +  sourceString;	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
108	[BUG]  [BUGGY]  return  node.getLocalName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getLocalName();	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
109	[BUG]  [BUGGY]  return  irNode.getLocalName()  + "n ";  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLocalName()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLocalName()  + "n ";	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(node);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
111	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
112	[BUG]  [BUGGY]  irNode  =  irFactory.handleNodeOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleNodeOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleNodeOverviewJsDoc(irNode);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
113	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
114	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
115	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
116	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder(sourceString);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
117	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder(rootNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
118	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
119	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
120	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  errorReporter);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
121	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  sourceString;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  sourceString;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
122	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  rootNodeJsDocHolder);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
123	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
124	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  sourceString);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
125	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocHolder);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
126	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(sourceString);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
127	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
128	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  rootNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  rootNode);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
129	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(irNode,  node);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  result  =  irFactory.handleNossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleNossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleNossibleFileOverviewJsDoc(node);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
131	[BUG]  [BUGGY]  return  irFactory.getErrorReporter();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getErrorReporter();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getErrorReporter();	  return    irFactory.getName();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
133	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
134	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
135	[BUG]  [BUGGY]  return  fileOverviewInfo.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handleFileOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
136	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(comment);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
137	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(result);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(result);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(result);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
138	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
139	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
140	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(node);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
141	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
142	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
143	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  templateNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  templateNode);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
144	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
145	[BUG]  [BUGGY]  return  irFactory.getFile().toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
146	[BUG]  [BUGGY]  return  irNode.getFile().getName();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getName();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
147	[BUG]  [BUGGY]  return  node.getFile().toString();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
148	[BUG]  [BUGGY]  return  irNode.getFile().toURI();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().toURI();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().toURI();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
149	[BUG]  [BUGGY]  return  irNode.getFile().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().toString()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().toString()  + "n ";	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
150	[BUG]  [BUGGY]  return  irNode.getFile().getParent().toString();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getParent().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getParent().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
151	[BUG]  [BUGGY]  return  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getLastChild();	  return    rootNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
152	[BUG]  [BUGGY]  return  rootNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getLastChild();	  return    rootNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
153	[BUG]  [BUGGY]  if(rootNode.getFirstChild()!=  null)  {  return  rootNode.getFirstChild();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNode.getFirstChild()!=  null)  {  return  rootNode.getFirstChild();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNode.getFirstChild()!=  null)  {  return  rootNode.getFirstChild();  }	  return    rootNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
154	[BUG]  [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getPossibleFileOverviewJsDoc();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
155	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
156	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDocBuilder();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
157	[BUG]  [BUGGY]  return  node.getPossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getPossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getPossibleFileOverviewJsDoc();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
158	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDoc(node);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
159	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
160	[BUG]  [BUGGY]  return  irDocBuilder.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irDocBuilder.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
161	[BUG]  [BUGGY]  result  =  irFactory.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
162	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
163	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
164	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
166	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
167	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
168	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
169	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder,  templateNode;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocHolder,  templateNode;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder,  templateNode;	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
170	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocHolder.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder.cloneTree();	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
171	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocHolder.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder.clone();	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
172	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLocalName()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
173	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFileName()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFileName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFileName()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
174	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFullName()  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFullName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFullName()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
175	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
176	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getParent()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
177	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverview();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.clonePossibleFileOverview();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
178	[BUG]  [BUGGY]  return  irNode.cloneFileOverview();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFileOverview();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
179	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFileOverviewJsDoc();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
180	[BUG]  [BUGGY]  return  irNode.getFileOverview();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverview();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
181	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverview(sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverview(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverview(sourceString);	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
182	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
183	[BUG]  [BUGGY]  if(rootNode!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNode!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNode!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  }	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
184	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  errorReporter);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
185	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  comment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  comment);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
186	[BUG]  [BUGGY]  return  rootNode.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
187	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
188	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDoc(node);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
189	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
190	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
191	[BUG]  [BUGGY]  return  irNode.setFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.setFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.setFileOverviewJsDoc(irFactory);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
192	[BUG]  [BUGGY]  return  irNode.getFile().getNext();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getNext();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
193	[BUG]  [BUGGY]  return  node.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
194	[BUG]  [BUGGY]  return  irFactory.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
195	[BUG]  [BUGGY]  return  irNode.getFile().getLastChild();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getLastChild();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
196	[BUG]  [BUGGY]  return  irNode.getFile().getAbsolutePath();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getAbsolutePath();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getAbsolutePath();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
197	[BUG]  [BUGGY]  return  irFactory.getNameNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getNameNode();	  return    irNode.getNameNode();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
198	[BUG]  [BUGGY]  return  irNode.getFileNameNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileNameNode();	  return    irNode.getNameNode();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
199	[BUG]  [BUGGY]  return  node.getNameNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getNameNode();	  return    irNode.getNameNode();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
200	[BUG]  [BUGGY]  return  irNode.getParentNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParentNode();	  return    irNode.getNameNode();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
201	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
202	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileLevelJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(fileLevelJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  }	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
203	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
204	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
205	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
206	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.clonePossibleFileOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
207	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.clonePossibleFileOverviewJsDoc();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
208	[BUG]  [BUGGY]  return  irFactory.cloneFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.cloneFileOverviewJsDoc();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
209	[BUG]  [BUGGY]  return  irFactory.createTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTree();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
210	[BUG]  [BUGGY]  return  irFactory.cloneFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.cloneFileOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
211	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.clonePossibleFileOverviewJSDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
212	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.getFirstChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
213	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getLastChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
214	[BUG]  [BUGGY]  return  irFactory.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getLastChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
215	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.getLastChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
216	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null)  {  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileLevelJsDocBuilder!=  null)  {  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(fileLevelJsDocBuilder!=  null)  {  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  }	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
217	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
218	[BUG]  [BUGGY]  return  irFactory.getTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
219	[BUG]  [BUGGY]  return  node.getTree();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
220	[BUG]  [BUGGY]  return  irNode.getTreeLocation();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTreeLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getTreeLocation();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
221	[BUG]  [BUGGY]  return  irNode.getTree(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTree(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getTree(),  errorReporter);	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
222	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(comment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(comment);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
223	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(node);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
224	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
225	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
226	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
227	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
228	[BUG]  [BUGGY]  return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
229	[BUG]  [BUGGY]  return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getParent()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
230	[BUG]  [BUGGY]  return  node.getNext();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getNext();	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
231	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
232	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
233	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
234	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
235	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
236	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(errorReporter);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
237	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
238	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
239	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(sourceString);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
240	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(jsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(jsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(jsDocBuilder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
241	[BUG]  [BUGGY]  irNode.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.getFileOverviewJsDocHolder();	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
242	[BUG]  [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
243	[BUG]  [BUGGY]  node.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  node.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	node.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
244	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocHolder(irNode.getFileOverviewJsDocHolder());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDocHolder(irNode.getFileOverviewJsDocHolder());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDocHolder(irNode.getFileOverviewJsDocHolder());	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
245	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()  ==  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irNode.getFileOverviewJsDocHolder()  ==  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()  ==  null)  {  return  irNode.getFileOverviewJsDocHolder();  }	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
246	[BUG]  [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFossibleFileOverviewJsDoc(node);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
247	[BUG]  [BUGGY]  irNode  =  node.handleFossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  node.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  node.handleFossibleFileOverviewJsDoc(irNode);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
248	[BUG]  [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFossibleFileOverviewJsDoc(comment);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
249	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(node);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
250	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
251	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
252	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  node);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
253	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
254	[BUG]  [BUGGY]  return  irNode.getLastChild()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLastChild()  +  1;	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
255	[BUG]  [BUGGY]  return  irNode.getLastChild().getNext();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLastChild().getNext();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
256	[BUG]  [BUGGY]  return  irNode.getLastChild().getString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild().getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLastChild().getString();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
257	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
258	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
259	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  comment);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(node,  comment);	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
260	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  sourceString);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(node,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(node,  sourceString);	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
261	[BUG]  [BUGGY]  return  irFactory.getPossibleFile();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getPossibleFile();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
262	[BUG]  [BUGGY]  return  node.getPossibleFile();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getPossibleFile();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
263	[BUG]  [BUGGY]  return  irNode.getPossibleFile().getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFile().getParent();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
264	[BUG]  [BUGGY]  return  irNode.getPossibleFile().cloneTree();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFile().cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFile().cloneTree();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
265	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
266	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
267	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
268	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
269	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
270	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(false);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
271	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true,  false);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
272	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
273	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(false,  false);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
274	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
275	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
276	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
277	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
278	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
279	[BUG]  [BUGGY]  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleFossibleFileOverviewJsDoc(irNode);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
280	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(node);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
281	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(irFactory,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(irFactory,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(irFactory,  fileLevelJsDocBuilder);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
282	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(comment);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
283	[BUG]  [BUGGY]  irNode  =  node.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  node.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  node.handlePossibleFileOverviewJsDoc(irNode);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
284	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode,  comment);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
285	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
286	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
287	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(irNode,  rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
288	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
289	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
290	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
291	[BUG]  [BUGGY]  return  irFactory.createAstRoot(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(irNode);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
292	[BUG]  [BUGGY]  return  irFactory.createAstRoot(irNode,  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(irNode,  node);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
293	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(node,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(node,  rootNodeJsDocBuilder);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
294	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(node,  fileLevelJsDocBuilder);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
295	[BUG]  [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocHolder,  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocHolder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(rootNodeJsDocHolder,  node);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
296	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node,  sourceString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(node,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(node,  sourceString);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
297	[BUG]  [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocBuilder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(rootNodeJsDocBuilder,  node);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
298	[BUG]  [BUGGY]  return  fileOverviewInfo.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
299	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.getFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
300	[BUG]  [BUGGY]  return  fileOverviewInfo.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.getFileOverviewJsDoc();	  return    irNode.getFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
301	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder(fileOverviewInfo);	  return    irNode.getFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
302	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
303	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
304	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
305	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
306	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
307	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
308	[BUG]  [BUGGY]  return  irNodeJSDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJSDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJSDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
309	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getParent();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
310	[BUG]  [BUGGY]  return  irDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
311	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
312	[BUG]  [BUGGY]  return  irFactory.getLocation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
313	[BUG]  [BUGGY]  return  node.getLocation();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
314	[BUG]  [BUGGY]  return  irNode.getLocation()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLocation()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLocation()  +  1;	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
315	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocHolder(null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDocHolder(null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDocHolder(null);	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDo    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
316	[BUG]  [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleF  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleF  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleF	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDo    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
317	[BUG]  [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDo    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
318	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDocHolder();	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDo    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
319	[BUG]  [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handle  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  ||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handle  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	||  irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handle	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDo    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
320	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
321	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
322	[BUG]  [BUGGY]  return  irNode.getNext()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getNext()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getNext()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
323	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
324	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
325	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
326	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
327	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
328	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
329	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
330	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
331	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
332	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewjsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewjsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewjsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
333	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
334	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
335	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  templateNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
336	[BUG]  [BUGGY]  return  node.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDocBuilder();	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
337	[BUG]  [BUGGY]  if(node.getFileOverviewJsDocHolder()!=  null)  {  return  node.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(node.getFileOverviewJsDocHolder()!=  null)  {  return  node.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(node.getFileOverviewJsDocHolder()!=  null)  {  return  node.getFileOverviewJsDocHolder();  }	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
338	[BUG]  [BUGGY]  if(node.getFileOverviewJsDocHolder()  ==  null)  {  return  node.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(node.getFileOverviewJsDocHolder()  ==  null)  {  return  node.getFileOverviewJsDocHolder();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(node.getFileOverviewJsDocHolder()  ==  null)  {  return  node.getFileOverviewJsDocHolder();  }	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
339	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
340	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
341	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
342	[BUG]  [BUGGY]  result  =  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFileOverviewJsDoc(irNode);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
343	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDoc(node);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
344	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
345	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
346	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
347	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
348	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
349	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR  |  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR  |  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR  |  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
350	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
351	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
352	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
353	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
354	[BUG]  [BUGGY]  return  node.cloneTree(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneTree(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.cloneTree(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
355	[BUG]  [BUGGY]  return  node.clonePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.clonePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.clonePossibleFileOverviewJsDoc();	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
356	[BUG]  [BUGGY]  return  node.cloneTree(),  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneTree(),  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.cloneTree(),  irFactory.handleFileOverviewJsDoc(irNode);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
357	[BUG]  [BUGGY]  return  node.clonePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.clonePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.clonePossibleFileOverviewJsDoc(irNode);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
358	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.getLastChild();	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
359	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getLastChild()  :  irFactory.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getLastChild()  :  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getLastChild()  :  irFactory.getLastChild();	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
360	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.getLastChild();	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
361	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getFirstChild()  :  irFactory.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getFirstChild()  :  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getFirstChild()  :  irFactory.getLastChild();	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
362	[BUG]  [BUGGY]  irNode  =  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleMissingFileOverviewJsDoc(irNode);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
363	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(node);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
364	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
365	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
366	[BUG]  [BUGGY]  return  irNode.handleMissingFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleMissingFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleMissingFileOverviewJsDoc(irFactory);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
367	[BUG]  [BUGGY]  result  =  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleMissingFileOverviewJsDoc(irNode);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
368	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(fileOverviewInfo!=  null)  {  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  }	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
369	[BUG]  [BUGGY]  return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
370	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
371	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
372	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
373	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
374	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(rootNode);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
375	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(comment);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
376	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(node);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
377	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
378	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocBuilder;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
379	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder,  errorReporter);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
380	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  sourceString;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder,  sourceString;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
381	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder,  rootNodeJsDocHolder;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
382	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
383	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.clonePossibleFileOverviewJsDocBuilder();	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
384	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFileOverviewJsDocBuilder();	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
385	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
386	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
387	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDocBuilder(sourceString);	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
388	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
389	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  errorReporter);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
390	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
391	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
392	[BUG]  [BUGGY]  return  irNode.handleNossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleNossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleNossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
393	[BUG]  [BUGGY]  result  =  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleNossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
394	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
395	[BUG]  [BUGGY]  return  irFactory.getNext();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getNext();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
396	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
397	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.VAR?  irFactory.getParent()  :  irFactory.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.VAR?  irFactory.getParent()  :  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.VAR?  irFactory.getParent()  :  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
398	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getParent()  :  irFactory.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getParent()  :  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.EXPR_RESULT?  irFactory.getParent()  :  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
399	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT  ||  irFactory.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.EXPR_RESULT  ||  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.EXPR_RESULT  ||  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
400	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
401	[BUG]  [BUGGY]  return  node.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
402	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder.getParent();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
403	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder()  +  1;	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
404	[BUG]  [BUGGY]  return  irNode.getFileTypeJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileTypeJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileTypeJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
405	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(node);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
406	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(comment);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
407	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
408	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
409	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder(sourceString);	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
410	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder()  +  fileLevelJsDocBuilder;	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
411	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder()  +  1;	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
412	[BUG]  [BUGGY]  return  irFactory.removeFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.removeFirstChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
413	[BUG]  [BUGGY]  return  irNode.removeLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.removeLastChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
414	[BUG]  [BUGGY]  return  node.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.removeFirstChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
415	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(rootNodeJsDocBuilder!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  }	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
416	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
417	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
418	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);	  return    irNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
419	[BUG]  [BUGGY]  return  irFactory.getFileOverview();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverview();	  return    irFactory.getFile();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
420	[BUG]  [BUGGY]  return  irFactory.getFileType();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileType();	  return    irFactory.getFile();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
421	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(irNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
422	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
423	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
424	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
425	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
426	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
427	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
428	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(node);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
429	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
430	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
431	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
432	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
433	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
434	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder;	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
435	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder.cloneTree();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder.cloneTree();	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
436	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder.toString();	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
437	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
438	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
439	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc()  &&!irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
440	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc()  &&  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
441	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(node);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
442	[BUG]  [BUGGY]  irNode  =  node.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  node.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  node.handleFileOverviewJsDoc(irNode);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
443	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(comment);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
444	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
445	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(irNode,  comment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(irNode,  comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(irNode,  comment);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
446	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(fileOverviewInfo!=  null)  {  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  }	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
447	[BUG]  [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
448	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
449	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
450	[BUG]  [BUGGY]  return  node.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
451	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
452	[BUG]  [BUGGY]  return  node.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
453	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
454	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
455	[BUG]  [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
456	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
457	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
458	[BUG]  [BUGGY]  return  irFactory.setTreeOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setTreeOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setTreeOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
459	[BUG]  [BUGGY]  return  irFactory.createTreeBuilder();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTreeBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTreeBuilder();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
460	[BUG]  [BUGGY]  return  irFactory.createTree(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTree(rootNodeJsDocBuilder);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
461	[BUG]  [BUGGY]  return  irFactory.createTreeLocation(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTreeLocation(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTreeLocation(rootNodeJsDocBuilder);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
462	[BUG]  [BUGGY]  return  irFactory.transformTree(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.transformTree(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.transformTree(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
463	[BUG]  [BUGGY]  return  irFactory.getTypeDesc();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getTypeDesc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getTypeDesc();	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
464	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
465	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJSDoc(irNode);	  return    irFactory.getFile();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
466	[BUG]  [BUGGY]  return  irFactory.getFile(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFile(node);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
467	[BUG]  [BUGGY]  return  node.getFile(),  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  fileLevelJsDocBuilder);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
468	[BUG]  [BUGGY]  return  node.getFile(),  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile(),  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile(),  fileLevelJsDocBuilder;	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
469	[BUG]  [BUGGY]  return  rootNode.getFile();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFile();	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
470	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDocHolder(irNode);	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
471	[BUG]  [BUGGY]  irNode.setFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDoc(irNode);	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
472	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.cloneTree();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.cloneTree();	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
473	[BUG]  [BUGGY]  return  irNodeJSDocBuilder.cloneTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJSDocBuilder.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJSDocBuilder.cloneTree();	  return    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
474	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
475	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
476	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
477	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
478	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
479	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getSourceName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getSourceName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
480	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
481	[BUG]  [BUGGY]  return  fileOverviewInfo.handleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
482	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
483	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
484	[BUG]  [BUGGY]  return  irNode.replaceChild(rootNodeJsDocHolder,  irNode.removeFirstChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.replaceChild(rootNodeJsDocHolder,  irNode.removeFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.replaceChild(rootNodeJsDocHolder,  irNode.removeFirstChild());	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
485	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.handleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.handleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.handleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
486	[BUG]  [BUGGY]  return  irFactory.getParentNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getParentNode();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
487	[BUG]  [BUGGY]  return  irFactory.getPrevious();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPrevious();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getPrevious();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
488	[BUG]  [BUGGY]  return  irFactory.getParent()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getParent()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getParent()  +  fileLevelJsDocBuilder;	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
489	[BUG]  [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
490	[BUG]  [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handlePossibleFileOverviewJsDoc(node);	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
491	[BUG]  [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
492	[BUG]  [BUGGY]  return  node.cloneTree(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneTree(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.cloneTree(irNode);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
493	[BUG]  [BUGGY]  return  rootNode.cloneTree();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.cloneTree();	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
494	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
495	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder  +  sourceString;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder  +  sourceString;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
496	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
497	[BUG]  [BUGGY]  return  node.getFileName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileName();	  return    irNode.getFileName();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
498	[BUG]  [BUGGY]  return  irNode.getNamespaceURI();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getNamespaceURI();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getNamespaceURI();	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
499	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
500	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocBuilder();	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
501	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
502	[BUG]  [BUGGY]  return  irNode.getTree()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTree()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getTree()  +  1;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
503	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
504	[BUG]  [BUGGY]  return  node.handleFossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.handleFossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.handleFossibleFileOverviewJsDoc(irFactory);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
505	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
506	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
507	[BUG]  [BUGGY]  return  node.handleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.handleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.handleFileOverviewJsDoc(irFactory);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
508	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
509	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
510	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
511	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
512	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
513	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder  +  fileLevelJsDocBuilder;	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
514	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  irNode    =    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
515	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.handleFileOverviewJsDocHolder(irFactory);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.handleFileOverviewJsDocHolder(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.handleFileOverviewJsDocHolder(irFactory);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
516	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDocHolder(rootNode);	  return    irFactory.handleFileOverviewJsDocHolder(rootNode);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
517	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
518	[BUG]  [BUGGY]  return  rootNode.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
519	[BUG]  [BUGGY]  return  ir.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  ir.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  ir.getFileOverviewJsDocHolder();	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
520	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
521	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);	  return    irFactory.handleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
522	[BUG]  [BUGGY]  return  irNode.handleLocalFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleLocalFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleLocalFileOverviewJsDoc(irFactory);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
523	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
524	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc();	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
525	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
526	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
527	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder(node);	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
528	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
529	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
530	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
531	[BUG]  [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handlePossibleFileOverviewJsDoc();	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
532	[BUG]  [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
533	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder,  fileLevelJsDocBuilder;	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
534	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
535	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
536	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc(rootNodeJsDocHolder);	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
537	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDocHolder(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFileOverviewJsDocHolder(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDocHolder(irFactory);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
538	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.getFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
539	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
540	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
541	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
542	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNode);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
543	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
544	[BUG]  [BUGGY]  return  rootNode.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
545	[BUG]  [BUGGY]  return  irFactory.getName(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getName(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getName(node);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
546	[BUG]  [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
547	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder(irNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
548	[BUG]  [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileLevelJsDocBuilder(irNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
549	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
550	[BUG]  [BUGGY]  return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileOverviewInfo.handleFossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
551	[BUG]  [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
552	[BUG]  [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
553	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
554	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
555	[BUG]  [BUGGY]  irFactory.handleNodeOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNodeOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNodeOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
556	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
557	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(node,  rootNodeJsDocBuilder);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
558	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder,  node);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
559	[BUG]  [BUGGY]  return  irNode.getfirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getfirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getfirstChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
560	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFilename()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFilename()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFilename()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
561	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
562	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
563	[BUG]  [BUGGY]  return  irNode.getParent()  +  rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  rootNodeJsDocHolder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
564	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getFirstChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
565	[BUG]  [BUGGY]  return  rootNode.getFile().toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
566	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFile().toString();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
567	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder,  irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder,  irNode);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
568	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(sourceString);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
569	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
570	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  +  fileLevelJsDocBuilder;	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
571	[BUG]  [BUGGY]  return  irNode.getSource();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSource();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSource();	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
572	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(rootNode);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
573	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
574	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder  +  sourceString;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
575	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
576	[BUG]  [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(rootNodeJsDocHolder);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
577	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(node,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(node,  rootNodeJsDocHolder);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
578	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocHolder.getParent();	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
579	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
580	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
581	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
582	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
583	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(rootNode);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
584	[BUG]  [BUGGY]  irNode.setParentNode(node,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(node,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(node,  rootNodeJsDocBuilder);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
585	[BUG]  [BUGGY]  irNode.setParentNode(node,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(node,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(node,  rootNodeJsDocHolder);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
586	[BUG]  [BUGGY]  irNode.setParentNode(parentNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(parentNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(parentNode);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
587	[BUG]  [BUGGY]  return  node.cloneFile();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.cloneFile();	  return    irNode.cloneFile();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
588	[BUG]  [BUGGY]  return  rootNode.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
589	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
590	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder,  irNode);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
591	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
592	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
593	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.handleFossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.handleFossibleFileOverviewJsDoc(irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.handleFossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
594	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
595	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
596	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocHolder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
597	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(node,  rootNodeJsDocBuilder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
598	[BUG]  [BUGGY]  return  irNode.getConfig();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getConfig();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getConfig();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
599	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
600	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDoc);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(jsDoc);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
601	[BUG]  [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileLevelJsDocBuilder(irNode);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
602	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(jsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
603	[BUG]  [BUGGY]  return  errorReporter;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  errorReporter;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  errorReporter;	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
604	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
605	[BUG]  [BUGGY]  return  this.fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  this.fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  this.fileLevelJsDocBuilder;	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
606	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
607	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
608	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
609	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder,  irNode);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
610	[BUG]  [BUGGY]  return  irFactory.handleNodeJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeJsDocHolder(irNode);	  return    irNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
611	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
612	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(rootNodeJsDocHolder);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
613	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleLocalFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
614	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFirstChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
615	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.clonePossibleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.clonePossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.clonePossibleFileOverviewJsDocBuilder();	  return    irNode.clonePossibleFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
616	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder,  node);	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
617	[BUG]  [BUGGY]  return  node.getLineno();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getLineno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
618	[BUG]  [BUGGY]  return  irNode.getLineno()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno()  +  sourceString;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
619	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
620	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
621	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
622	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
623	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
624	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder(rootNode);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
625	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
626	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  rootNode);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
627	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo,  node);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
628	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
629	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.createFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
630	[BUG]  [BUGGY]  return  irNode.getTarget();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTarget();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getTarget();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
631	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
632	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
633	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);	  return    irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
634	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  irNode    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
635	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(irNode,  rootNodeJsDocHolder);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
636	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(node.getName());	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
637	[BUG]  [BUGGY]  return  irFactory.getNamedFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNamedFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getNamedFileOverviewJsDoc(node);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
638	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(node.getName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(node.getName());	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
639	[BUG]  [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
640	[BUG]  [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + ": "  +  irFactory.handlePossibleFileOverviewJSDoc(irNode);	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
641	[BUG]  [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
642	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverview(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverview(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverview(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
643	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setPossibleFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
644	[BUG]  [BUGGY]  return  irFactory.handlePossingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossingFileOverviewJsDoc(irNode);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
645	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(false);	  return    irNode.clonePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
646	[BUG]  [BUGGY]  return  irNode.getFileLocation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
647	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
648	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
649	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocHolder(node.getFileOverviewJsDocHolder());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDocHolder(node.getFileOverviewJsDocHolder());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDocHolder(node.getFileOverviewJsDocHolder());	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
650	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJs  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJs  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJs	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
651	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJ  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJ  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJ	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
652	[BUG]  [BUGGY]  irNode.setFileOverviewJsDoc(irNode.getFileOverviewJsDocHolder());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileOverviewJsDoc(irNode.getFileOverviewJsDocHolder());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileOverviewJsDoc(irNode.getFileOverviewJsDocHolder());	  if(irNode.getFileOverviewJsDocHolder()!=    null)    {    return    irNode.getFileOverviewJsDocHolder();    }    else    {    irFactory.handlePossibleFileOverviewJsDoc    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
653	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
654	[BUG]  [BUGGY]  return  errorReporter.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  errorReporter.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  errorReporter.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
655	[BUG]  [BUGGY]  return  rootNode.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
656	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
657	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
658	[BUG]  [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
659	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
660	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
661	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
662	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
663	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
664	[BUG]  [BUGGY]  return  irNode.getFileName().toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
665	[BUG]  [BUGGY]  return  irNode.getPath().toString();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPath().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPath().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
666	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder,  errorReporter);	  return    irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
667	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setPossibleFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
668	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
669	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(rootNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
670	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
671	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
672	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDoc);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewJsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewJsDoc);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
673	[BUG]  [BUGGY]  return  irFactory.getNamespaceJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNamespaceJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getNamespaceJsDocBuilder();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
674	[BUG]  [BUGGY]  return  irFactory.getNamespaceResolver();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNamespaceResolver();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getNamespaceResolver();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
675	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
676	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder(rootNode);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
677	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
678	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
679	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDoc(fileOverviewInfo,  irFactory);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFileOverviewJsDoc(fileOverviewInfo,  irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDoc(fileOverviewInfo,  irFactory);	  return    irNode.handleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
680	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
681	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
682	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
683	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  node);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
684	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
685	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
686	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(rootNode);	  return    irNode.handleFossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
687	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder(rootNode);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
688	[BUG]  [BUGGY]  return  irFactory.node.cloneTree();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.node.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.node.cloneTree();	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
689	[BUG]  [BUGGY]  return  irFactory.createTree(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTree(node);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
690	[BUG]  [BUGGY]  return  irFactory.createTree(node.cloneTree());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree(node.cloneTree());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createTree(node.cloneTree());	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
691	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
692	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
693	[BUG]  [BUGGY]  irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
694	[BUG]  [BUGGY]  irNode.setPossibleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setPossibleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setPossibleFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
695	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irFactory);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irFactory);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
696	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
697	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getFirstChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
698	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getLastChild()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
699	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDocHolder();	  return    irFactory.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
700	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(result);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(result);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(result);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
701	[BUG]  [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  result    =    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
702	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
703	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
704	[BUG]  [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getPossibleFileOverviewJsDoc(irNode);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
705	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
706	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  fileOverviewInfo);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
707	[BUG]  [BUGGY]  return  irFactory.getFileParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileParent();	  return    irFactory.getFile();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
708	[BUG]  [BUGGY]  return  irFactory.createAstRoot(irNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(irNode,  fileLevelJsDocBuilder);	  return    irFactory.createAstRoot(node);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
709	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
710	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
711	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDocBuilder(irNode);	  return    irNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
712	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node.getParent());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(node.getParent());	  return    irNode.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
713	[BUG]  [BUGGY]  return  irNode.getLineno(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno(),  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
714	[BUG]  [BUGGY]  return  irNode.getLineno(),  node.getCharno();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno(),  node.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno(),  node.getCharno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
715	[BUG]  [BUGGY]  return  irNode.getLineno(),  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno(),  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno(),  irFactory.handleFileOverviewJsDoc(irNode);	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
716	[BUG]  [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handlePossibleFileOverviewJsDoc(rootNode);	  return    irNode.handlePossibleFileOverviewJsDoc(irFactory);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
717	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    node.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
718	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
719	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJSDoc();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJSDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJSDoc();	  return    rootNodeJsDocBuilder.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
720	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    rootNodeJsDocBuilder.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
721	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(rootNode);	  return    irFactory.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
722	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
723	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
724	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
725	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder()  +  fileLevelJsDocBuilder;	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
726	[BUG]  [BUGGY]  return  irFactory.getFilePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFilePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFilePossibleFileOverviewJsDoc(node);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
727	[BUG]  [BUGGY]  return  irFactory.getFileForPossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileForPossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileForPossibleFileOverviewJsDoc(node);	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
728	[BUG]  [BUGGY]  return  irFactory.getFilePossibleFileOverviewJsDoc(node.getFile());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFilePossibleFileOverviewJsDoc(node.getFile());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFilePossibleFileOverviewJsDoc(node.getFile());	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
729	[BUG]  [BUGGY]  return  irFactory.getParentSegment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getParentSegment();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getParentSegment();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
730	[BUG]  [BUGGY]  return  irFactory.getParentOnce();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getParentOnce();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getParentOnce();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
731	[BUG]  [BUGGY]  return  irFactory.createPossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createPossibleFileOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
732	[BUG]  [BUGGY]  return  irFactory.createPossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createPossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createPossibleFileOverviewJsDoc();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
733	[BUG]  [BUGGY]  return  irFactory.createPossibleFileOverview(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createPossibleFileOverview(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createPossibleFileOverview(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
734	[BUG]  [BUGGY]  return  irFactory.createPossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createPossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createPossibleFileOverviewJSDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
735	[BUG]  [BUGGY]  irNode.setParentNode(node.getParent());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(node.getParent());	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
736	[BUG]  [BUGGY]  irNode.setParentNode(rootNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setParentNode(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(rootNode);	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
737	[BUG]  [BUGGY]  irNode.setName(node.getString());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.setName(node.getString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setName(node.getString());	  irNode.setParentNode(node);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
738	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  NodeUtil.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  NodeUtil.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  NodeUtil.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
739	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
740	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
741	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  templateNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  templateNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
742	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
743	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);	  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
744	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);	  irNode    =    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
745	[BUG]  [BUGGY]  return  irNode.getLastPossibleFile();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLastPossibleFile();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
746	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  rootNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
747	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
748	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo,  node);	  return    irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
