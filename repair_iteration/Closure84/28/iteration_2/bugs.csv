bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  irFactory.cloneTree();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(irNode);	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  return  irNode.getTree();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverviewJsDocBuilder();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  return  irNode.cloneFile();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.cloneFile();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.cloneFile();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileOverviewJsDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc();	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irNode  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(node);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.handleFossibleFileOverviewJsDoc(irFactory);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  result  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	result  =  irFactory.handleFossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDocBuilder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocBuilder();	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  return  node.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getFileOverviewJsDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDoc();	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(node);	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  return  irNodeJsDocBuilder;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNodeJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocBuilder;	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.rootNodeJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocBuilder;	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileLevelJsDocBuilder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileLevelJsDocBuilder();	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocBuilder();	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.fileLevelJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileLevelJsDocBuilder;	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  return  irFactory.getName();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getName();	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  return  irNode.getLocalName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getLocalName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLocalName();	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  return  irNode.getSourceName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getSourceName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getSourceName();	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getName()  :  null;	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.rootNodeJsDocHolder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.rootNodeJsDocHolder;	  return    rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  return  irNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNodeJsDocHolder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNodeJsDocHolder;	  return    rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileOverviewJsDocHolder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDocHolder();	  return    rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  return  irFactory.getFile();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFile();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFile();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFileOverviewJsDoc();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  return  irNode.getPossibleFile();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getPossibleFile();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getPossibleFile();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  return  irNode.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFile().getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().getParent();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  return  irNode.getFile().toString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFile().toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFile().toString();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDo  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDo  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDo	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  return  node.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getFileOverviewJsDocHolder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFileOverviewJsDocHolder();	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	if(irNode.getFileOverviewJsDocHolder()!=  null)  {  return  irNode.getFileOverviewJsDocHolder();  }  else  {  irFactory.handlePossibleFileOverviewJsDoc	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(irNode);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handleNossibleFileOverviewJsDoc(irNode);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  return  irNode.getNext();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getNext();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getNext();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  return  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLastChild();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  return  irFactory.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getParent();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  null;	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  return  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getFirstChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFirstChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.handlePossibleFileOverviewJsDoc(irFactory);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handlePossibleFileOverviewJsDoc(irFactory);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
65	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
66	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(comment);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(comment);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irNode  =  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode  =  irFactory.handleFileOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  return  irNode.handleFileOverviewJsDoc(irFactory);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.handleFileOverviewJsDoc(irFactory);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.handleFileOverviewJsDoc(irFactory);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.setFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.setFileOverviewJsDoc(irNode);	  return    irFactory;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFileOverviewJsDoc(irNode);	  return    irFactory;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.createAstRoot(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createAstRoot(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  return  node.getParent();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getParent();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder;	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  return  irNode.getNameNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getNameNode();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getNameNode();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJSDoc(irNode);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNodeOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
83	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverview();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.clonePossibleFileOverview();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.clonePossibleFileOverview();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  return  node.cloneTree();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNodeJsDocBuilder.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNodeJsDocBuilder.getName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getName();	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  return  node.getName();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getName();	  return    irNode.getName();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  return  irFactory.getFirstChild();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.getFirstChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.getFirstChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
89	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFirstChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNodeJsDocBuilder.getFirstChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFirstChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
90	[BUG]  [BUGGY]  return  rootNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNode.getFirstChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNode.getFirstChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
91	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.fileOverviewJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.fileOverviewJsDocBuilder;	  return    irFactory;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
93	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFileOverviewJsDoc();	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  rootNodeJsDocBuilder.getFileOverviewJsDocHolder();	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder();	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileLevelJsDocBuilder();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileLevelJsDocBuilder();	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  fileLevelJsDocBuilder;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  fileLevelJsDocBuilder;	  return    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  return  node.getFile();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  node.getFile();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  node.getFile();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
100	[BUG]  [BUGGY]  return  irNode.getFileName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileName();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
101	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
102	[BUG]  [BUGGY]  return  irNode.removeFirstChild();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.removeFirstChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.removeFirstChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
103	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
104	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
105	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.getFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
107	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.createFileOverviewJsDoc(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.createFileOverviewJsDoc(node);	  return    node;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
109	[BUG]  [BUGGY]  irNode.setParentNode(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  irNode.setParentNode(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	irNode.setParentNode(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNode);	  return    rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
111	[BUG]  [BUGGY]  return  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getLineno();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLineno();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
112	[BUG]  [BUGGY]  return  irNode.getLocation();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getLocation();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getLocation();	  return    irNode.getFile();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
113	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irNode.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
114	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);    [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	141	141	1	replace	return  irFactory.handleFileOverviewJsDocHolder(irNode);	  return    irNode.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
