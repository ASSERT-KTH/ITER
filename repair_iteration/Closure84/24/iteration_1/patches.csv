bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getReferenceName(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getReferenceName(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getReferenceName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileOverviewInfo);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  fileOverviewInfo);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  transformer);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  transformer);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  transformer);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  message);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  message);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  node);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  node);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  rootNodeJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  rootNodeJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  transformer);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  transformer);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  transformer);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileOverviewInfo);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileOverviewInfo);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getNext(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getNext(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getNext(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  sourceName);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  sourceName);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  sourceName);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getType(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getType(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getType(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileOverviewInfo);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter,  fileOverviewInfo);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  rootNodeJsDocHolder  =  node.getRootNode();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  sourceString,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  NodeTraversal.traverse(compiler,  node,  sourceString,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	NodeTraversal.traverse(compiler,  node,  sourceString,  errorReporter);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  node.getRootNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  rootNodeJsDocBuilder  =  node.getRootNode();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  rootNodeJsDocBuilder  =  node.getRootNode();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  Node  node  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  node  =  node.getFirstChild();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  node  =  node.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  Node  irNode  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  irNode  =  node.getParent();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  irNode  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  config.getRootNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  rootNodeJsDocHolder  =  config.getRootNode();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  rootNodeJsDocHolder  =  config.getRootNode();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  Node  node  =  node.getNext();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  node  =  node.getNext();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  node  =  node.getNext();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocHolder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocHolder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  rootNodeJsDocHolder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  rootNodeJsDocHolder,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  rootNodeJsDocHolder,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  rootNodeJsDocHolder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  rootNodeJsDocHolder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  templateNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  templateNode,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  templateNode,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  sourceString,  config,  errorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  sourceString,  config,  errorReporter,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  sourceString,  config,  errorReporter,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  fileLevelJsDocBuilder,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocHolder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocHolder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNodeJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  sourceName);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  sourceName);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  errorReporter,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  errorReporter,  config);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  errorReporter,  config);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  message);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  message);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  message);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  templateNode);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  templateNode);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getLineno(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getLineno(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getLineno(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  sourceName);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  sourceName);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  sourceName);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  null);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getReferenceName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  null);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  Node  node  =  node.getNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  node  =  node.getNode();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  node  =  node.getNode();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  Node  node  =  node.getAstRoot(sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  node  =  node.getAstRoot(sourceString);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  node  =  node.getAstRoot(sourceString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  Node  node  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  node  =  node.getParent();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  node  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  errorReporter);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  sourceName);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  sourceName);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  sourceName);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getParent(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getParent(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getParent(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getParent(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  templateNode,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSource(),  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSource(),  config,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSource(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  null);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getLineno(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  transformer);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  transformer);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  transformer);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  JSDOC);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  JSDOC);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter,  JSDOC);	  IRFactory    irFactory    =    new    IRFactory(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  transformer);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  transformer);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  transformer);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  config,  fileLevelJsDocBuilder,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  sourceString,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  NodeTraversal.traverse(compiler,  node,  sourceString,  config);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	NodeTraversal.traverse(compiler,  node,  sourceString,  config);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  TransformDispatcher());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  TransformDispatcher());  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	NodeTraversal.traverse(compiler,  node,  new  TransformDispatcher());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParent();  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	Node  rootNodeJsDocHolder  =  node.getParent();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]    config,  errorReporter);  Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	127	128	1	replace	NodeTraversal.traverse(compiler,  node,  this);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
