bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  newBlock);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(node,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(parentNode,  newBlock);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(parentNode,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(parentNode,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  return  Node.newString(type,  newBlock).replaceChild(bodyNode,  value);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  newBlock).replaceChild(bodyNode,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  newBlock).replaceChild(bodyNode,  value);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(this.assign,  newBlock);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(this.assign,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(this.assign,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(this.node,  newBlock);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(this.node,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(this.node,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  value);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  value);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(parent,  newBlock);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(parent,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(parent,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bufferNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bufferNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(bufferNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(bufferNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(bufferNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(bufferNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bufferNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bufferNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.bufferNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(irNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(value);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(value);	  return    Node.newString(type,    value).clonePropsFrom(value);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(value);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(value);	  return    Node.newString(type,    value).clonePropsFrom(value);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(this);	  return    Node.newString(type,    value).clonePropsFrom(value);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(bodyNode);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  return  Node.newString(type,  value).removeFlagsFrom(templateNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removeFlagsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removeFlagsFrom(templateNode);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this.bodyNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(this.bodyNode);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this.assign);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this.assign);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(this.assign);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(irNode);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(ret);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(ret);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(ret);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  return  Node.newStringNode(type,  value).toString();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newStringNode(type,  value).toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newStringNode(type,  value).toString();	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  return  Node.newString(value,  type).toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).toString();	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  return  Node.newString(type,  value)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value)+  1;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value)+  1;	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  return  Node.newString(type,  value);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value);	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  return  Node.newString(type,  value),  null,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value),  null,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value),  null,  null);	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  return  Node.newString(type,  value),  null,  null,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value),  null,  null,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value),  null,  null,  null);	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this.bodyNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(this.bodyNode);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  value);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  value);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.stringNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.stringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.stringNode);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.bodyNode,  null);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(irNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(irNode);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(prototypeNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(prototypeNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(prototypeNode);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this.assign);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(this.assign);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(this.assign);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(prototype);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(prototype);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(prototype);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  return  NodeUtil.newStringNode(type,  value);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  NodeUtil.newStringNode(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  NodeUtil.newStringNode(type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  return  transformDispatcher.newStringNode(type,  value);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  transformDispatcher.newStringNode(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  transformDispatcher.newStringNode(type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  value));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  value));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  value));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  return  newStringNode(type,  value,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  newStringNode(type,  value,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  newStringNode(type,  value,  null);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  return  newStringNode(type,  value);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  newStringNode(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  newStringNode(type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  value);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  NodeTraversal.traverse(compiler,  type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	NodeTraversal.traverse(compiler,  type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  return  Node.newStringNode(type,  value).clone();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newStringNode(type,  value).clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newStringNode(type,  value).clone();	  return    Node.newString(type,    value).clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  return  Node.newString(value,  type).clone();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clone();	  return    Node.newString(type,    value).clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  return  Node.newString(type,  value).reset();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).reset();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).reset();	  return    Node.newString(type,    value).clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  return  Node.newString(type,  value).remove();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).remove();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).remove();	  return    Node.newString(type,    value).clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(prototype);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(prototype);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(prototype);	  return    Node.newString(type,    value).clonePropsFrom(ret);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(null);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(null);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  return  Node.newString(type,  value).transform(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).transform(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).transform(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this,  config);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this,  config);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
50	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneTransform(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneTransform(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneTransform(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneIrPropsFrom(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneIrPropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneIrPropsFrom(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
52	[BUG]  [BUGGY]  return  Node.newStringNode(type,  value).clonePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newStringNode(type,  value).clonePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newStringNode(type,  value).clonePropsFrom(templateNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  Node  newBlock  =  Node.newString(type,  value).clonePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  Node  newBlock  =  Node.newString(type,  value).clonePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	Node  newBlock  =  Node.newString(type,  value).clonePropsFrom(templateNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(relativeNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(relativeNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(relativeNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.assign,  value);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.assign,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.assign,  value);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  return  Node.newString(type,  this.assign).clonePropsFrom(value);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  this.assign).clonePropsFrom(value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  this.assign).clonePropsFrom(value);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.reporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.reporter);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.reporter);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.report);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.report);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.report);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  return  Node.newString(value,  type).replaceChild(bodyNode,  newBlock);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).replaceChild(bodyNode,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).replaceChild(bodyNode,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  return  Node.newString(value).replaceChild(bodyNode,  newBlock);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value).replaceChild(bodyNode,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value).replaceChild(bodyNode,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  null);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock,  irNode);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(this,  newStringNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(this,  newStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(this,  newStringNode);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFunction(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneFunction(this);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFunction(this);	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this.bodyNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this.bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(this.bodyNode);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.childNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.childNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.childNode);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  return  Node.newString(value,  type).cloneFlagsFrom(templateNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).cloneFlagsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).cloneFlagsFrom(templateNode);	  return    Node.newString(type,    value).cloneFlagsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
69	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(bodyNode);	  return    Node.newString(type,    value).clonePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  StringTraversal());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  NodeTraversal.traverse(compiler,  new  StringTraversal());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	NodeTraversal.traverse(compiler,  new  StringTraversal());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  return  Node.newStringNode(type,  value);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newStringNode(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newStringNode(type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  return  node.newStringNode(type,  value);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  node.newStringNode(type,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  node.newStringNode(type,  value);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  return  Node.newString(type,  value).append('n');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).append('n');  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).append('n');	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(node,  false);	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
75	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(node,  null);	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
76	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(bufferNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(bufferNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(bufferNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(bufferNode,  newStringNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(bufferNode,  newStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(bufferNode,  newStringNode);	  return    Node.newString(type,    value).clonePropsFrom(bufferNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  return  Node.newString(value,  value).clonePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  value).clonePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  value).clonePropsFrom(templateNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  return  Node.newString(value,  value).clonePropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  value).clonePropsFrom(bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  value).clonePropsFrom(bodyNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  newStringNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(node,  newStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(node,  newStringNode);	  return    Node.newString(type,    value).clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(ret);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(ret);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(ret);	  return    Node.newString(type,    value).clonePropsFrom(ret);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
82	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneReporterFrom(ret);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneReporterFrom(ret);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneReporterFrom(ret);	  return    Node.newString(type,    value).clonePropsFrom(ret);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this.assign);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(this.assign);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(this.assign);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.apply);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.apply);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.apply);	  return    Node.newString(type,    value).clonePropsFrom(this.assign);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  return  Node.newString(value,  type).removePropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).removePropsFrom(bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).removePropsFrom(bodyNode);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  return  Node.newString(type,  value).addPropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).addPropsFrom(bodyNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).addPropsFrom(bodyNode);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(node);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(node);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  return  Node.newString(value,  type).removePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).removePropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).removePropsFrom(templateNode);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(sourceStringNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(sourceStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(sourceStringNode);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
90	[BUG]  [BUGGY]  return  Node.newString(type,  value).addPropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).addPropsFrom(templateNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).addPropsFrom(templateNode);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(value);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(value);	  return    Node.newString(type,    value).clonePropsFrom(value);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
92	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(n,  newStringNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(n,  newStringNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(n,  newStringNode);	  return    Node.newString(type,    value).clonePropsFrom(value);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
93	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(buffer,  type);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(buffer,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(buffer,  type);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
94	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bodyNode,  value);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bodyNode,  value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(bodyNode,  value);	  return    Node.newString(type,    value).removePropsFrom(bodyNode);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(sourceNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(sourceNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(sourceNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(positionNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(positionNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(positionNode);	  return    Node.newString(value,    type).clonePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
97	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.child);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.child);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.child);	  return    Node.newString(type,    value).clonePropsFrom(this.bodyNode);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
98	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(this,  new  String(value));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(this,  new  String(value));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(this,  new  String(value));	  return    Node.newString(type,    value).clonePropsFrom(this);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  return  Node.newString(type,  value).removeValue();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).removeValue();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removeValue();	  return    Node.newString(type,    value).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
100	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  StringBuffer());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  StringBuffer());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	NodeTraversal.traverse(compiler,  type,  new  StringBuffer());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneTree();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneTree();	  return    Node.newString(type,    value).clonePropsFrom(ret);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
103	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(child,  newBlock);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(child,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(child,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
104	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(this.bodyNode,  newBlock);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).replaceChild(this.bodyNode,  newBlock);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(this.bodyNode,  newBlock);	  return    Node.newString(type,    value).replaceChild(bodyNode,    newBlock);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
105	[BUG]  [BUGGY]  return  Node.newString(type,  value).addValue(value);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newStringNode(int  type,  String  value)  {    [BUGGY]  return  Node.newString(type,  value).addValue(value);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).addValue(value);	  return    Node.newString(type,    value).removePropsFrom(templateNode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
