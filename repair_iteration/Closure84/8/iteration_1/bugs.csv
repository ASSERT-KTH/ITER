bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Node.newString(type,  value).clone();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clone();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clone();	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(templateNode);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).cloneFlagsFrom(templateNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).cloneFlagsFrom(templateNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(bodyNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(bodyNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.assign);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.assign);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.assign);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(templateNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(templateNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this.bodyNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this.bodyNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(ret);  [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(ret);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(ret);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]    [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	  	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(templateNode);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(value,  type).clonePropsFrom(templateNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(value,  type).clonePropsFrom(templateNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  return  Node.newString(type,  value).toString();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).toString();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).toString();	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).replaceChild(bodyNode,  newBlock);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(bufferNode);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(bufferNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(bufferNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bodyNode);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).removePropsFrom(bodyNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).removePropsFrom(bodyNode);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(value);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(value);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(value);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
15	[BUG]  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  Node  newStringNode(int  type,  String  value)  {  [BUGGY]  return  Node.newString(type,  value).clonePropsFrom(this);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newStringNode  [RETURN_TYPE]  Node  int  type  String  value  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  sourceName  sourceString  value  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure84/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11704114719613057	1210	1210	1	replace	return  Node.newString(type,  value).clonePropsFrom(this);	return  Node.newString(type,  value).clonePropsFrom(templateNode);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
