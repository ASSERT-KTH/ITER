bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
2	[BUG] [BUGGY] Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { [BUGGY] Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); [BUGGY] Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	39	39	2	replace	
3	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { [BUGGY] [BUGGY] Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	39	39	2	add	
4	[BUG] [BUGGY] Field f = unsafeClass.getDeclaredField("theUnsafe"); [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); [BUGGY] Field f = unsafeClass.getDeclaredField("theUnsafe"); [BUGGY] f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	40	40	2	replace	
5	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); [BUGGY] [BUGGY] Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	40	40	2	add	
6	[BUG] [BUGGY] f.setAccessible(true); [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); [BUGGY] f.setAccessible(true); [BUGGY] final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	41	41	2	replace	
7	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); [BUGGY] [BUGGY] f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	41	41	2	add	
8	[BUG] [BUGGY] final Object unsafe = f.get(null); [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); [BUGGY] final Object unsafe = f.get(null); [BUGGY] final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { } [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	42	42	2	replace	
9	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); [BUGGY] [BUGGY] final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { } [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	42	42	2	add	
10	[BUG] [BUGGY] final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); [BUGGY] final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); [BUGGY] return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { }  [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	43	43	2	replace	
11	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static UnsafeAllocator create() {     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); [BUGGY] [BUGGY] final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { }  [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	43	43	2	add	
12	[BUG] [BUGGY] return new UnsafeAllocator() { [FE] AssertionFailedError [CONTEXT]     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); [BUGGY] return new UnsafeAllocator() { [BUGGY] @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { }   [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	44	44	2	replace	
13	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     try { Class<?> unsafeClass = Class.forName("sun.misc.Unsafe"); Field f = unsafeClass.getDeclaredField("theUnsafe"); f.setAccessible(true); final Object unsafe = f.get(null); final Method allocateInstance = unsafeClass.getMethod("allocateInstance", Class.class); [BUGGY] [BUGGY] return new UnsafeAllocator() { @Override @SuppressWarnings("unchecked") public <T> T newInstance(Class<T> c) throws Exception { return (T) allocateInstance.invoke(unsafe, c); } }; } catch (Exception ignored) { }   [CLASS] UnsafeAllocator 1 2 3 4 [METHOD] create [RETURN_TYPE] UnsafeAllocator  [VARIABLES] Field f boolean Class c unsafeClass Object unsafe Method allocateInstance getConstructorId newInstance Exception ignored int constructorId  	projects/Gson8/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java	0.8164965809277261	44	44	2	add	
