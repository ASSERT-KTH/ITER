bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  {    [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	add	if((  _numTypesValid  &  NR_LONG)  ==  0)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	9	replace
2	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0)  {  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  {    [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	replace	if((  _numTypesValid  &  NR_LONG)  ==  0)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	9	replace
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  {    [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	add	if(_numTypesValid  ==  NR_LONG)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	8	replace
4	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  {    [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	replace	if(_numTypesValid  ==  NR_LONG)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	8	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        JsonParseException  [CONTEXT]  {    [BUGGY]    [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	replace	  	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	non-compiled	[CE]  illegal  start  of  type	71	None	replace
6	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	9	replace
7	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    int  result  =  (int)  _numberLong;  if  (((long)  result)  !=  _numberLong)  {  _reportError( "Numeric  value  ( "+getText()+ ")  out  of  range  of  int ");  }  _numberInt  =  result;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_INT.compareTo(_numberBigInt)  >  0  ||  BI_MAX_INT.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  [CLASS]  ParserBase  [METHOD]  convertNumberToInt  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	883	883	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {	if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  	compilable	  [FE]  JsonParseException  	71	9	replace
