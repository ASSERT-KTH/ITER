projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%ddigits]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%d]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%ddigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawLen);String.format("[Integerwith%dints]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith("-")||rawNum.startsWith("-")){thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawLen);String.format("[Integerwith%dvalues]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%d]",rawNum);String.format("[Integerwith%d]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%d]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawLen]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum);String.format("[Integerwith%s]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen);String.format("[Integerwith%s]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen);String.format(",[Integerwith%s]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,rawLen);String.format("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,rawLen);JsonTokent=newJsonToken("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen);String.format("[Integerwith%drawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%ddigits]",rawNum);String.format("[Integerwith%ddigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawLen);String.format("[Integerwith%dDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofdigits]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofints]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%ddigits]",rawNum);Stringdigits=String.format("[Integerwith%ddigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%d]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawLen);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,4);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,rawLen);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.FIELD_NAME;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.START_ARRAY;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum.startsWith("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum.startsWith("-")){returnrawNum.toLowerCase();}else{returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum.toLowerCase();}else{returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum.startsWith("-")){if(rawNum.startsWith("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605||rawNum.startsWith("-")){thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith(".java")||rawNum.startsWith(".java")){thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawLen]",rawNum);String.format("[Integerwith%drawLen]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605JsonTokent=newJsonToken("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605Stringt=newJsonToken("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);String.format("[Integerwith%s]",rawNum,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);String.format("[Integerwith%s]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);String.format("[Integerwith%s]",rawNum,1));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofdigits]",rawLen);String.format("[Integerwith%sofdigits]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum);String.format("[Integerwithlength]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605||rawNum.startsWith("-")){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605||rawNum.startsWith("-")){returnrawNum;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith(".java")||rawNum.startsWith(".java")){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,rawNum);String.format("[Integerwith%s]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,rawNum);String.format("[Integerwith%s]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,4);String.format("[Integerwith%s]",rawNum,4);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,4);String.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawLen]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();StringrawNum=_parseString(rawNum.substring(0,rawLen).trim());
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();StringrawNum=(String)rawNum.substring(0,rawLen).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();StringrawNum=_parseString(rawNum.substring(0,rawLen).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();StringrawNum=_parseString(rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();StringrawNum=_parseString(rawNum.substring(0,rawLen));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.VALUE_STRING,rawNum;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawLen);String.format("[Integerwith%drawNum]",rawLen,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawLen);String.format(",[Integerwith%drawNum]",rawLen,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofints]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofints]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofints]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dints]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dints]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofdigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofdigits]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofdigits]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dvalues]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dvalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawLen);String.format("[Integerwith%sDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawLen);String.format("[Integerwithlength]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawLen);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawLen+1);String.format("[Integerwith%dvalues]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);StringrawNum=_parseString(rawNum.substring(0,rawLen));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);StringrawNum=_parseString(rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);StringrawNum=(String)rawNum.substring(0,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);StringrawNum=_currToken.substring(0,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);intrawLen=rawNum.length();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%d]",rawLen);String.format("[Integerwith%d]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen-1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen-2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum,rawLen);String.format("[Integerwith%dints]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawLen,rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]"+rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawNum+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawLen+2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum,rawLen);String.format("[Integerwith%drawNum]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum,rawLen);JsonTokent=newJsonToken("[Integerwith%drawNum]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,3);String.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,3);String.format("[Integerwith%s]",rawNum,4);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,3);String.format("[Integerwith%s]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawNum);String.format("[Integerwith%dDESC]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawLen]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofrawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawLen,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawLen);String.format("[Integerwith%svalues]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dDESC]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawLen);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dDESC]",rawLen+1);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%d]",rawLen);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605Stringdigits=String.format("[Integerwith%ddigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605Stringdigits=String.format("[Integerwith%ddigits]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).toLowerCase();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toUpperCase();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofints]",rawNum);String.format("[Integerwith%sofints]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawNum);String.format("[Integerwith%dvalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%drawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%srawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,2);String.format("[Integerwith%s]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,2);String.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,2);String.format("[Integerwith%s]",rawNum,2));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format(",[Integerwith%s]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format(",[Integerwith%s]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen+2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum);String.format("[Integerwith%dints]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawLen);String.format("[Integerwith%srawNum]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.START_OBJECT;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.END_OBJECT;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,4);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%dDESC]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,0,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum);String.format("[Integerwith%drawNum]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen+1).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(1,rawLen).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim()+1;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%ddigits]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%ddigits]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawNum);String.format("[Integerwith%svalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwithlength]",rawNum,rawLen);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawNum,1);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawNum);String.format("[Integerwith%sDESC]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dvalues]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen+1);String.format("[Integerwith%drawNum]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen+1);String.format(",[Integerwith%drawNum]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%d]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%d]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen+1);String.format("[Integerwith%s]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen+1);String.format(",[Integerwith%s]",rawLen+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen);}else{returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){rawLen=rawNum.length();}else{returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen);}else{thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen);}else{thrownewJsonParseException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen).trim();}else{returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")){returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")){returnrawNum.substring(0,rawLen).trim();}else{returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")){rawLen=rawNum.substring(0,rawLen);}else{returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]"+rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]".,rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.FIELD_NAME+1;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen-).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.VALUE_STRING+rawNum;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawNum+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofintegers]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("Integerwithlength]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,4);String.format("[Integerwith%s]",rawNum,2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.START_ARRAY+rawNum;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase(Locale.ENGLISH);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("Integerwith%s]",rawNum,1);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,1);String.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith(".-")||rawNum.startsWith(".-")){thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith(".0")||rawNum.startsWith(".0")){thrownewIllegalArgumentException("");}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawLen);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawNum]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith(".-")||rawNum.startsWith(".-")){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith("-")||rawNum.startsWith("-)){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawNum.startsWith("-")||rawNum.startsWith(".-")){returnrawLen;}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605Stringt=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%sDESC]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dDESC]",rawNum);JsonTokent=getCurrentToken();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%drawNum]".length(),rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%dints]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum!=null){if(rawNum.startsWith("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum!=null){if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();if(rawNum!=null){if(rawNum.equals("-")||rawNum.equals("-")){returnrawNum.toLowerCase();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.toLowerCase();_currToken=JsonToken.START_ARRAY;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%sDESC]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofrawLen]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.VALUE_STRING+1;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605_currToken=JsonToken.VALUE_NULL;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sDESC]",rawNum,1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){returnrawNum.substring(0,rawLen);}else{returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){StringrawNum=rawNum.substring(0,rawLen);}else{returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen);if(rawNum.startsWith("-")){if(rawLen<2){returnrawNum.substring(0,rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawLen);_currToken=JsonToken.VALUE_STRING;
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%sofinteger]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen+1);String.format("[Integerwith%drawNum]",rawLen+1));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawLen]",rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%svalues]",rawNum+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen+1);String.format("[Integerwith%s]",rawLen+1));
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwithlength]",rawNum+1);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")||rawNum.startsWith("-")){returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.indexOf("-")<0){returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen).trim();if(rawNum.startsWith("-")||rawLen<2){returnrawNum.substring(0,rawLen).trim();}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,rawLen);_currToken.print("[Integerwith%drawNum]",rawLen,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%srawLen]",rawNum,rawLen);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%drawNum]",rawLen,4);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605if(rawLen>0){returnString.format("[Integerwith%drawNum]",rawLen);}
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawLen+2);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605Stringdigits=String.format("[Integerwith%dvalues]",rawNum);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605String.format("[Integerwith%s]",rawNum,3);
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnrawNum.substring(0,rawLen-1).trim();
projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java605returnString.format("[Integerwith%s]",rawNum,3);Strings=String.format("[Integerwith%s]",rawNum,3);
