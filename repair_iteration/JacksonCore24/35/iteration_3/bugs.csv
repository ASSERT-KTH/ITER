bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_inputPtr    >=    _inputEnd)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_inputPtr    >=    _inputEnd)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	24	None	replace
3	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_inputPtr    >=    _inputEnd)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	24	None	replace
4	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT,  _numberNegative));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT,  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  NR_INT,  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
5	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  _numberNegative));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberInt,  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
6	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  NR_INT));  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  NR_INT));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
7	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInput,  NR_INT));  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInput,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInput,  NR_INT));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
8	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT,  value));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  NR_INT,  value));	  Context.report(JSError.make(_parsingContext,    _numberInt,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
9	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  value));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberInt,  value));	  Context.report(JSError.make(_parsingContext,    _numberInt,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
10	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
11	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
12	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
13	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
14	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)!=  0));  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)!=  0));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)!=  0));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
15	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  1));  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  1));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  1));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
16	[BUG]  [BUGGY]  ((  _numTypesValid  +  NR_INT)  ==  0));  [CE]  not  a  statement  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  +  NR_INT)  ==  0));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  +  NR_INT)  ==  0));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
17	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
18	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
19	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
20	[BUG]  [BUGGY]  if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
21	[BUG]  [BUGGY]  validateNumber(_numTypesValid);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(_numTypesValid);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(_numTypesValid);	  validateNumber(NR_INT);    	non-compiled	[CE]  ';'  expected	20	None	replace
22	[BUG]  [BUGGY]  validateNumber(_numberTypesValid);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(_numberTypesValid);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(_numberTypesValid);	  validateNumber(NR_INT);    	non-compiled	[CE]  ';'  expected	20	None	replace
23	[BUG]  [BUGGY]  validateNumber(NR_INT,  _numTypesValid);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(NR_INT,  _numTypesValid);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(NR_INT,  _numTypesValid);	  validateNumber(NR_INT);    	non-compiled	[CE]  ';'  expected	20	None	replace
24	[BUG]  [BUGGY]  Context.report(JSError.make(NR_INT,  _numberNegative));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(NR_INT,  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(NR_INT,  _numberNegative));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
25	[BUG]  [BUGGY]  Context.report(JSError.make(_numberInt,  NR_INT));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberInt,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberInt,  NR_INT));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
26	[BUG]  [BUGGY]  Context.report(JSError.make(_numberNegative,  NR_UNKNOWN));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberNegative,  NR_UNKNOWN));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberNegative,  NR_UNKNOWN));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
27	[BUG]  [BUGGY]  Context.report(JSError.make(NR_UNKNOWN,  _numTypesValid));  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(NR_UNKNOWN,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(NR_UNKNOWN,  _numTypesValid));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
28	[BUG]  [BUGGY]  _numberInt  =  convertNumberToBoolean();  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _numberInt  =  convertNumberToBoolean();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_numberInt  =  convertNumberToBoolean();	  convertNumberToBoolean();    	non-compiled	[CE]  ';'  expected	1	None	replace
29	[BUG]  [BUGGY]  int  _numberInt  =  convertNumberToBoolean();  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  int  _numberInt  =  convertNumberToBoolean();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	int  _numberInt  =  convertNumberToBoolean();	  convertNumberToBoolean();    	non-compiled	[CE]  ';'  expected	1	None	replace
30	[BUG]  [BUGGY]  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Context  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Context	8	None	replace
31	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	8	None	replace
32	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseIntValue(NR_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  _parseIntValue(NR_INT);  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  _parseIntValue(NR_INT);  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  _parseIntValue(NR_INT);  }	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
36	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_BIGINT))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	4	None	replace
37	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_currInputProcessed    >    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
38	[BUG]  [BUGGY]  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_currInputProcessed    >    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
39	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_currInputProcessed  >  0))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_currInputProcessed  >  0))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_currInputProcessed  >  0))  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_currInputProcessed    >    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid  +  1));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid  +  1));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid  +  1));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
41	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_INIT_VALUE,  _numTypesValid));  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_INIT_VALUE,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_INIT_VALUE,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  NR_INT));  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_MILLIS,  NR_INT));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
43	[BUG]  [BUGGY]  Context.report(JSError.make(NR_INT,  _numTypesValid));  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(NR_INT,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(NR_INT,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
44	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  return    _parseIntValue();    	non-compiled	[CE]  ';'  expected	14	None	replace
45	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  return    _parseIntValue();    	non-compiled	[CE]  ';'  expected	14	None	replace
46	[BUG]  [BUGGY]  if(_numberNegative  >  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numberNegative  >  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numberNegative  >  0)  {  return  _parseIntValue();  }	  return    _parseIntValue();    	non-compiled	[CE]  ';'  expected	14	None	replace
47	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  _numTypesValid));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberInt,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberInt,  _numTypesValid));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
48	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  NR_INT));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberNegative,  NR_INT));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
49	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  NR_INT,  _numTypesValid));  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  NR_INT,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  NR_INT,  _numTypesValid));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
50	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid,  NR_INT));  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid,  NR_INT));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
51	[BUG]  [BUGGY]  _parseInt(NR_INT);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseInt(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(NR_INT);	  _parseInt();    	non-compiled	[CE]  ';'  expected	10	None	replace
52	[BUG]  [BUGGY]  _reportError( "Can  not  parse  int  value ");  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _reportError( "Can  not  parse  int  value ");  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportError( "Can  not  parse  int  value ");	  _parseInt();    	non-compiled	[CE]  ';'  expected	10	None	replace
53	[BUG]  [BUGGY]  validateNumber(_numberInt,  value);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(_numberInt,  value);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(_numberInt,  value);	  validateNumber(_numberInt);    	non-compiled	[CE]  ';'  expected	22	None	replace
54	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_UNKNOWN))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
55	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	25	None	replace
56	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	25	None	replace
57	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	25	None	replace
58	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberInt);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentName(_numberInt);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberInt);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
59	[BUG]  [BUGGY]  _parsingContext.setCurrentName(NR_INT);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentName(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(NR_INT);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
60	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberInputRow);  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentName(_numberInputRow);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberInputRow);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
61	[BUG]  [BUGGY]  _reportError( "Can  not  parse  int  value.  Invalid  number: "  +  _numTypesValid);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _reportError( "Can  not  parse  int  value.  Invalid  number: "  +  _numTypesValid);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportError( "Can  not  parse  int  value.  Invalid  number: "  +  _numTypesValid);	  _reportError(   "Can    not    parse    int    value.   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
62	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }	  _parseNumberValue();    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumberValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _parseNumberValue();    	non-compiled	[CE]  ';'  expected	13	None	replace
64	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _parseNumberValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _parseNumberValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  _parseNumberValue();  }	  _parseNumberValue();    	non-compiled	[CE]  ';'  expected	13	None	replace
65	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  ';'  expected	5	None	replace
69	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _reportUnsupportedOperation();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  ';'  expected	5	None	replace
70	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  ';'  expected	5	None	replace
71	[BUG]  [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  value);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  value);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(JsonToken.VALUE_NUMBER_INT,  value);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
72	[BUG]  [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  _numTypesValid);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  _numTypesValid);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(JsonToken.VALUE_NUMBER_INT,  _numTypesValid);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
73	[BUG]  [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  values);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT,  values);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(JsonToken.VALUE_NUMBER_INT,  values);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
74	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }	  _parseFloatValue();    	non-compiled	[CE]  ';'  expected	12	None	replace
75	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _parseFloatValue();    	non-compiled	[CE]  ';'  expected	12	None	replace
76	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  NR_INT));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  NR_INT));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
77	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
78	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
79	[BUG]  [BUGGY]  _parsingContext.setCurrentIndex(NR_INT);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentIndex(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentIndex(NR_INT);	  _parsingContext.setCurrentName(_numberBigInteger);    	non-compiled	[CE]  ';'  expected	31	None	replace
80	[BUG]  [BUGGY]  ||  _numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||  _numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||  _numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  Context.reportCodeChange();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  0)  {  Context.reportCodeChange();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  0)  {  Context.reportCodeChange();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
82	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  Context.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  Context.reportCodeChange();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  Context.reportCodeChange();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_UNKNOWN));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_UNKNOWN));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numTypesValid,  NR_UNKNOWN));	  Context.report(JSError.make(_numTypesValid,    NR_INT));    	non-compiled	[CE]  ';'  expected	17	None	replace
84	[BUG]  [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_DOUBLE));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_DOUBLE));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numTypesValid,  NR_DOUBLE));	  Context.report(JSError.make(_numTypesValid,    NR_INT));    	non-compiled	[CE]  ';'  expected	17	None	replace
85	[BUG]  [BUGGY]  _parsingContext.setCurrentIndex(_numberInputCol);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentIndex(_numberInputCol);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentIndex(_numberInputCol);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
86	[BUG]  [BUGGY]  _parsingContext.setCurrentLength(_numberInputCol);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentLength(_numberInputCol);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentLength(_numberInputCol);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
87	[BUG]  [BUGGY]  _parsingContext.setCurrentIndex(-1);  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentIndex(-1);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentIndex(-1);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
88	[BUG]  [BUGGY]  _reportError( "Can  not  parse  int  value.  Please  check  that  the  NR_INT  is  not  an  int  value. ");  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _reportError( "Can  not  parse  int  value.  Please  check  that  the  NR_INT  is  not  an  int  value. ");  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportError( "Can  not  parse  int  value.  Please  check  that  the  NR_INT  is  not  an  int  value. ");	  _reportError(   "Can    not    parse    int    value.   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
89	[BUG]  [BUGGY]  _throwInternal();  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _throwInternal();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_throwInternal();	  _reportError(   "Can    not    parse    int    value.   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
90	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
91	[BUG]  [BUGGY]  _parseIntValue(NR_INT,  value);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseIntValue(NR_INT,  value);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(NR_INT,  value);	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
92	[BUG]  [BUGGY]  _parseIntValue(NR_INT  +  1);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseIntValue(NR_INT  +  1);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(NR_INT  +  1);	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
93	[BUG]  [BUGGY]  _parseIntValue(NR_UNKNOWN);  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseIntValue(NR_UNKNOWN);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(NR_UNKNOWN);	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
94	[BUG]  [BUGGY]  Context.report(JSError.make(_numberNegative,  _numTypesValid));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberNegative,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberNegative,  _numTypesValid));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
95	[BUG]  [BUGGY]  Context.report(JSError.make(NUMBER_INT,  _numTypesValid));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(NUMBER_INT,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(NUMBER_INT,  _numTypesValid));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
96	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
97	[BUG]  [BUGGY]  if(_intLength  >  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_intLength  >  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_intLength  >  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
98	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
99	[BUG]  [BUGGY]  _parseNumberValue(NR_INT);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseNumberValue(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseNumberValue(NR_INT);	  _parseNumberValue();    	non-compiled	[CE]  ';'  expected	13	None	replace
100	[BUG]  [BUGGY]  _parsingContext.setCurrentIndex(_numberBigInt);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentIndex(_numberBigInt);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentIndex(_numberBigInt);	  _parsingContext.setCurrentName(_numberBigInteger);    	non-compiled	[CE]  ';'  expected	31	None	replace
101	[BUG]  [BUGGY]  validateNumber(_numberInt,  NR_INT);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(_numberInt,  NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(_numberInt,  NR_INT);	  validateNumber(_numberInt);    	non-compiled	[CE]  ';'  expected	22	None	replace
102	[BUG]  [BUGGY]  validateNumber(NR_BIGINT);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(NR_BIGINT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(NR_BIGINT);	  validateNumber(_numberInt);    	non-compiled	[CE]  ';'  expected	22	None	replace
103	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_currInputProcessed    >    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  Context.report(JSError.make(_ioContext,  _numberNegative));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_ioContext,  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_ioContext,  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
105	[BUG]  [BUGGY]  return  _parseIntValue(NR_INT);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  return  _parseIntValue(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	return  _parseIntValue(NR_INT);	  return    _parseIntValue();    	non-compiled	[CE]  ';'  expected	14	None	replace
106	[BUG]  [BUGGY]  _parseBigIntegerValue();  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseBigIntegerValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseBigIntegerValue();	  _parseFloatValue();    	non-compiled	[CE]  ';'  expected	12	None	replace
107	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _currentMessage(),  _numberNegative));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _currentMessage(),  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _currentMessage(),  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
108	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _currentName(),  _numberNegative));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _currentName(),  _numberNegative));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _currentName(),  _numberNegative));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
109	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_BIGINT))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	4	None	replace
110	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_BIGINT))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	4	None	replace
111	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_BIGINT))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	4	None	replace
112	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  <  _inputEnd)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  <  _inputEnd)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  <  _inputEnd)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_inputPtr    >=    _inputEnd)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	24	None	replace
113	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_LONG)  ==  0));  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_LONG)  ==  0));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_LONG)  ==  0));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
114	[BUG]  [BUGGY]  ((  _intLength  &  NR_INT)  ==  0));  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _intLength  &  NR_INT)  ==  0));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _intLength  &  NR_INT)  ==  0));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
115	[BUG]  [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT  +  1);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT  +  1);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(JsonToken.VALUE_NUMBER_INT  +  1);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
116	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
117	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_currInputRow  ==  NR_INT))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_currInputRow  ==  NR_INT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_currInputRow  ==  NR_INT))  {  return  _parseIntValue();	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
119	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value.length));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value.length));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value.length));	  Context.report(JSError.make(_parsingContext,    _numberInt,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
120	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  0,  value));	  Context.report(JSError.make(_parsingContext,    _numberInt,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
121	[BUG]  [BUGGY]  validateNumber(NR_INT  +  1);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(NR_INT  +  1);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(NR_INT  +  1);	  validateNumber(NR_INT);    	non-compiled	[CE]  ';'  expected	20	None	replace
122	[BUG]  [BUGGY]  validateNumber(NR_UNKNOWN);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  validateNumber(NR_UNKNOWN);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(NR_UNKNOWN);	  validateNumber(NR_INT);    	non-compiled	[CE]  ';'  expected	20	None	replace
123	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _numTypesValid));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberNegative,  _numTypesValid));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
124	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  ctxt,  _numberNegative,  _numTypesValid));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  ctxt,  _numberNegative,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  ctxt,  _numberNegative,  _numTypesValid));	  Context.report(JSError.make(ctxt,    _numberNegative,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	19	None	replace
125	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_INVALID_NR_INT,  _numTypesValid));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_INVALID_NR_INT,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_INVALID_NR_INT,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
126	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_UNKNOWN))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
127	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)&&(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_UNKNOWN))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
128	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_UNKNOWN))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
129	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_INVALID_KEY,  _numTypesValid));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_INVALID_KEY,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_INVALID_KEY,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
130	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_INVALID_ARRAY,  _numTypesValid));  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_INVALID_ARRAY,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_INVALID_ARRAY,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
131	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_INVALID_MILLIS,  _numTypesValid));  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR_INVALID_MILLIS,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_INVALID_MILLIS,  _numTypesValid));	  Context.report(JSError.make(ERROR_MILLIS,    _numTypesValid));    	non-compiled	[CE]  ';'  expected	9	None	replace
132	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    Context.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	8	None	replace
133	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  return  0;  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  return  0;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseFloatValue();  }  else  {  return  0;  }	  _parseFloatValue();    	non-compiled	[CE]  ';'  expected	12	None	replace
134	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();	  ||(_numTypesValid    ==    NR_UNKNOWN)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_BIGINT))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_BIGINT))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	4	None	replace
136	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _tokenInputEnd));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _tokenInputEnd));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberNegative,  _tokenInputEnd));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
137	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _nameCopied));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative,  _nameCopied));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberNegative,  _nameCopied));	  Context.report(JSError.make(_parsingContext,    _numberNegative));    	non-compiled	[CE]  ';'  expected	28	None	replace
138	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  _intLength));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  _intLength));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  _intLength));	  Context.report(JSError.make(_parsingContext,    _numberInt,    _numberNegative));    	non-compiled	[CE]  ';'  expected	29	None	replace
139	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  NR_DOUBLE));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  NR_DOUBLE));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  NR_DOUBLE));	  Context.report(JSError.make(_parsingContext,    _numberInt,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
140	[BUG]  [BUGGY]  Context.report(JSError.make(_numberNegative,  value));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberNegative,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberNegative,  value));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
141	[BUG]  [BUGGY]  Context.report(JSError.make(_numberInt,  _nameCopied));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberInt,  _nameCopied));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberInt,  _nameCopied));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
142	[BUG]  [BUGGY]  Context.report(JSError.make(_numberInt,  value));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numberInt,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberInt,  value));	  Context.report(JSError.make(_numberNegative,    NR_INT));    	non-compiled	[CE]  ';'  expected	18	None	replace
143	[BUG]  [BUGGY]  Context.report(JSError.make(Math.min(_numTypesValid,  NR_INT)));  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(Math.min(_numTypesValid,  NR_INT)));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(Math.min(_numTypesValid,  NR_INT)));	  Context.report(JSError.make(_numTypesValid,    NR_INT));    	non-compiled	[CE]  ';'  expected	17	None	replace
144	[BUG]  [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_INT,  value));  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_INT,  value));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numTypesValid,  NR_INT,  value));	  Context.report(JSError.make(_numTypesValid,    NR_INT));    	non-compiled	[CE]  ';'  expected	17	None	replace
145	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR,  _numTypesValid));  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  Context.report(JSError.make(ERROR,  _numTypesValid));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR,  _numTypesValid));	  Context.report(JSError.make(_numTypesValid,    NR_INT));    	non-compiled	[CE]  ';'  expected	17	None	replace
146	[BUG]  [BUGGY]  _parseFloatValue(NR_INT);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseFloatValue(NR_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseFloatValue(NR_INT);	  _parseIntValue(NR_INT);    	non-compiled	[CE]  ';'  expected	11	None	replace
147	[BUG]  [BUGGY]  _reportError( "Can  not  parse  int  value.  Expected  by  default. ");  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _reportError( "Can  not  parse  int  value.  Expected  by  default. ");  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportError( "Can  not  parse  int  value.  Expected  by  default. ");	  _reportError(   "Can    not    parse    int    value.   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
148	[BUG]  [BUGGY]  reportError( "Can  not  parse  int  value. ");  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  reportError( "Can  not  parse  int  value. ");  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	reportError( "Can  not  parse  int  value. ");	  _reportError(   "Can    not    parse    int    value.   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
149	[BUG]  [BUGGY]  _parseIntValue(JsonToken.VALUE_NUMBER_INT);  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseIntValue(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(JsonToken.VALUE_NUMBER_INT);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
150	[BUG]  [BUGGY]  _parseIntValue(JsonToken.VALUE_NUMBER_INT,  value);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseIntValue(JsonToken.VALUE_NUMBER_INT,  value);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(JsonToken.VALUE_NUMBER_INT,  value);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
151	[BUG]  [BUGGY]  _parseFloat(JsonToken.VALUE_NUMBER_INT);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parseFloat(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseFloat(JsonToken.VALUE_NUMBER_INT);	  _parseInt(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  ';'  expected	27	None	replace
152	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _intLength;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
153	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
154	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _parsingContext.setCurrentName(_numberInputCol);    	non-compiled	[CE]  ';'  expected	30	None	replace
155	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberBigDecimal);  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentName(_numberBigDecimal);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberBigDecimal);	  _parsingContext.setCurrentName(_numberBigInteger);    	non-compiled	[CE]  ';'  expected	31	None	replace
156	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberBigInt);  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  _parsingContext.setCurrentName(_numberBigInt);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberBigInt);	  _parsingContext.setCurrentName(_numberBigInteger);    	non-compiled	[CE]  ';'  expected	31	None	replace
157	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_currInputProcessed    >    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
158	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  &  NR_INT)  ==  0));  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  &  NR_INT)  ==  0));  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  &  NR_INT)  ==  0));	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
159	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  <  0)||(_numTypesValid  &  NR_INT)>  0);  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  <  0)||(_numTypesValid  &  NR_INT)>  0);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  <  0)||(_numTypesValid  &  NR_INT)>  0);	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
160	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)>  0);  [CE]  not  a  statement  [FE]                          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)>  0);  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  &  NR_INT)>  0);	  ((    _numTypesValid    &    NR_INT)    ==    0));    	non-compiled	[CE]  not  a  statement	16	None	replace
161	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();  }  [CE]  not  a  statement  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?      [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();  }  [BUGGY]      }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)  ||(_numTypesValid  >>  NR_UNKNOWN))  {  return  _parseIntValue();  }	  ((    _numTypesValid    &    NR_INT)    ==    0)||(_numTypesValid    >=    NR_UNKNOWN))    {    return    _parseIntValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
