bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  convertNumberToBoolean();  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  convertNumberToBoolean();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	convertNumberToBoolean();	  convertNumberToInt();    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_UNKNOWN))  {  return  _parseIntValue();	      	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  [CE]  not  a  statement  [FE]                  JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0)||(_numTypesValid  >=  NR_BIGINT))  {  return  _parseIntValue();	      	non-compiled	[CE]  not  a  statement	4	None	replace
5	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportUnsupportedOperation();	  transformNumberToInt();    	non-compiled	[CE]  ';'  expected	6	None	replace
6	[BUG]  [BUGGY]  _reportError( "Can  not  parse  int  value. ");  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _reportError( "Can  not  parse  int  value. ");  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_reportError( "Can  not  parse  int  value. ");	  transformNumberToInt();    	non-compiled	[CE]  ';'  expected	6	None	replace
7	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
8	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  Context.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
9	[BUG]  [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ERROR_MILLIS,  _numTypesValid));	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
10	[BUG]  [BUGGY]  _parseInt();  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parseInt();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt();	  _parseIntValue();    	non-compiled	[CE]  ';'  expected	2	None	replace
11	[BUG]  [BUGGY]  _parseIntValue(NR_INT);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parseIntValue(NR_INT);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseIntValue(NR_INT);	  _parseIntValue();    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  _parseFloatValue();  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parseFloatValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseFloatValue();	  _parseIntValue();    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  _parseNumberValue();  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parseNumberValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseNumberValue();	  transformNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	3	None	replace
14	[BUG]  [BUGGY]  return  _parseIntValue();  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  return  _parseIntValue();  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	return  _parseIntValue();	      	non-compiled	[CE]  ';'  expected	4	None	replace
15	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_currInputProcessed  >  0)  {  return  _parseIntValue();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
16	[BUG]  [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0));  [CE]  not  a  statement  [FE]                  JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  ((  _numTypesValid  &  NR_INT)  ==  0));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	((  _numTypesValid  &  NR_INT)  ==  0));	      	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_INT));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(_numTypesValid,  NR_INT));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numTypesValid,  NR_INT));	  convertNumberToInt();    	non-compiled	[CE]  ';'  expected	1	None	replace
18	[BUG]  [BUGGY]  Context.report(JSError.make(_numberNegative,  NR_INT));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(_numberNegative,  NR_INT));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_numberNegative,  NR_INT));	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
19	[BUG]  [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(ctxt,  _numberNegative,  _numTypesValid));	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
20	[BUG]  [BUGGY]  validateNumber(NR_INT);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  validateNumber(NR_INT);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(NR_INT);	  transformNumberToInt();    	non-compiled	[CE]  ';'  expected	6	None	replace
21	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  value));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  value));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  value));	  convertNumberToInt();    	non-compiled	[CE]  ';'  expected	1	None	replace
22	[BUG]  [BUGGY]  validateNumber(_numberInt);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  validateNumber(_numberInt);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	validateNumber(_numberInt);	  transformNumberToInt();    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  return  _parseIntValue();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
25	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
26	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _intLength;  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
27	[BUG]  [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parseInt(JsonToken.VALUE_NUMBER_INT);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parseInt(JsonToken.VALUE_NUMBER_INT);	  _parseIntValue();    	non-compiled	[CE]  ';'  expected	2	None	replace
28	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberNegative));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberNegative));	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
29	[BUG]  [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  _numberNegative));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  Context.report(JSError.make(_parsingContext,  _numberInt,  _numberNegative));  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	Context.report(JSError.make(_parsingContext,  _numberInt,  _numberNegative));	  Context.reportCodeChange();    	non-compiled	[CE]  ';'  expected	5	None	replace
30	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberInputCol);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parsingContext.setCurrentName(_numberInputCol);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberInputCol);	  transformNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	3	None	replace
31	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_numberBigInteger);  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  //  wasn't  an  int  natively?    [BUGGY]  _parsingContext.setCurrentName(_numberBigInteger);  [BUGGY]    }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	649	650	8	replace	_parsingContext.setCurrentName(_numberBigInteger);	  transformNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	3	None	replace
