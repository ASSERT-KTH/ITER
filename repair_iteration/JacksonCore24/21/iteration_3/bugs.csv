bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
2	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  0,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  0,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  0,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
3	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;	          _currToken    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
4	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( "Overflow  of  long  length   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Overflow    of    long    length   ");    _reportError( "Overflow  of  long  length   ");	  	compilable	  [FE]  JsonParseException  	8	8	add
5	[BUG]  [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( "Overflow  of  long  length   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( "Overflow  of  long  length   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Overflow    of    long    length   ");    _reportError( "Overflow  of  long  length   ");	  	compilable	  [FE]  JsonParseException  	8	8	add
6	[BUG]  [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError(, "Overflow  of  long  length   ");  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError(, "Overflow  of  long  length   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Overflow    of    long    length   ");    _reportError(, "Overflow  of  long  length   ");	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
7	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Integer.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
8	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + ", ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + ", ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	34	8	replace
9	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + ", ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + ", ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + ", ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	34	8	replace
10	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  got  unexpected  exception. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  got  unexpected  exception. ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  	34	8	replace
11	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  got  unexpected  exception. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  got  unexpected  exception. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  got  unexpected  exception. ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  	34	8	replace
12	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  a  value ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  a  value ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  	34	8	replace
13	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  a  value ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  a  value ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  a  value ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [com.fasterxml.jackson.core.json.async.NonBlockingJsonParser]  	34	8	replace
14	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken    =    JsonToken.FIELD_NAME;    _currToken  =  JsonToken.FIELD_NAME;	  	compilable	  [FE]  JsonParseException  	16	8	add
15	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  _currToken  =  JsonToken.FIELD_NAME;  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    _currToken  =  JsonToken.FIELD_NAME;	  	compilable	  [FE]  JsonParseException  	16	8	add
16	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  CharacterToken  _currToken  =  JsonToken.FIELD_NAME;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  CharacterToken  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    CharacterToken  _currToken  =  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
17	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken  ==  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken  ==  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    ||  _currToken  ==  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
18	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken!=  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken!=  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    ||  _currToken!=  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
19	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  numDesc);  [CE]  class  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  numDesc);	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+int.length()    +   "]   ");    	non-compiled	[CE]  class  expected	35	None	replace
20	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  charAt(numDesc);  [CE]  class  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  charAt(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ",  charAt(numDesc);	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+int.length()    +   "]   ");    	non-compiled	[CE]  class  expected	35	None	replace
21	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+numDesc+   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [ "+numDesc+   "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [ "+numDesc+   "] ");	  	compilable	  [FE]  JsonParseException  	31	8	add
23	[BUG]  [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+numDesc+   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [ "+numDesc+   "] ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+numDesc+   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [ "+numDesc+   "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [ "+numDesc+   "] ");	  	compilable	  [FE]  JsonParseException  	31	8	add
24	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
25	[BUG]  [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
27	[BUG]  [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
28	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
29	[BUG]  [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  	compilable	  [FE]  JsonParseException  	12	8	add
30	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
31	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range  [ "+numDesc+ "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")in  the  range  [ "+numDesc+ "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	compilable	  [FE]  JsonParseException  	32	8	replace
33	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range  [ "+numDesc+ "] ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range  [ "+numDesc+ "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")in  the  range  [ "+numDesc+ "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	compilable	  [FE]  JsonParseException  	32	8	replace
34	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getValue()  + "] ");  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getValue()  + "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getValue()  + "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
35	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+length+ "] ");  [CE]  cannot  find  symbol  length  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+length+ "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+length+ "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	non-compiled	[CE]  cannot  find  symbol  length	32	None	replace
36	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)over    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	27	8	replace
37	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)over    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	27	8	replace
38	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)over    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	27	None	replace
39	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length ",  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Overflow  of  long  length ",  numDesc);	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
40	[BUG]  [BUGGY]  _reportError( "Overflow  of  long  length ",  numDesc);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length ",  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Overflow  of  long  length ",  numDesc);	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length: "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Overflow  of  long  length: "  +  numDesc);	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
42	[BUG]  [BUGGY]  _reportError( "Overflow  of  long  length: "  +  numDesc);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length: "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Overflow  of  long  length: "  +  numDesc);	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
43	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE);  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE);	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    0,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
44	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    0,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
45	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                  JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    0,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
46	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MIN_VALUE));  [CE]  unclosed  string  literal  [FE]                    JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MIN_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE,  Long.MIN_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    0,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
47	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
48	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
49	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(numDesc);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonParseException  	21	8	replace
50	[BUG]  [BUGGY]  _reportError(numDesc);  [FE]  JsonParseException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(numDesc);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonParseException  	21	8	replace
51	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_STRING);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc,  JsonToken.VALUE_STRING);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonEOFException  	21	8	replace
52	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_STRING);  [FE]  JsonEOFException  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_STRING);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc,  JsonToken.VALUE_STRING);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonEOFException  	21	8	replace
53	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc,  JsonToken.VALUE_NUMBER_INT);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonEOFException  	21	8	replace
54	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_NUMBER_INT);  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc,  JsonToken.VALUE_NUMBER_INT);	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  JsonEOFException  	21	8	replace
55	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "] ");	  	compilable	  [FE]  JsonParseException  	33	8	add
56	[BUG]  [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "] ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "]   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range  [   "+getClass().getName()  +   "] ");	  	compilable	  [FE]  JsonParseException  	33	8	add
57	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value ",  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  long  value ",  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
58	[BUG]  [BUGGY]  _reportError( "Missing  long  value ",  numDesc);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value ",  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  long  value ",  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
59	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  long  value. ");	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
60	[BUG]  [BUGGY]  _reportError( "Missing  long  value. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  long  value. ");	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
61	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value: "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  long  value: "  +  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
62	[BUG]  [BUGGY]  _reportError( "Missing  long  value: "  +  numDesc);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value: "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  long  value: "  +  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
63	[BUG]  [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc,  t);  [CE]  cannot  find  symbol  t  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc,  t);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  String  numDesc: "  +  numDesc,  t);	          _reportError(   "Missing    String    numDesc:   "    +    numDesc);    	non-compiled	[CE]  cannot  find  symbol  t	5	None	replace
64	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc.toString());  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  String  numDesc: "  +  numDesc.toString());	          _reportError(   "Missing    String    numDesc:   "    +    numDesc);    	compilable	  [FE]  JsonParseException  	5	8	replace
65	[BUG]  [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc.toString());  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc.toString());  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  String  numDesc: "  +  numDesc.toString());	          _reportError(   "Missing    String    numDesc:   "    +    numDesc);    	compilable	  [FE]  JsonParseException  	5	8	replace
66	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    *    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
67	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  1000),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  1000),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  1000),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    *    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
68	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  DateTimeConstants.MILLIS_PER_SECOND),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  DateTimeConstants.MILLIS_PER_SECOND),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  DateTimeConstants.MILLIS_PER_SECOND),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    *    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
69	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.n ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.n ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
70	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.n ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.n ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.n ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")in  the  range.   ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
72	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range.   ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")in  the  range.   ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
73	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( "Missing  long  value   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Missing    long    value   ");    _reportError( "Missing  long  value   ");	  	compilable	  [FE]  JsonParseException  	6	8	add
74	[BUG]  [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( "Missing  long  value   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( "Missing  long  value   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    long    value   ");    _reportError( "Missing  long  value   ");	  	compilable	  [FE]  JsonParseException  	6	8	add
75	[BUG]  [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError(, "Missing  long  value   ");  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError(, "Missing  long  value   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    long    value   ");    _reportError(, "Missing  long  value   ");	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
76	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");	  	compilable	  [FE]  JsonParseException  	29	8	add
77	[BUG]  [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    _reportError( "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");	  	compilable	  [FE]  JsonParseException  	29	8	add
78	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    MIN_LONG_D),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
79	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                  JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    MIN_LONG_D),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
80	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( "Missing  String  numDesc:   "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Missing    String    numDesc:   "    +    numDesc);    _reportError( "Missing  String  numDesc:   "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	4	8	add
81	[BUG]  [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( "Missing  String  numDesc:   "  +  numDesc);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( "Missing  String  numDesc:   "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    String    numDesc:   "    +    numDesc);    _reportError( "Missing  String  numDesc:   "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	4	8	add
82	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( ",Missing  String  numDesc:   "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Missing    String    numDesc:   "    +    numDesc);    _reportError( ",Missing  String  numDesc:   "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	4	8	add
83	[BUG]  [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( ",Missing  String  numDesc:   "  +  numDesc);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError( ",Missing  String  numDesc:   "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    String    numDesc:   "    +    numDesc);    _reportError( ",Missing  String  numDesc:   "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	4	8	add
84	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	compilable	  [FE]  JsonParseException  	22	8	add
85	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	compilable	  [FE]  JsonParseException  	22	8	add
86	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT;	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
87	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    ||  _currToken!=  JsonToken.VALUE_NUMBER_INT;	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
88	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ((  JsonToken)_currToken).VALUE_NUMBER_INT;  [CE]  not  a  statement  [FE]          JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ((  JsonToken)_currToken).VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    ((  JsonToken)_currToken).VALUE_NUMBER_INT;	  	non-compiled	[CE]  not  a  statement	22	None	add
89	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	18	8	add
90	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	18	8	add
91	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  CharacterToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  CharacterToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    CharacterToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
92	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
93	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
94	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken    =    JsonToken.VALUE_STRING;    _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	14	8	add
95	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	14	8	add
96	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  CharacterToken  _currToken  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  CharacterToken  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    CharacterToken  _currToken  =  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
97	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  _currToken  ==  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
98	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken!=  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken!=  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  _currToken!=  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
99	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
100	[BUG]  [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
101	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
102	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
103	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
104	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
105	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
106	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
107	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
108	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    _reportInvalidEOF(numDesc);	  	compilable	  [FE]  JsonEOFException  	20	8	add
109	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  [FE]  JsonEOFException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    _reportInvalidEOF(numDesc);	  	compilable	  [FE]  JsonEOFException  	20	8	add
110	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
111	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
112	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
113	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  else  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
114	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]          JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
115	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]          JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
116	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]            JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
117	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]            JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_STRING)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
118	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  0,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  0,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  0,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	25	None	replace
119	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _throwInternal();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	3	8	replace
120	[BUG]  [BUGGY]  _throwInternal();  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _throwInternal();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	3	8	replace
121	[BUG]  [BUGGY]  _reportError();  [CE]  no  suitable  method  found  for  _reportError()  [FE]      UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError();	          _reportUnsupportedOperation();    	non-compiled	[CE]  no  suitable  method  found  for  _reportError()	3	None	replace
122	[BUG]  [BUGGY]  _reportUnsupportedOperation(numDesc);  [CE]  method  _reportUnsupportedOperation  in  class  JsonParser  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportUnsupportedOperation(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportUnsupportedOperation(numDesc);	          _reportUnsupportedOperation();    	non-compiled	[CE]  method  _reportUnsupportedOperation  in  class  JsonParser  cannot  be  applied  to  given  types;	3	None	replace
123	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
124	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
125	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	25	None	replace
126	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	25	None	replace
127	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.FIELD_NAME  +  1;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	17	None	replace
128	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  2,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    *    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
129	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
130	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
131	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                  JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
132	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  Integer  _currToken  =  JsonToken.FIELD_NAME;  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  Integer  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    Integer  _currToken  =  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  incompatible  types	16	None	add
133	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  JsonToken.FIELD_NAME  ==  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  JsonToken.FIELD_NAME  ==  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    ||  JsonToken.FIELD_NAME  ==  _currToken  =  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
134	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  JsonToken.FIELD_NAME!=  null;  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  JsonToken.FIELD_NAME!=  null;  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    ||  JsonToken.FIELD_NAME!=  null;  _currToken  =  JsonToken.FIELD_NAME;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( ",Overflow  of  long  length   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Overflow    of    long    length   ");    _reportError( ",Overflow  of  long  length   ");	  	compilable	  [FE]  JsonParseException  	8	8	add
136	[BUG]  [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( ",Overflow  of  long  length   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Overflow  of  long  length   ");  _reportError( ",Overflow  of  long  length   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Overflow    of    long    length   ");    _reportError( ",Overflow  of  long  length   ");	  	compilable	  [FE]  JsonParseException  	8	8	add
137	[BUG]  [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError(, "Missing  String  numDesc:   "  +  numDesc);  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  String  numDesc:   "  +  numDesc);  _reportError(, "Missing  String  numDesc:   "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    String    numDesc:   "    +    numDesc);    _reportError(, "Missing  String  numDesc:   "  +  numDesc);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
138	[BUG]  [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) "),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format(   "Numeric  value(%s)out  of  range  of  long  (%d  -  %s)   ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) "),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) "),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  	non-compiled	[CE]  	12	None	add
139	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  int  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  int  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    int  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  incompatible  types	18	None	add
140	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  JsonToken.VALUE_NUMBER_FLOAT  ==  null;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  JsonToken.VALUE_NUMBER_FLOAT  ==  null;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  JsonToken.VALUE_NUMBER_FLOAT  ==  null;	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
141	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  JsonToken.VALUE_NUMBER_FLOAT!=  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  JsonToken.VALUE_NUMBER_FLOAT!=  null;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  JsonToken.VALUE_NUMBER_FLOAT!=  null;	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
142	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+value+ "] ");  [CE]  cannot  find  symbol  value  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+value+ "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+value+ "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( ",Missing  long  value   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Missing    long    value   ");    _reportError( ",Missing  long  value   ");	  	compilable	  [FE]  JsonParseException  	6	8	add
144	[BUG]  [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( ",Missing  long  value   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Missing  long  value   ");  _reportError( ",Missing  long  value   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Missing    long    value   ");    _reportError( ",Missing  long  value   ");	  	compilable	  [FE]  JsonParseException  	6	8	add
145	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  ' "+getMessage()  + "'] ");  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  ' "+getMessage()  + "'] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  expecting  ' "+getMessage()  + "'] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
146	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  was  expecting  ' "+getMessage()  + "'] ");  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  was  expecting  ' "+getMessage()  + "'] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "],  but  was  expecting  ' "+getMessage()  + "'] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+getClass().getName()    +   "]   ");    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
147	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Integer.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
148	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+Integer.MAX_VALUE  + "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+Integer.MAX_VALUE  + "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+int.length()    +   "]   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
149	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+Integer.MAX_VALUE  + "] ");  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+Integer.MAX_VALUE  + "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+Integer.MAX_VALUE  + "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+int.length()    +   "]   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
150	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + ", ");  [CE]  class  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + ", ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + ", ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+int.length()    +   "]   ");    	non-compiled	[CE]  class  expected	35	None	replace
151	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  long  value "  +  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
152	[BUG]  [BUGGY]  _reportError( "Missing  long  value "  +  numDesc);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  long  value "  +  numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  long  value "  +  numDesc);	          _reportError(   "Missing    long    value   ");    	compilable	  [FE]  JsonParseException  	7	8	replace
153	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)over    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	27	None	replace
154	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_STRING  +  1;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	15	None	replace
155	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE);  }  [CE]  ';'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE);  }	  	non-compiled	[CE]  ';'  expected	2	None	add
156	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE);  }  [CE]  incompatible  types  [FE]      UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE);  }	  	non-compiled	[CE]  incompatible  types	2	None	add
157	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CE]  ';'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_reportUnsupportedOperation())  {  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }	  	non-compiled	[CE]  ';'  expected	2	None	add
158	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation());  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CE]  illegal  start  of  type  [FE]          UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_reportUnsupportedOperation());  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_reportUnsupportedOperation());  _reportUnsupportedOperation();  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
159	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    MIN_LONG_D),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
160	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CE]  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  }	  	non-compiled	[CE]  	20	None	add
161	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc);  }  [CE]  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc);  }	  	non-compiled	[CE]  	20	None	add
162	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE));  }  [CE]  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE));  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE));  }	  	non-compiled	[CE]  	20	None	add
163	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  }  [CE]  [FE]          JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_reportInvalidEOF(numDesc);  _reportInvalidEOF(numDesc);  }  else  {  _longIntegerDesc(numDesc,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  }	  	non-compiled	[CE]  	20	None	add
164	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format( "Numeric  value(%s)overflow  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
165	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
166	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format( "Numeric  value(%s)overflow  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
167	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	13	8	replace
168	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF();	          _reportUnsupportedOperation();    	compilable	  [FE]  JsonEOFException  	3	8	replace
169	[BUG]  [BUGGY]  _reportInvalidEOF();  [FE]  JsonEOFException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF();  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF();	          _reportUnsupportedOperation();    	compilable	  [FE]  JsonEOFException  	3	8	replace
170	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  0,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  0,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  0,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
171	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length: ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Overflow  of  long  length: ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
172	[BUG]  [BUGGY]  _reportError( "Overflow  of  long  length: ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length: ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Overflow  of  long  length: ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
173	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc,  NR_UNKNOWN);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Missing  String  numDesc: "  +  numDesc,  NR_UNKNOWN);	          _reportError(   "Missing    String    numDesc:   "    +    numDesc);    	compilable	  [FE]  JsonParseException  	5	8	replace
174	[BUG]  [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc,  NR_UNKNOWN);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Missing  String  numDesc: "  +  numDesc,  NR_UNKNOWN);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Missing  String  numDesc: "  +  numDesc,  NR_UNKNOWN);	          _reportError(   "Missing    String    numDesc:   "    +    numDesc);    	compilable	  [FE]  JsonParseException  	5	8	replace
175	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  Integer  _currToken  =  JsonToken.VALUE_STRING;  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  Integer  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    Integer  _currToken  =  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  incompatible  types	14	None	add
176	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  JsonToken.VALUE_STRING!=  null;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  JsonToken.VALUE_STRING!=  null;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  JsonToken.VALUE_STRING!=  null;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
177	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  JsonToken.VALUE_STRING  ==  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  JsonToken.VALUE_STRING  ==  null;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  JsonToken.VALUE_STRING  ==  null;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
178	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT);	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
179	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Overflow  of  long  length. ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
180	[BUG]  [BUGGY]  _reportError( "Overflow  of  long  length. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  long  length. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Overflow  of  long  length. ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  short  length ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Overflow  of  short  length ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
182	[BUG]  [BUGGY]  _reportError( "Overflow  of  short  length ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Overflow  of  short  length ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Overflow  of  short  length ");	          _reportError(   "Overflow    of    long    length   ");    	compilable	  [FE]  JsonParseException  	9	8	replace
183	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  numDesc),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
184	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
185	[BUG]  [BUGGY]  _verifyValueWrite( "Missing  long  value ");  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _verifyValueWrite( "Missing  long  value ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_verifyValueWrite( "Missing  long  value ");	          _reportError(   "Missing    long    value   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
186	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken  ==  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  ||  _currToken  ==  JsonToken.FIELD_NAME);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.FIELD_NAME;    ||  _currToken  ==  JsonToken.FIELD_NAME);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
187	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_LONG;  [CE]  cannot  find  symbol  VALUE_LONG  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_LONG;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_LONG;	          _currToken    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	23	None	replace
188	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]                JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  1),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long(%d    -    MIN_LONG_D),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
189	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    String.valueOf(numDesc),    Integer.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken  =  JsonToken.VALUE_NULL;	  _currToken    =    JsonToken.VALUE_STRING;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
191	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_NULL;	  _currToken    =    JsonToken.VALUE_STRING;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
192	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+count+ "] ");  [CE]  cannot  find  symbol  count  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+count+ "] ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+count+ "] ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range    [   "+numDesc+   "]   ");    	non-compiled	[CE]  cannot  find  symbol  count	32	None	replace
193	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken  ==  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
194	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken  ==  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
195	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
196	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
197	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
198	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
199	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
200	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportUnsupportedOperation();  if(_currToken!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportUnsupportedOperation();    if(_currToken!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	2	8	add
201	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_LONG_D),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
202	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_Desc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_Desc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  MIN_Desc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)overflow    of    long(%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	25	None	replace
203	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Integer.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
204	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [CE]  <identifier>  expected  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	non-compiled	[CE]  <identifier>  expected	22	None	add
205	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]      JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
206	[BUG]  [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _longIntegerDesc(numDesc);  [CE]  invalid  method  declaration;  return  type  required  [FE]        JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _currToken  =  JsonToken.VALUE_NUMBER_INT;  _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _longIntegerDesc(numDesc);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _currToken    =    JsonToken.VALUE_NUMBER_INT;    _currToken  =  JsonToken.VALUE_NUMBER_INT;  }  _longIntegerDesc(numDesc);	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	add
207	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
208	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
209	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_LONG)  {  _reportInvalidEOF(numDesc);  }  [CE]  cannot  find  symbol  VALUE_LONG  [FE]      JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_LONG)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_LONG)  {  _reportInvalidEOF(numDesc);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	20	None	add
210	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
211	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportInvalidEOF(numDesc);  }  [FE]  JsonEOFException  [FE]        JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportInvalidEOF(numDesc);  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportInvalidEOF(numDesc);  }  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportInvalidEOF(numDesc);  }	  	compilable	  [FE]  JsonEOFException  	20	8	add
212	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING);  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  _currToken  ==  JsonToken.VALUE_STRING);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
213	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( ",Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    _reportError( ",Numeric  value(   "+numDesc+   ")not  in  the  range.   ");	  	compilable	  [FE]  JsonParseException  	29	8	add
214	[BUG]  [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( ",Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]          _reportError(   "Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  _reportError( ",Numeric  value(   "+numDesc+   ")not  in  the  range.   ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	                _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    _reportError( ",Numeric  value(   "+numDesc+   ")not  in  the  range.   ");	  	compilable	  [FE]  JsonParseException  	29	8	add
215	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [9223372036854775817  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ ", "+getClass().getName());  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ ", "+getClass().getName());	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [9223372036854775817  	21	8	replace
216	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ ", "+getClass().getName());  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [9223372036854775817  [FE]    JsonEOFException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ ", "+getClass().getName());  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ ", "+getClass().getName());	  _reportInvalidEOF(numDesc);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Numeric  value(9223372036854775817)not  in  the  range  [9223372036854775817  	21	8	replace
217	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  not  a  statement	18	None	add
218	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  <identifier>  expected	18	None	add
219	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.. ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
220	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.. ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Numeric  value( "+numDesc+ ")not  in  the  range.. ");	          _reportError(   "Numeric    value(   "+numDesc+   ")not    in    the    range.   ");    	compilable	  [FE]  JsonParseException  	30	8	replace
221	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Unsupported  operation ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError( "Unsupported  operation ");	          _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	3	8	replace
222	[BUG]  [BUGGY]  _reportError( "Unsupported  operation ");  [FE]  JsonParseException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {      [BUGGY]  _reportError( "Unsupported  operation ");  [BUGGY]      _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError( "Unsupported  operation ");	          _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	3	8	replace
