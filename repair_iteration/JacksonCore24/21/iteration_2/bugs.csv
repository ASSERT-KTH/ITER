bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  String.valueOf(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
2	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	3	8	add
3	[BUG]  [BUGGY]      _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	3	8	add
4	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Missing  String  numDesc: "  +  numDesc);  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Missing  String  numDesc: "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	3	8	add
5	[BUG]  [BUGGY]      _reportError( "Missing  String  numDesc: "  +  numDesc);  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Missing  String  numDesc: "  +  numDesc);  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Missing  String  numDesc: "  +  numDesc);	  	compilable	  [FE]  JsonParseException  	3	8	add
6	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Missing  long  value ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Missing  long  value ");	  	compilable	  [FE]  JsonParseException  	3	8	add
7	[BUG]  [BUGGY]      _reportError( "Missing  long  value ");  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Missing  long  value ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Missing  long  value ");	  	compilable	  [FE]  JsonParseException  	3	8	add
8	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Overflow  of  long  length ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Overflow  of  long  length ");	  	compilable	  [FE]  JsonParseException  	3	8	add
9	[BUG]  [BUGGY]      _reportError( "Overflow  of  long  length ");  [FE]  JsonParseException  [FE]          AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Overflow  of  long  length ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Overflow  of  long  length ");	  	compilable	  [FE]  JsonParseException  	3	8	add
10	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]          JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  numDesc,  0,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
11	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
12	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	6	8	replace
13	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	compilable	  [FE]  JsonParseException  	6	8	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken  =  JsonToken.VALUE_STRING;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
15	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_STRING;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken  =  JsonToken.FIELD_NAME;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
17	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.FIELD_NAME;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
19	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
20	[BUG]  [BUGGY]  [FE]  JsonEOFException  [FE]          AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportInvalidEOF(numDesc);  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	_reportInvalidEOF(numDesc);	      	compilable	  [FE]  JsonEOFException  	4	8	replace
21	[BUG]  [BUGGY]  _reportInvalidEOF(numDesc);  [FE]  JsonEOFException  [FE]          AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportInvalidEOF(numDesc);  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportInvalidEOF(numDesc);	      	compilable	  [FE]  JsonEOFException  	4	8	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	compilable	  [FE]  JsonParseException  	3	8	add
23	[BUG]  [BUGGY]      _currToken  =  JsonToken.VALUE_NUMBER_INT;  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _currToken  =  JsonToken.VALUE_NUMBER_INT;	  	compilable	  [FE]  JsonParseException  	3	8	add
24	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]          JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  numDesc,  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    numDesc,    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
25	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
26	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)overflow  of  long(%d  -  %s),  String.valueOf(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    String.valueOf(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
27	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)over  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
28	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [CE]  cannot  find  symbol  [FE]          JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long  (%d  -  %s) ",  _byteDesc(numDesc),  Integer.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s)   ",    _byteDesc(numDesc),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range. ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range. ");	  	compilable	  [FE]  JsonParseException  	3	8	add
30	[BUG]  [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range. ");  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range. ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range. ");	  	compilable	  [FE]  JsonParseException  	3	8	add
31	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ "] ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ "] ");	  	compilable	  [FE]  JsonParseException  	3	8	add
32	[BUG]  [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ "] ");  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ "] ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+numDesc+ "] ");	  	compilable	  [FE]  JsonParseException  	3	8	add
33	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "] ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	add	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "] ");	  	compilable	  [FE]  JsonParseException  	3	8	add
34	[BUG]  [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "] ");  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "] ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+getClass().getName()  + "] ");	  	compilable	  [FE]  JsonParseException  	3	8	add
35	[BUG]  [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ");  [CE]  class  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]      _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ");  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	        _reportError( "Numeric  value( "+numDesc+ ")not  in  the  range  [ "+int.length()  + "] ");	  	non-compiled	[CE]  class  expected	3	None	add
36	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  *  %s),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
37	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]          JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
38	[BUG]  [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [CE]  unclosed  string  literal  [FE]            JsonParseException    [CONTEXT]    protected  void  reportOverflowLong(String  numDesc)  throws  IOException  {    [BUGGY]  _reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));  [BUGGY]    _longIntegerDesc(numDesc),  Long.MIN_VALUE,  Long.MAX_VALUE));  }  [CLASS]  ParserMinimalBase  [METHOD]  reportOverflowLong  [RETURN_TYPE]  void  String  numDesc  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  t  String  numDesc  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	582	583	8	replace	_reportError(String.format( "Numeric  value(%s)out  of  range  of  long(%d  -  MIN_LONG_D),  Long.MIN_VALUE,  Long.MAX_VALUE));	  _reportError(String.format(   "Numeric    value(%s)out    of    range    of    long    (%d    -    %s),    Long.MIN_VALUE,    Long.MAX_VALUE));    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
